{
	"page": 1,
	"limit": 30,
	"pages": 1,
	"total": 13,
	"_links": {
		"self": {
			"href": "http:\/\/app.wallabag.it\/api\/entries?sort=created&order=desc&tags=&since=0&detail=full&page=1&perPage=30"
		},
		"first": {
			"href": "http:\/\/app.wallabag.it\/api\/entries?sort=created&order=desc&tags=&since=0&detail=full&page=1&perPage=30"
		},
		"last": {
			"href": "http:\/\/app.wallabag.it\/api\/entries?sort=created&order=desc&tags=&since=0&detail=full&page=1&perPage=30"
		}
	},
	"_embedded": {
		"items": [
			{
				"is_archived": 0,
				"is_starred": 0,
				"user_name": "justin",
				"user_email": "justinbrooks@fastmail.com",
				"user_id": 2,
				"tags": [],
				"is_public": false,
				"id": 15,
				"uid": null,
				"title": "Slope-intercept library design - Jake Wharton",
				"url": "https:\/\/jakewharton.com\/slope-intercept-library-design\/",
				"hashed_url": "8c672135f585419cbebd45ebb076c8f682c3a6f2",
				"origin_url": null,
				"given_url": "https:\/\/jakewharton.com\/slope-intercept-library-design\/",
				"hashed_given_url": "8c672135f585419cbebd45ebb076c8f682c3a6f2",
				"archived_at": null,
				"content": "<p>The equation <code class=\"highlighter-rouge\">y=mx+b<\/code> defines a line in slope-intercept form. The line will intercept the y-axis at the value <code class=\"highlighter-rouge\">b<\/code> and for each change in <code class=\"highlighter-rouge\">x<\/code> its slope (the amount the line goes up or down) will change by <code class=\"highlighter-rouge\">m<\/code>.<\/p><p>Slope-intercept gives me a way to think about the design of libraries in relation to each other. The intercept is the initial cost of learning and setup for a library, and the slope is how the library’s complexity changes over time. There’s no real units here and the values are entirely subjective. Let’s try it!<\/p><h3 id=\"picasso\">Picasso<\/h3><p>Exactly 10 years ago today I introduced Picasso internally at Square. As an image loading library for Android, its primary selling point was a low intercept. It required no real configuration and only one line of code (even in a <code class=\"highlighter-rouge\">ListView<\/code> adapter).<\/p><div class=\"language-java highlighter-rouge highlight\"><pre>Picasso.with(context).load(\"https:\/\/...\").into(imageView);\n<\/pre><\/div><p>At the time this was a refreshing change from the existing libraries which required a lot of up-front and per-request configuration.<\/p><p>The downside, however, was that as your needs grow the slope of complexity also grows faster than desired. Configuring the global instance, managing multiple instances, intercepting requests, and transforming images are all possible but more difficult than if the library was designed differently.<\/p><h3 id=\"retrofit\">Retrofit<\/h3><p>Retrofit is a declarative HTTP client abstraction for the JVM and Android. It requires configuration of a central object before you can use it to create instances of service interfaces.<\/p><div class=\"language-java highlighter-rouge highlight\"><pre>interface GitHubService {\n  @GET(\"users\/{user}\/repos\")\n  Call&lt;List&lt;Repo&gt;&gt; listRepos(@Path(\"user\") String user);\n}\nvar retrofit = new Retrofit.Builder()\n  .baseUrl(\"https:\/\/api.github.com\/\")\n  .addConverter(MoshiJsonConverter.create())\n  .build();\nvar service = retrofit.create(GitHubService.class);\n<\/pre><\/div><p>This up-front configuration gives Retrofit a higher intercept on the y-axis. Exposure to these APIs gives you an entrypoint to discover functionality and encourages you to manage their lifetimes in an efficient way for your usage allowing the slope of complexity to not be as steep.<\/p><h3 id=\"dagger\">Dagger<\/h3><p>Dagger is an annotation processor-based dependency injection library for the JVM and Android. It has almost no API of its own aside from a handful of annotations. In order to use Dagger you need to learn dependency injection as a concept, learn how to build the various types to which its annotations apply, and then decide how dependency injection will fit into your architecture. It’s just about the least turn-key library I’ve ever used which gives it an extremely high conceptual intercept.<\/p><div class=\"language-java highlighter-rouge highlight\"><pre>@Component(modules = {\n  AppModule.class\n})\ninterface AppComponent {\n  App app();\n}\n@Module\nfinal class AppModule {\n  @Provides static Database provideDatabase() {\n    return new Database();\n  }\n}\nfinal class App {\n  private Database database;\n  @Inject App(Database database) {\n    this.database = database;\n  }\n  void run() {\n    System.out.println(database.getUsers());\n  }\n  public static void main(String... args) {\n    AppComponent.create().app().run();\n  }\n}\n<\/pre><\/div><p>That’s a lot of lines to basically do <code class=\"highlighter-rouge\">new App(new Database()).run()<\/code>! But of course nothing stays that simple.<\/p><p>Once you have Dagger fully integrated into a large application, adding and connecting new dependencies is as easy as adding a parameter. The library automatically figures out how to wire the two together and shares instances across pre-defined lifetimes. Its slope of complexity is extremely shallow.<\/p><p>The slope-intercept evaluations of Picasso, Retrofit, and Dagger look roughly like this:<\/p><p><img src=\"https:\/\/jakewharton.com\/static\/post-image\/slope-intercept-1.png\" alt=\"\" referrerpolicy=\"no-referrer\" \/><\/p><p>What are the units? It doesn’t matter! This is a subjective approximation of concepts.<\/p><h3 id=\"design\">Design<\/h3><p>Slope-intercept evaluation really shines when designing new libraries. It serves as a framework for discussing the amount of complexity you front-load onto a user and the amount which is spread over the continued usage of a library.<\/p><p>Can some parameter be specified globally or should it be passed with each call? Should it be available in both locations with overriding behavior? Is there an implicit default or should you always explicitly require that it is supplied?<\/p><p>As answers to those questions are being determined, you can start to look at the library as a whole. Can multiple parameters become a composite type? Do certain parameters imply defaults for the others? Are too many concepts being pushed into global configuration rather than local?<\/p><p>And finally, you can compare your design against others to determine if you’re comfortable with its approximate slope and intercept. Picasso was built to combat image loading libraries whose complexity was that of Dagger. With the initial design I missed the mark and over-corrected to be too simple. Being closer to Retrofit would have been a much more comfortable place for the long-term health of the library.<\/p><h3 id=\"layering\">Layering<\/h3><p>Ideally every library would have an intercept near zero and a slope near zero. That is, a library which is trivial to get started with and whose API can accommodate every use case over time without learning anything new.<\/p><p>In practice this never happens simply due to the nature of complexity. You can’t build libraries to solve non-trivial tasks while keeping the API basic and supporting myriad use cases. But what you can do is cheat by providing multiple of these hypothetical slope-intercept lines through layering.<\/p><p>Providing multiple APIs at different levels of abstraction allows solving 80% of use cases with a simple API, then 80% of the remaining 20% with a more detailed API, and then the final slice with a low-level API. Each layer is built on top of the next one with a measured reduction in API complexity.<\/p><p>In an HTTP client, for example, you can expose the declarative API for the majority, an imperative API for the minority, and then low-level protocol handlers for exotic needs. If a layer does not meet your requirements then you can always drop down to the next one for more control but also more responsibility.<\/p><p>And now what you’ve created is that exact same graph as above, except representing one library and its three layers of APIs.<\/p><p><img src=\"https:\/\/jakewharton.com\/static\/post-image\/slope-intercept-2.png\" alt=\"\" referrerpolicy=\"no-referrer\" \/><\/p><p>This is certainly no exact science. But perhaps it will help you build a better library in the future. It’s helped me!<\/p><p class=\"signature\">— Jake Wharton<\/p>",
				"created_at": "2022-04-08T01:05:08+0000",
				"updated_at": "2022-04-08T01:05:08+0000",
				"published_at": "2022-04-05T00:00:00+0000",
				"published_by": null,
				"starred_at": null,
				"annotations": [],
				"mimetype": "text\/html",
				"language": "en",
				"reading_time": 5,
				"domain_name": "jakewharton.com",
				"preview_picture": "https:\/\/jakewharton.com\/static\/post-image\/slope-intercept-1.png",
				"http_status": "200",
				"headers": {
					"content-type": "text\/html",
					"content-length": "13322",
					"connection": "keep-alive",
					"date": "Thu, 07 Apr 2022 22:05:36 GMT",
					"last-modified": "Tue, 05 Apr 2022 14:38:44 GMT",
					"etag": "\"dabaff62ffec82c011a22a28a26462e9\"",
					"server": "AmazonS3",
					"x-cache": "Hit from cloudfront",
					"via": "1.1 91edf3d46098c7786cee1900c8e34990.cloudfront.net (CloudFront)",
					"x-amz-cf-pop": "IAD66-C2",
					"x-amz-cf-id": "F__l2zBUftHRaYw2g573AAf8e46cSqs6HnNZb2uMciyw_TiIdsVwrA==",
					"age": "10773"
				},
				"_links": {
					"self": {
						"href": "\/api\/entries\/15"
					}
				}
			},
			{
				"is_archived": 0,
				"is_starred": 0,
				"user_name": "justin",
				"user_email": "justinbrooks@fastmail.com",
				"user_id": 2,
				"tags": [],
				"is_public": false,
				"id": 14,
				"uid": null,
				"title": "Using URLSession’s async\/await-powered APIs | WWDC by Sundell & Friends",
				"url": "https:\/\/wwdcbysundell.com\/2021\/using-async-await-with-urlsession\/",
				"hashed_url": "63c079c1ceb0332ca95438fe4caaf6912ca02baa",
				"origin_url": null,
				"given_url": "https:\/\/wwdcbysundell.com\/2021\/using-async-await-with-urlsession\/",
				"hashed_given_url": "63c079c1ceb0332ca95438fe4caaf6912ca02baa",
				"archived_at": null,
				"content": "<p>One of the major new features that are being introduced in Swift 5.5 is async\/await, and as part of their latest SDKs, Apple have also updated many of their built-in asynchronous APIs to take advantage of this new feature.<\/p><p>In this article, let’s take a look at <code>URLSession<\/code> specifically, and how we can now use the async\/await pattern to perform tasks such as data fetches, downloads and uploads.<\/p><p>Loading some form of <code>Data<\/code> using a standard <code>GET<\/code> request is arguably the most common type of network call that apps perform on a regular basis, and using async\/await, this can now be done using just a single line of code:<\/p><pre>let (data, response) = try await URLSession.shared.data(from: url)\n<\/pre><p>Apart from the new <code>await<\/code> keyword, the above call uses the standard <code>try<\/code> keyword to indicate that an <a href=\"https:\/\/swiftbysundell.com\/basics\/error-handling\">error might be thrown<\/a>, and then stores the result using a deconstructed tuple that’s made up of two parts — the <code>data<\/code> that was downloaded, and the <code>response<\/code> that was received.<\/p><p>Taking things a bit further, here’s how we could use the above new API to first load a set of JSON data from a given URL, and then decode that data using Swift’s built-in <a href=\"https:\/\/swiftbysundell.com\/basics\/codable\">Codable API<\/a>:<\/p><pre>struct ItemLoader {\n    var session = URLSession.shared\n    func loadItems(from url: URL) async throws -&gt; [Item] {\n        let (data, _) = try await session.data(from: url)\n        let decoder = JSONDecoder()\n        return try decoder.decode([Item].self, from: data)\n    }\n}\n<\/pre><p>Since we’re calling an asynchronous method within <code>loadItems<\/code>, that method itself also needs to be marked with the <code>async<\/code> keyword, and we can once again use <code>try<\/code> (this time in combination with marking our method with the <code>throws<\/code> keyword) to propagate any error that was encountered.<\/p><p>Next, let’s take a look at how we can also use the async\/await pattern to perform file downloads. The difference between such requests and the <code>data<\/code> API that we just took a look at above is that download tasks write their results to disk, rather than storing them as <code>Data<\/code> values in memory, which is especially useful for larger pieces of data, such as files.<\/p><p>So when calling the <code>download<\/code> API (which can once again be done using the new <code>await<\/code> keyword), we get back a <code>localURL<\/code> at which the downloaded file was stored, rather than a <code>Data<\/code> representation of its contents:<\/p><pre>struct FileLoader {\n    var session = URLSession.shared\n    func downloadFile(from url: URL) async throws -&gt; File {\n        let (localURL, _) = try await session.download(from: url)\n        return File(url: localURL)\n    }\n}\n<\/pre><p>We could of course have returned our <code>localURL<\/code> value as-is, but in this case, we’re wrapping it within a simple <code>File<\/code> struct to clearly indicate that we’re actually returning a reference to a file.<\/p><p>To perform an upload, we can’t simply use a plain <code>URL<\/code> as our destination, but must instead pass a <code>URLRequest<\/code> instance that contains additional metadata, for example what HTTP method that we wish to use.<\/p><p>In this example we’re using a <code>POST<\/code> request to upload a piece of <code>Data<\/code> to a given URL, and we’re then returning the <code>URLResponse<\/code> that was received:<\/p><pre>struct DataUploader {\n    var session = URLSession.shared\n    func upload(_ data: Data, to url: URL) async throws -&gt; URLResponse {\n        var request = URLRequest(url: url)\n        request.httpMethod = \"POST\"\n        let (responseData, response) = try await session.upload(\n            for: request,\n            from: data\n        )\n        return response\n    }\n}\n<\/pre><p>Note how we probably should’ve ignored the <code>responseData<\/code> value using the same underscore technique that we used earlier (given that we’re not actually using that value), but in this example I thought it was important to include it for additional clarity.<\/p><p>So that’s three different ways to use async\/await with <code>URLSession<\/code>. In upcoming articles, we’ll explore this new pattern further, and we’ll also take a look at how we can connect <code>async<\/code> calls to things like SwiftUI views.<\/p><p>For more information about <code>URLSession<\/code> and these new APIs, make sure to check out <a href=\"https:\/\/developer.apple.com\/documentation\/foundation\/urlsession\">Apple’s official documentation<\/a>.<\/p><p>Thanks for reading!<\/p><a class=\"supporter\" href=\"https:\/\/www.revenuecat.com\/?utm_source=sponsorship&amp;utm_medium=sundell&amp;utm_campaign=wwdc\">\n<div class=\"name\"><img src=\"https:\/\/wwdcbysundell.com\/images\/2021\/supporters\/revenueCat.png\" alt=\"RevenueCat\" referrerpolicy=\"no-referrer\" \/>RevenueCat<\/div>\n<p>Easily build and manage iOS and Android in-app purchases. With just a few lines of code RevenueCat provides IAP infrastructure, customer analytics, data integrations, and gives you time back from dealing with edge cases and updates across all platforms.<\/p>\n<\/a>",
				"created_at": "2022-04-01T20:01:41+0000",
				"updated_at": "2022-04-01T20:01:41+0000",
				"published_at": null,
				"published_by": null,
				"starred_at": null,
				"annotations": [],
				"mimetype": "text\/html",
				"language": "en",
				"reading_time": 3,
				"domain_name": "wwdcbysundell.com",
				"preview_picture": "https:\/\/wwdcbysundell.com\/images\/2021\/supporters\/revenueCat.png",
				"http_status": "200",
				"headers": {
					"age": "200",
					"cache-control": "max-age=1800",
					"cf-cache-status": "HIT",
					"cf-ray": "6f53eb097032810b-ORD",
					"content-type": "text\/html",
					"expect-ct": "max-age=604800, report-uri=\"https:\/\/report-uri.cloudflare.com\/cdn-cgi\/beacon\/expect-ct\"",
					"last-modified": "Fri, 11 Jun 2021 20:13:39 GMT",
					"nel": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}",
					"report-to": "{\"endpoints\":[{\"url\":\"https:\\\/\\\/a.nel.cloudflare.com\\\/report\\\/v3?s=6X2UXPQt\/7sdMg\/DGsUbHx374o39ytCxtmBatio4lmyjb7FZUZ7rGkAiOAeB0+7jMSMYxa8Tpkjo5tHUCnEK8VGiTeyMAoMkSXNJ5Lmf1MueGqv1BNohdSA6se3M6DjJWbMQqw==\"}],\"group\":\"cf-nel\",\"max_age\":604800}",
					"server": "cloudflare",
					"vary": "Accept-Encoding",
					"date": "Fri, 01 Apr 2022 20:01:41 GMT",
					"transfer-encoding": "chunked"
				},
				"_links": {
					"self": {
						"href": "\/api\/entries\/14"
					}
				}
			},
			{
				"is_archived": 0,
				"is_starred": 0,
				"user_name": "justin",
				"user_email": "justinbrooks@fastmail.com",
				"user_id": 2,
				"tags": [],
				"is_public": false,
				"id": 13,
				"uid": null,
				"title": "Pastor Tim Keller on future of PCA - Warhorn Media",
				"url": "https:\/\/warhornmedia.com\/2022\/03\/24\/keller-future-of-pca\/",
				"hashed_url": "92f73ec7c48d84ce4de3e0624d870a0dd7d28fac",
				"origin_url": null,
				"given_url": "https:\/\/warhornmedia.com\/2022\/03\/24\/keller-future-of-pca\/",
				"hashed_given_url": "92f73ec7c48d84ce4de3e0624d870a0dd7d28fac",
				"archived_at": null,
				"content": "<p><iframe class=\"wp-embedded-content\" sandbox=\"allow-scripts\" title=\"Pastor Tim Keller on future of the PCA\" width=\"100%\" height=\"180\" frameborder=\"no\" scrolling=\"no\" src=\"https:\/\/share.transistor.fm\/e\/756aae0c#?secret=rLnsaqYmO0\" data-secret=\"rLnsaqYmO0\">[embedded content]<\/iframe><br \/>\nThis is a long piece on the future of the Presbyterian Church in America in light of the PCA’s institutional endorsement of Side B self-affirming gays as church officers. What has brought this matter to a head is Covenant Theological Seminary’s alumni holding Side B Revoice conferences <a href=\"https:\/\/revoice.us\/\">each year<\/a>.<\/p>\n<p>We have now seen the denomination’s final refusals to say “no” or discipline any of Revoice’s principals, including Covenant Theological Seminary, Missouri Presbytery, Memorial Presbyterian Church, Greg Johnson, or the other PCA institutions and men who have created and promoted this evil.<\/p>\n<p>They may, to facilitate a mop-up operation, kick one or two men out or refuse to hold their credentials later after years of defending them, just as they did out in Pacific Northwest Presbytery with Federal Vision’s Peter Leithart. Nevertheless, one swallow doth not a summer make, especially when that swallow has been hanging around all summer, and his presence is only acknowledged in September.<\/p>\n<p>In October of last year, the PCA’s highest court, the Standing Judicial Commission, <a href=\"https:\/\/byfaithonline.com\/wp-content\/uploads\/2021\/10\/2020-12-Speck-Decision-on-Complaint-10.21.2021-1.pdf\">ruled<\/a> in favor of Revoice in the case <em>Speck vs. Missouri Presbytery.<\/em> Then more recently, the presbyteries of the PCA turned down two Overtures (23 and 37) written to keep Side B self-affirming gays from being church officers in the PCA.<\/p>\n<p>One of the main controversies in the PCA has been whether Side B self-affirming gays like Greg Johnson, the host pastor of the first Revoice conference who holds his MDiv from Covenant Theological Seminary and is a member of Missouri Presbytery, should be allowed to continue to be a PCA pastor. Pastor Johnson is loudly Side B and he’s published his self-affirming gayness far and wide, including a recent book with Zondervan and articles in <em>USA Today<\/em> and <em>Christianity Today<\/em>.<\/p>\n<p>There is still a sizeable minority in the PCA who believe Side B self-affirming gays such as Pastor Johnson should not be members of Christ’s church, let alone deacons, elders, and pastors. Yet the PCA’s SJC and presbyteries have now repudiated that position and their repudiation is firm.<\/p>\n<p>Side B self-affirming gays are thus now permanently approved as members, deacons, elders, and pastors of the Presbyterian Church in America. No court of the PCA has loved Pastor Johnson enough to discipline him or his Side B Revoicers.<\/p>\n<p>Thus the question, “Where to now?”<\/p>\n<p>Pastor Tim Keller has given his answer to this question and we’ll examine his answer. From near the beginning of the PCA, Pastor Keller has represented the soft liberalism of northern Evangelicalism within the denomination. He’s made a name for himself by promoting women officers, theistic evolution, women teaching and exercising authority over men in the church, and of course the Side B self-affirming gays of Revoice.<\/p>\n<p>This week, the denomination’s house organ, <em>byFaith<\/em>, published an article they had solicited from Pastor Keller on the portentous occasion of the defeat of the overtures opposing Side B Revoicers. Pastor Keller has retired from the pastorate, but he hasn’t yet retired from PCA politics. Here then is his response to Revoice’s victories as it was published in the PCA’s <a href=\"https:\/\/byfaithonline.com\/whats-happening-in-the-pca\/\"><em>byFaith<\/em><\/a> this past week.<\/p>\n<p class=\"c2\"><em>(NOTE: Earlier, we’ve <a href=\"https:\/\/warhornmedia.com\/2022\/03\/11\/the-pca-and-revoice-overtures-23-37-are-defeated\/\">written<\/a> about the rejection of Overtures 23 and 37 by the PCA’s presbyteries and <a href=\"https:\/\/docs.google.com\/spreadsheets\/d\/1k0xdOpSv1U-sRlS2jC32ZwVF_GVdm7RKS0xIIQrzZi4\/edit#gid=0\">here<\/a> are the voting tallies. These failed overtures called for churches and presbyteries to examine candidates for church office (including candidates for ordination to pastoral ministry) on the matter of whether or not they identified as Side B self-affirming gays; and if so, the overtures mandated those men’s exclusion from church office.)<\/em><\/p>\n<p>Pastor Keller’s complete text is indented as quotes below, with his emphases.<\/p>\n<p class=\"c3\">* * *<\/p>\n<blockquote>\n<h4 class=\"p1\">The New Narrative<\/h4>\n<p class=\"p1\">The failure of Overtures 23 and 37 to receive approval of two-thirds of our presbyteries has given rise to many interpretations of “what this means about the state of the PCA.” <\/p>\n<\/blockquote>\n<p>Pastor Keller has some heavy lifting to do. The rejection of these overtures is his burden given that the hegemony of his Kellerites over the PCA is now secure.<\/p>\n<p>The question is how Pastor Keller will wear their victory and where Kellerites will go next? The problem facing them is what to do about all the small-church pastors out there who feel Redeemerites have robbed them of their orthodox reformed church?<\/p>\n<p>It won’t be a good look if Kellerites crow about their victory. Any show of tribalism just now would be uncool.<\/p>\n<p>We are likely watching Pastor Keller’s valedictory speech given in the knowledge that the bees are angry so that now is not the best time to defend Revoice or Side B self-affirming gay pastors.<\/p>\n<blockquote>\n<p class=\"p1\">I want to question one of the main ways of reading the results of the vote. That narrative goes something like this:<\/p>\n<\/blockquote>\n<p>It gets confusing because the next few paragraphs are written by Pastor Keller, but they are Pastor Keller’s representations of what his opponents are saying:<\/p>\n<blockquote>\n<p class=\"p2\">A majority of the presbyteries of the PCA are conservative. They don’t sympathize with Side B approaches to homosexuality (described below).<\/p>\n<\/blockquote>\n<p>In his representation of his opponents’ thoughts and arguments, Pastor Keller is adroit in his efforts to sideline any discussion of the real significance of the defeat of the overtures, so he sets Revoice aside. “Revoice” isn’t mentioned once in Pastor Keller’s discussion of Overtures 23 and 37.<\/p>\n<p>Instead, Pastor Keller turns the discussion away from Revoice, towards Side B self-affirming gays. Yes, it’s confusing. “What? I thought we were talking about Revoice? What’s this Side B he’s talking about? What are these Side B ‘approaches to homosexuality’? Apparently there’s not just one of them, either, since he says ‘approaches’ plural? What happened to Revoice?”<\/p>\n<p>Pastor Keller continues to present readers what his opponents are thinking and saying:<\/p>\n<blockquote>\n<p>A majority of the presbyteries of the PCA are conservative. They don’t sympathize with Side B approaches to homosexuality (described below).<\/p>\n<p class=\"p2\">But there is a significant minority of presbyteries that do. This is an extremely dangerous situation, because Side B always slides into Side A and the end of orthodox Christianity.<\/p>\n<\/blockquote>\n<p>This is what conservatives are thinking and saying?<\/p>\n<p>Not at all.<\/p>\n<p>Take, for instance, his summary of what concerns conservatives have about Side B approaches to homosexuality. If we believe Pastor Keller, the concerns of those opposed to Side B Revoicers aren’t with Side B itself (gay identity and lifestyle). Rather, the real danger is that Side B is the entry drug to Side A (gay copulation).<\/p>\n<p>Again, no.<\/p>\n<p>Read, for instance, our <a href=\"https:\/\/amzn.to\/3quMcAQ\"><em>Grace of Shame.<\/em><\/a> There it’s quite clear Biblical Christians reject both Side B and Side A approaches to homosexuality. Both are sin. Both are in violation of the Seventh Commandment. Both have been opposed consistently in what has been written condemning Covenant Theological Seminary’s Revoice. Here on Warhorn Media, we have <a href=\"https:\/\/warhornmedia.com\/?s=%22Side+B%22\">fifteen<\/a> separate posts documenting Revoicers’ “Side B,” and opposing it:<\/p>\n<p class=\"c2\">The Side B position boils down to the view that the Bible only condemns homosexual sex acts. Everything other than sex acts—say, for instance, the gay aesthetic, attraction to same-sex people, effeminacy, spiritual friendship, co-owning a poodle, fostering a child in a household presided over by two members of the same sex committed to a joint spiritual friendship, speaking with a lisp, wearing the clothing of the opposite sex, sharing an adopted child—are not condemned in Scripture. (June 2019)<\/p>\n<p>In fact, in July 2018 we opposed the promotion of Side B by Pastor Keller’s protege, PCA pastor Scott Sauls:<\/p>\n<p class=\"c2\">(Scott Sauls) is the man who <em>accidentally<\/em> ordained a deaconess at Redeemer nine years ago. This is the man who then went to Nashville and introduced us to the concept of “<a href=\"http:\/\/baylyblog.com\/blog\/2015\/06\/how-should-church-approach-homosexuality-christ-presbyterian-church-nashville-case\">gay Christians<\/a>” a few years later. This is the man who, attempting to sell us on gay Christianity (side B of course)…<\/p>\n<p>Keep these things in mind as you read Pastor Keller’s spin on what his opponents in the PCA are thinking and saying. Contrary to his spin, the Side B position is the position supported by his protege, Scott Sauls, as well as Covenant Theological Seminary, Pastor Greg Johnson, and all his Revoicers. This is what Revoicers have told us. Why would we doubt them?<\/p>\n<p>Side B “positions on homosexuality” have always been the center of the debate in the PCA. Revoice has claimed them again and again, but Pastor Keller is not mentioning Revoice here, is he?<\/p>\n<p>We’re not done with Pastor Keller putting words in conservatives’ mouths. Why are conservatives concerned about the rejection of these overtures by the PCA presbyteries? What are they saying about this rejection?<\/p>\n<p>Pastor Keller tells us they’re saying this:<\/p>\n<blockquote>\n<p class=\"p2\">We see where those Side B leaning presbyteries are and we know where the liberalism will begin developing, if it hasn’t already. Most of the PCA is sound, though.”<\/p>\n<\/blockquote>\n<p>Pastor Keller summarizes his opponents’ thinking:<\/p>\n<ul><li>Most PCA presbyteries are conservative.<\/li>\n<li>Most PCA presbyteries aren’t sympathetic to Side B.<\/li>\n<li>Still, a large minority of presbyteries are sympathetic to Side B.<\/li>\n<li>Side B always slides into Side A.<\/li>\n<li>Side A is the end of orthodox Christianity.<\/li>\n<\/ul><p>Pastor Keller sums up his opponents’ fears:<\/p>\n<blockquote>\n<p class=\"p1\">This view divides the PCA into a majority of conservative people and presbyteries but also a minority of Side B leaning, social justice emphasizing progressives.<\/p>\n<\/blockquote>\n<p>After such definitive defeats suffered at the hands of the Side B Revoicers and their supporters, how will Pastor Keller reassure and pacify his opponents?<\/p>\n<p>Stop here and think about warfare. Many a war has been lost after a major battle has been won. Similarly, many a war has been won, and yet the terms of peace have resulted in the continuation of asymmetrical warfare, or even the resumption of full-scale hostilities.<\/p>\n<p>Pastor Keller’s article is written to keep this from happening. His Revoicers have won all the battles, thus firmly establishing Kellerites’ leadership of the PCA. But the harder work ahead of them now is pacifying their enemies.<\/p>\n<p>As he undertakes this critical work, Pastor Keller is acutely aware his liberal comrades-in-arms are weary of the battle. They fear all these small-church Biblical pastors won’t go quietly into the night. Kellerites are wondering if it is really worth it to stay in a denomination where you have to play nice with rigid, small-minded presbyters who waste your time with their petty disputationalism? These guys don’t get it. Why waste energy on them? “Let’s just leave.”<\/p>\n<p>Yet here stands elder statesman and father of PCA liberalism, Pastor Tim Keller, saying everything’s good. All’s well. All’s proceeding according to plan. He doesn’t want us to leave and we owe him.<\/p>\n<p>Some Kellerites have already left, the latest being another “in the city, for the city” congregation in the Pacific Northwest. A pastor from their presbytery just explained privately how this church “ran the table,” winning all their battles with Biblical men of the presbytery who were trying to discipline their Redeemerite doctrine and practice. But then, the pastor reported, after the church’s pastor and session won everything at the presbytery level, they announced their departure for Anglicanism.<\/p>\n<p>So, good reader, keep your eye on the ball. Sometimes the victor doesn’t want the spoils. Keller &amp; Company are ambivalent about staying in the PCA. They don’t want to govern it unless they can pacify it.<\/p>\n<p>Moving on, Pastor Keller writes:<\/p>\n<blockquote>\n<p>There are considerable problems with this view.<\/p>\n<\/blockquote>\n<p>“This view” refers to all the words above Pastor Keller has crafted as a summary of his opponents’ thoughts.<\/p>\n<p>Right out of the gate we have Pastor Keller’s biggest spin:<\/p>\n<blockquote>\n<p class=\"p1\">First, as far as I know, <strong>there is not one PCA court — not one session, presbytery, or agency — that has ever endorsed Side B Christianity.<\/strong> <em>[Remember, all emphases are original.]<\/em><\/p>\n<\/blockquote>\n<p>Pastor Keller’s first statement is a whopper. It’s such a big one, he might actually get away with it. In fact, what he’s written here has gotten Pastor Keller in very hot water with all the Side B self-affirming gay Revoicers over on Twitter. (Specifically, check out the Twitter feeds of Revoice founder <a href=\"https:\/\/threadreaderapp.com\/thread\/1506331753824272397.html\">Nate Collins<\/a> and his wife Sara, as well as Greg Johnson.)<\/p>\n<p>But you, dear reader, keep it firmly established in your mind that the animal with big hind legs that hops and has tall straight ears and eats carrots and reproduces like rabbits is, in fact, a rabbit. Your row of carrots is disappearing, yet the silly thing assures you he’s not eating them. He’s not a rabbit, he tells you.<\/p>\n<p>Now then, you’re the gardener. What are you going to do? You can believe him or you can save your carrots. Those are your choices.<\/p>\n<p>Pastor Keller continues:<\/p>\n<blockquote>\n<p class=\"p1\">While there is no exact way to determine the meaning of this term [Side B]…<\/p>\n<\/blockquote>\n<p>Ah yes, meanings and definitions of words are a bit muddy, but maybe Pastor Keller can help:<\/p>\n<blockquote>\n<p class=\"p1\">it is fair to characterize it like this:<\/p>\n<p class=\"p1\"><em>People attracted to the same sex, though remaining celibate in obedience to the Bible, still can call themselves ‘gay Christians’ and see their attraction as a part of their identity which should be acknowledged like one’s race or nationality.<\/em><\/p>\n<\/blockquote>\n<p>Actually, not at all “like one’s race or nationality,” but why quibble? Now watch where he leads us:<\/p>\n<blockquote>\n<p class=\"p1\">If it is true that the presbyteries rejecting Overtures 23 and 37 were Side B leaning or sympathetic, you would expect to see at least some scattered sessions in those presbyteries which have come out and approved it.<\/p>\n<\/blockquote>\n<p>“Sessions” who have “come out and approved it?”<\/p>\n<p>What a ridiculous defense. Pastor Keller promoted and employed women officers in his church for decades, but of course he never had his session “come out and approve it.” Sessions never approve their moral and doctrinal errors. They practice them, then dare their presbytery to discipline them.<\/p>\n<p>Liberals fight from the shadows. They never stand in the light.<\/p>\n<blockquote>\n<p class=\"p1\">But I see none. If anyone can point to a session or presbytery that even expresses support for the Side B approach, please let me know.<\/p>\n<\/blockquote>\n<p>Such disingenuous bombast. But hey, he asks us to let him know:<\/p>\n<p class=\"c2\">March 24, 2022<\/p>\n<p class=\"c2\">Dear Pastor Keller,<\/p>\n<p class=\"c2\">This is to inform you of scores of sessions and presbyteries, as well as profs at the denomination’s college and seminary, along with administrators of those higher educational institutions and the denominational agencies, who never stop expressing their support for the “Side B approach.”<\/p>\n<p class=\"c2\">I won’t bother providing proof. It’s out there washing like a tsunami through the denomination, as you know full well.<\/p>\n<p class=\"c2\">So really, I’ve written only to say, publicly, that you lie.<\/p>\n<p class=\"c2\">Sincerely yours,<\/p>\n<p class=\"c2\">Tim Bayly (Rev.)<br \/>\nSenior Pastor, Trinity Reformed Church; <a href=\"https:\/\/evangelpresbytery.com\/\">Evangel Presbytery<\/a><\/p>\n<p>Pastor Keller continues:<\/p>\n<blockquote>\n<p class=\"p1\">Second, <strong>the PCA’s Ad-Interim Committee on Human Sexuality considered this Side B view and clearly rejected it.<\/strong> That report was overwhelmingly commended as “biblically faithful” at the last General Assembly and approved without objection for distribution among our churches. If there were any who would have voted against it (and no such votes were registered), they are more likely to have been those who thought the report was not conservative enough, not those who wanted to broaden its standards. I don’t know of anyone who spoke or wrote against the ad-interim report because it rejected Side B and they wanted Side B affirmed. <\/p>\n<\/blockquote>\n<p>If I thought public deception by ministers of the Word and sacrament were funny, I’d say Pastor Keller’s paragraph above is hilarious. Why?<\/p>\n<p>Because not one single time is there even a mention of “Side B” in the 32,401 words of Pastor Keller’s committee’s report from his Ad-Interim Committee on Human Sexuality which he tells us “considered this Side B view and clearly rejected it.”<\/p>\n<p>If Pastor Keller and his committee were all so zealous to condemn this sin he solemnly assures us is nowhere in the PCA, why did they not mention it? In fact, why did they studiously avoid mentioning it?<\/p>\n<p>This is something readers would do well to cogitate over given the endless talk of Side B which has been central to Covenant Theological Seminary’s Revoicers, their speakers, and their conferences. They never stop saying and writing and promoting “Side B.” They’ve done so on the phone with me, carefully explaining “Side B” to me.<\/p>\n<p>Further, in Missouri Presbytery’s own report on Revoice, they define Revoice as Side B, using the expression “Side B” more than sixty times in <a href=\"https:\/\/drive.google.com\/file\/d\/1XyxAwY-ACZsVS-pe_barvg2_wI9BBJsB\/view\">their document<\/a>.<\/p>\n<p>But now, apparently the new tack is to hide it completely, then deny it’s anywhere anytime held by anyone.<\/p>\n<p>Pastor Keller’s fellow liberals have decided “Side B” is a non-starter and it’s best to hide it in the closet, now. So they don’t mention it in their study committee report, but a couple years later Pastor Keller claims they condemned it fulsomely in their report. Then, piling on, he solemnly assures us no one anywhere today believes in Side B. Not anywhere in the PCA.<\/p>\n<p>What a mishmash he makes. We ask ourselves the obvious: why did Pastor Keller and his study committee go to such great lengths to condemn Side B if no one anywhere in the PCA has ever supported it?<\/p>\n<p>But we remember he and his study committee never mentioned “Side B” in their report, so there’s that…<\/p>\n<p>Pastor Keller moves on:<\/p>\n<blockquote>\n<p>To characterize the institution of the PCA as being in danger of endorsing liberalism in general and Side B in particular is unsubstantiated and seriously misleading.<\/p>\n<\/blockquote>\n<p>What a relief. We have Pastor Keller’s word for it.<\/p>\n<blockquote>\n<p class=\"p1\">Third, in light of points #1 and #2, we can conclude further that <strong>the reasons for the ‘no’ votes by presbyters on the BCO amendments must have been based on matters other than an incipient liberalism.<\/strong><\/p>\n<\/blockquote>\n<p>Pastor Keller assures readers the rejection of Overtures 23 and 37 by PCA presbyteries was most certainly not any commitment they have to liberalism, such as self-affirming Side Bness. The voting down of Overtures 23 and 37 had nothing at all to do with any incipient liberalism. The promotion of homosexual aesthetics and identity is absolutely not incipient liberalism.<\/p>\n<p>So what was the whole thing about?<\/p>\n<p>It’s time to get the pillow, rip off the pillowcase, and fill the room with feathers. Too much clarity in this room. Let’s cloud things up with a little “extreme diversity.”<\/p>\n<blockquote>\n<p class=\"p1\">Again, the reasons for votes against the overtures were extremely diverse. Yet after hearing many, many of them, I think the common uniting concern was that the overtures could do more harm than good. Some thought they would exclude some people unfairly while allowing others in who learn to master a new vocabulary. They saw the overtures as blunt instruments that could do damage to genuine, conservative Presbyterian believers.<\/p>\n<\/blockquote>\n<p>Once again, Pastor Keller doesn’t mention Revoice. Instead, he assures everyone:<\/p>\n<ul><li>What was really at stake was most certainly not Side B.<\/li>\n<li>What was really at stake was most certainly not homosexuality.<\/li>\n<li>Rather, what was at stake was a shared desire to protect “genuine, conservative, Presbyterian believers.”<\/li>\n<\/ul><p>Honestly, does any person of sound mind think Pastor Keller is being truthful when he concludes his explanation of the repudiation of Overtures 23 and 37 by saying the overtures were voted down by men who “saw the overtures as blunt instruments that could do damage to genuine, conservative Presbyterian believers?”<\/p>\n<p>Pastor Keller isn’t laughing, but quite seriously claims these overtures were voted down in order to protect “genuine, conservative, Presbyterianism.”<\/p>\n<p>It would be disrespectful to respond to Pastor Keller’s lies with the kid-glove treatment. He’s a man universally revered within the PCA, so give him what he deserves. Don’t patronize him.<\/p>\n<p>He continues:<\/p>\n<blockquote>\n<p class=\"p1\">Other “nays” came from people who were sure there would be unintended consequences but were unsure of what they would be because of confusing wording or the institution of new investigational systems and standards in our presbyteries and churches. Still other negative votes were those of old-fashioned conservativism — ones that simply dislike change and saw the overtures as unnecessary. <\/p>\n<\/blockquote>\n<p>He tells readers that some of the “no” votes were due to “old-fashioned” conservatives who “simply dislike change.”<\/p>\n<p>Change? What change? Is Pastor Keller referring to the barring of self-affirming gays from church office as “change?”<\/p>\n<p>If so, he’s implying that the steady-state economy of the PCA is the mainstreaming and unquestioning acceptance of self-affirming gays as members and church officers.<\/p>\n<p>But is this true when the Christian Church across two millennia has never allowed self-affirming gays to be members or officers?<\/p>\n<p>We may safely say old-fashioned conservatives in the PCA did not oppose the overtures because they wanted the PCA to continue to allow self-affirming gays to continue to be ordained.<\/p>\n<p>Pastor Keller continues:<\/p>\n<blockquote>\n<p class=\"p1\">In every and any case, the ‘no-voting’ presbyteries cannot be proven to be more theologically liberal than the ‘yes-voting’ ones. In fact, some of the ‘no-voting’ presbyteries are those that trend toward our most conservative ranks. <\/p>\n<\/blockquote>\n<p>This is a lie. The ‘no-voting’ presbyteries most certainly were more theologically liberal. In fact, for many years we have watched some of these same presbyteries demonstrate their liberalism on the national level.<\/p>\n<p>Take women officers, for example: a few years back, several PCA presbyteries got together and promoted women officers in the PCA. Who were those presbyteries?<\/p>\n<p>Pastor Keller\/Redeemer Presbyterian Church’s Metro New York Presbytery (PCA), Metro Atlanta Presbytery, Philadelphia Presbytery, and Northern California Presbytery jumped on the bandwagon, as we <a href=\"http:\/\/baylyblog.com\/blog\/2009\/04\/woman-deacons-and-pca-earlier-today-atlanta-jumps-northern-bandwagon\">reported<\/a> here on Baylyblog on April 21, 2009:<\/p>\n<p class=\"c2\">The same position statement [calling for woman officers] acted on by Northern California, Metro New York, and Philadelphia Presbyteries has now also been presented to and adopted by Metro Atlantic Presbytery. Although they changed some of the prefatory wording, they approved essentially the same document approved by Northern California and Metro New York Presbyteries.<\/p>\n<p>So how did these presbyteries pushing for women officers a decade ago vote on Overtures 23 and 37?<\/p>\n<p>Three of four voted the overtures down. Yet Pastor Keller publicly claims that “In every and any case, the ‘no-voting’ presbyteries cannot be proven to be more theologically liberal than the ‘yes-voting’ ones.”<\/p>\n<p>Note his “in every and any case.”<\/p>\n<p>Pastor Keller’s circle of presbyteries tried to get the PCA to approve woman officers, and what? That’s no indication they’re liberal?<\/p>\n<p>Now they vote down overtures intending to keep self-affirming gays from being officers, and what? That too is no indication they’re liberal?<\/p>\n<p>Let’s dig a little deeper into which presbyteries <a href=\"https:\/\/docs.google.com\/spreadsheets\/d\/1k0xdOpSv1U-sRlS2jC32ZwVF_GVdm7RKS0xIIQrzZi4\/edit#gid=0\">voted down<\/a> Overtures 23 and 37 to see if “any” of the rest of them are liberal, also?<\/p>\n<ul><li>Central Indiana Presbytery (liberal; my former fellow presbyters)<\/li>\n<li>Chicago Metro Presbytery (liberal)<\/li>\n<li>Columbus Metro (liberal)<\/li>\n<li>Hills and Plains Presbytery (liberal; check out their 11 men <a href=\"https:\/\/warhornmedia.com\/2020\/12\/23\/pca-hall-of-infamy-pastors-elders-who-signed-protest-against-pastor-warhurst\/\">here<\/a>)<\/li>\n<li>Metro Atlanta Presbytery (liberal; check out their 8 men <a href=\"https:\/\/warhornmedia.com\/2020\/12\/23\/pca-hall-of-infamy-pastors-elders-who-signed-protest-against-pastor-warhurst\/\">here<\/a>)<\/li>\n<li>Metro New York Presbytery (uh-huh, liberal)<\/li>\n<li>Missouri Presbytery (uh-huh, liberal)<\/li>\n<li>Northern California Presbytery (liberal; check out their 6 men <a href=\"https:\/\/warhornmedia.com\/2020\/12\/23\/pca-hall-of-infamy-pastors-elders-who-signed-protest-against-pastor-warhurst\/\">here<\/a>)<\/li>\n<li>Northern New England Presbytery (liberal)<\/li>\n<li>Pacific Presbytery (liberal)<\/li>\n<li>Pacific Northwest Presbytery (liberal)<\/li>\n<li>Piedmont Triad Presbytery (liberal; check out their 5 men <a href=\"https:\/\/warhornmedia.com\/2020\/12\/23\/pca-hall-of-infamy-pastors-elders-who-signed-protest-against-pastor-warhurst\/\">here<\/a>)<\/li>\n<li>Potomac Presbytery (liberal; check out their 8 men <a href=\"https:\/\/warhornmedia.com\/2020\/12\/23\/pca-hall-of-infamy-pastors-elders-who-signed-protest-against-pastor-warhurst\/\">here<\/a>)<\/li>\n<li>South Texas Presbytery (liberal; check out their 8 men <a href=\"https:\/\/warhornmedia.com\/2020\/12\/23\/pca-hall-of-infamy-pastors-elders-who-signed-protest-against-pastor-warhurst\/\">here<\/a>)<\/li>\n<li>Southern New England Presbytery (liberal; check out their 6 men <a href=\"https:\/\/warhornmedia.com\/2020\/12\/23\/pca-hall-of-infamy-pastors-elders-who-signed-protest-against-pastor-warhurst\/\">here<\/a>)<\/li>\n<li>Wisconsin Presbytery (liberal; my former church in this presbytery)<\/li>\n<\/ul><p>Now let’s remind ourselves why this list was necessary. Pastor Keller denies that in “any case” there is a connection between presbyteries voting down these overtures and “liberalism.” Is Pastor Keller telling the truth?<\/p>\n<p>No.<\/p>\n<p>Pastor Keller contines:<\/p>\n<blockquote>\n<p class=\"p1\">As far as I can tell and as far as our documented actions can affirm, an overwhelming super-majority of the PCA does not accept the biblical legitimacy of a Side B perspective. In a denomination of our size I’m sure there must be individuals — both lay and perhaps some ordained — who do. But to characterize the institution of the PCA as being in danger of endorsing liberalism in general and Side B in particular is unsubstantiated and seriously misleading.<\/p>\n<\/blockquote>\n<p>“Perhaps some ordained” men in the PCA “accept the Biblical legitimacy of a Side B perspective.”<\/p>\n<p>Perhaps.<\/p>\n<p>Pastor Keller’s dissimulations and equivocations multiply.<\/p>\n<blockquote>\n<h4 class=\"p1\">The Old Narrative<\/h4>\n<p class=\"p1\">Well then, what <em>is <\/em>going on? I have a view that is possibly wrong but is my best guess right now. What is going on now is, with one significant difference (see below), what has been going on in our denomination almost from the beginning. <\/p>\n<\/blockquote>\n<p>Prior to reading this article by Pastor Keller, many readers of <em>byFaith<\/em> would have thought the defeat of Overtures 23 and 37 indicated that the theological liberalism of Side B Revoicers was solidifying its grasp on the PCA, but here Pastor Keller commences another deep spin on the PCA:<\/p>\n<blockquote>\n<p class=\"p1\">The PCA has been divided between a minority of ministers who interpreted the Westminster Standards in stricter ways and a majority who interpreted them in broader ways. An example is the regulative principle of worship.<\/p>\n<\/blockquote>\n<p>Oh my, he is good. Here Pastor Keller does an imitation of the Apostle Paul when he was caught between the Sadducees and Pharisees, all of whom were furious with him:<\/p>\n<p class=\"c2\"><em>But perceiving that one group were Sadducees and the other Pharisees, Paul began crying out in the Council, “Brethren, I am a Pharisee, a son of Pharisees; I am on trial for the hope and resurrection of the dead!” (Acts 23:6)<\/em><\/p>\n<p>The tactic is called “divide and conquer.” So which side is Pastor Keller posturing himself as belonging to here as he raises the issue of that infamous slough of Reformed bickering, the “regulative principle of worship?”<\/p>\n<p>The issue isn’t sodomy. The issue isn’t Side B Covenant Theological Seminary profs, administrators, and graduates.<\/p>\n<p>The issue is <em>a capella<\/em> Psalter-only nitpickers. The issue is the no-drama in worship fuddy-duddies. The issue is those fence-the-Lord’s-table legalists. The issue is no-images-in-worship neanderthals. The issue is the crusty orthodox men who won’t allow toddlers to join their parents at the Lord’s supper. The issue is those imbeciles giving way to hissy-fits over intinction.<\/p>\n<p>Again, forget sodomy and self-affirming Side B Revoicers and, instead, think about singing hymns in worship. Think about pictures in worship. Think about drama in worship. Think about welcoming babies and toddlers to the Lord’s table. Think about all those rigid pastors who guilt-trip people just before the Lord’s supper is served.<\/p>\n<p>Then ask yourself who you really want to win this split of the PCA? Surely not these prehistoric cavemen going all rigid with us over this thing called the “regulative principle of worship.”<\/p>\n<p>Pastor Keller continues:<\/p>\n<blockquote>\n<p class=\"p1\">The understanding of what actual worship practices are enjoined and forbidden differs widely in the denomination. This difference (which many in the stricter group bemoan) can’t be dealt with by “getting people to stick closer to the Confession.” I know few if any ministers who take an exception to the regulative principle of worship. It is the <em>interpretation<\/em> of it that is at issue. At several other points the differences are similarly matters of interpretation.<\/p>\n<\/blockquote>\n<p>Pastor Keller here condescends to his readers, explaining that this division, also, has no substance. It’s simply a matter of interpretation and application.<\/p>\n<p>As Pastor Keller undercuts and trims Scripture’s doctrines of sexuality and creation, disobeying his denomination’s polity as well, and strewing schism in his wake, he stops for a minute to explain that everything everyone is fighting over is simply a big misunderstanding.<\/p>\n<p>If only they’d had his gift of exculpatory peacemaking at Ft. Sumpter and Pearl Harbor.<\/p>\n<p>Forget sodomy and Revoice and Side Bism and Missouri Presbytery and self-affirming gays in church office within the PCA. Instead, click his link to an article he wrote on the evils of confessional subscription back twenty-one years ago:<\/p>\n<blockquote>\n<p class=\"p1\">(For a deeper look at the differences, though this article is now dated in many ways, see “<a href=\"https:\/\/pcahistory.org\/topical\/subscription\/Subscription_2001_Keller.pdf\" target=\"_blank\" rel=\"noopener\">How Then Shall We Live Together: Subscription and the Future of the PCA<\/a>.”)<\/p>\n<\/blockquote>\n<p>Pastor Keller continues:<\/p>\n<blockquote>\n<p class=\"p1\">Any effort to give names to these groups makes one side look better than the other. Is one group “Confessional” and the other “Evangelical”? Is the one side “Doctrinalist” and the other side “Missional”?  I use these terms just to help readers get the gist of what I’m talking about and I’ll not use them again because I do not want the labels to rob anyone of proper respect or to brand them uncharitably. <\/p>\n<\/blockquote>\n<p>Far be it from us to attribute unkindness, let alone divisiveness, to such an avuncular fellow. Look how concerned he is to avoid labels and brands like “Revoice” and “Side B.” Pastor Keller has such a gentle aversion to the gross simplifications caused by labels and brands. They’re so unhelpful.<\/p>\n<blockquote>\n<p class=\"p1\">What is especially grievous about this division, however, is how each side came to deeply mistrust the other’s spiritual and theological maturity. We did not just disagree about worship, we mocked the alternative to our view. One group laughed at “happy clappy” shallowness while the other spoke of the stiff, formal services of the “frozen chosen.”<\/p>\n<\/blockquote>\n<p><em>“May I? Please? Point of order, Mr. Moderator. It was my understanding the motion on the floor had to do with Revoice, Side B, and the ordination of self-affirming gays. Am I missing something? Did we table the motion? Has someone put forward a motion on worship or subscriptionism? What happened to the ordination of gays? Help me out please, Mr. Moderator.”<\/em><\/p>\n<p>But no, Pastor Keller is off and running, channelling the healing blather of Oprah Winfrey and the piped-in nostrums we now have as the effluent of loudspeakers in our brand-new hospital here in Bloomington teaching patients and their visitors mindfulness:<\/p>\n<p class=\"c4\"><em>Hope is hopeful. Do you see it?<\/em><\/p>\n<p class=\"c4\"><em>We love our differences.<\/em><\/p>\n<p class=\"c4\"><em>Stretch your legs.<\/em><\/p>\n<p class=\"c4\"><em>Lift your arms to the sky.<\/em><\/p>\n<p class=\"c4\"><em>Take a deep breath.<\/em><\/p>\n<p class=\"c4\"><em>Think about all that is good in this beautiful world.<\/em><\/p>\n<p class=\"c4\"><em>Think about yourself.<\/em><\/p>\n<p class=\"c4\"><em>See yourself as others see you.<\/em><\/p>\n<p class=\"c4\"><em>Aren’t you beautiful?<\/em><\/p>\n<p>Now then, having centered ourselves, let’s get back to Pastor Keller:<\/p>\n<blockquote>\n<p class=\"p1\">The human heart wants to justify itself, and in the PCA we have often not been willing to chalk up our perennial differences to sincere but differing ways of reading the Confession and Bible. Rather, we’ve assumed that they stem from defects in character — we mistrust each other’s motives.<\/p>\n<\/blockquote>\n<p>Proverbs warns us against being naive and credulous, but that’s what Pastor Keller wants from us. We should present ourselves in presbytery meetings soft and ready to trust the sincerity of those promoting schism and error. They’re wrong, but they mean well. They tell us this and we believe them.<\/p>\n<p>All those years Pastor Keller spent rebelling against the PCA’s <em>Book of Church Order<\/em> by promoting women officers in his church, he meant well. All his motives were godly. All those years he spent saying authority in marriage is mutual and the husband only had what Pastor Keller labelled “tie-breaking authority,” he meant well. His motives were righteous. All those years Pastor Keller spent promoting his canard across the PCA, “a woman can do anything a non-ordained man can do in the church,” he meant well. His motives were holy. All those years Pastor Keller spent promoting the demise of Scripture’s account of Creation within the PCA, he only meant well. He simply desired to avoid the intellectual embarrassment of Scripture’s anti-scientism which has caused so many scholars to turn from Christ. All those years Pastor Keller was saying all those things that trimmed away the edges of the coin of God’s truth, he meant well. He only wanted the PCA to have a flagship congregation up north, in the city for the city, which could protect them from being smeared with the Confederate flag and southern secessionism.<\/p>\n<p>The tragedy of it all when, as Pastor Keller assures us, the men and women of the PCA are fighting simply because they have “sincere but differing ways of reading the Confession and Bible.”<\/p>\n<p>Sincere but differing. Differing but sincere. Sincere and sincere. Opposite but sincere. Wrong but sincere. Contrary to the Confession, but sincere. Denial of Scripture’s very words, but sincere. Violations of the Book of Church Order, but sincere.<\/p>\n<p>Pastor Keller mourns those souls who are so myopic or insecure as to declare violations of Scripture and the Confession to be motivated by defects in character. But what about American presbyterianism’s historic Preliminary Principle Number Four which was adopted by the PCA:<\/p>\n<p class=\"c2\">That truth is in order to goodness; and a great touchstone of truth, its tendency to promote holiness; according to our Saviour’s rule, “by their fruits ye shall know them.” And that no opinion can be either more pernicious or more absurd than that which brings truth and falsehood upon a level, and represents it as of no consequence what a man’s opinions are. On the contrary, we are persuaded that there is an inseparable connection between faith and practice, truth and duty. Otherwise, it would be of no consequence either to discover truth or to embrace it.<\/p>\n<p>Pastor Keller rejects such judgmental thinking. Truth is not in order to goodness. By their fruits ye shall not know them. It is of no consequence what a man’s opinions are. There is no connection between faith and practice. Attacks upon the Confession and Scripture do not stem from defects in character. We must not question each other’s motives.<\/p>\n<p>It’s hard to write a more clear denial of this Fourth Preliminary Principle than Pastor Keller has written here as the center of his call for a truce and peace.<\/p>\n<p>Pastor Keller continues:<\/p>\n<blockquote>\n<p class=\"p1\">The broad group thinks the strict one is legalistic in spirit, wanting to think of itself as ‘valiant for truth’, wanting to feel superior to everyone because they are stricter. The strict group thinks the broad one wants the love of the world, wants to be popular with the culture, and is in the process of selling out in order to be seen as relevant.<\/p>\n<\/blockquote>\n<p>The explaining continues, informing us it’s all about people and their feelings. No one ever stands for truth. They’re all simply trying to satisfy their emotional needs.<\/p>\n<p>This is precisely what orthodox Roman Catholics say about Martin Luther and his Reformation. To Pastor Keller, it’s inconceivable that any man is motivated by any objective love of God and His truth.<\/p>\n<p>Truth doesn’t make anyone free. Non-judgmentalism and mutual respect and acceptance are what makes men free. If we just trust each other and give each other the benefit of the doubt, all our differences will be healed because we’ll all feel so much better; we’ll be so much more integrated, emotionally. We don’t need truth. We need healing.<\/p>\n<blockquote>\n<p class=\"p1\">Are these group assessments fair?<\/p>\n<\/blockquote>\n<p>Pastor Keller is referring here to those he claims are “legalistic in spirit” and want to think of themselves as “valiant for truth.” Is his a fair assessment of them, he asks?<\/p>\n<p>Pastor Keller is referring here to those he claims are “wanting to feel superior to everyone because they are stricter.”  Is his a fair assessment of them, he asks?<\/p>\n<p>Pastor Keller is referring here to his claim, above, that the PCA’s conservatives think the liberals “want the love of the world” and desire “to feel superior to everyone because they are stricter.”  Is his a fair assessment of them, he asks?<\/p>\n<p>Pastor Keller claims that the PCA’s conservatives think he and his fellow Kellerites  are “selling out in order to be seen as relevant.”  Is his a fair assessment of conservatives, he asks?<\/p>\n<p>The strict group thinks the broad one wants the love of the world, wants to be popular with the culture, and is in the process of selling out in order to be seen as relevant. Is this assessment fair?<\/p>\n<p>Pastor Keller now answers these questions he’s asked:<\/p>\n<blockquote>\n<p class=\"p1\">No. Paul’s statement that love “thinks no evil” does not mean we should be naïve about the reality of sin. But it must mean at the very least that believers should give each other the benefit of the doubt, as Scripture and our Confession require, rather than assuming the worst.<\/p>\n<\/blockquote>\n<p>Don’t be naïve, but don’t assume the worst.<\/p>\n<p>Does Pastor Keller really believe any of his opponents in the PCA have assumed the worst about him or his fellow Kellerites? If he does, what evidence does he put forward in proof of it? Has anyone in his liberal party ever anywhere been disciplined? Ever anywhere been rebuked or censured, let alone suspended from the Lord’s supper? If the conservatives are assuming the worst about the liberals of the PCA, why aren’t they lifting a finger to discipline them?<\/p>\n<p>Why no censures of Pastor Keller and his Redeemerites? They’ve trampled on doctrine after doctrine of Scripture and the Confession, saying and writing things never embraced by the church across two-thousand years of church history about sexuality, marriage, the diaconate, Creation, and on it goes, yet they have not a single martyr who has suffered at the hands of their conservative opponents’ discipline to show for it. Certainly if the conservatives had been “assuming the worst” about Pastor Keller and his Kellerites, at least one or two of them would have wounds and scars to show for it.<\/p>\n<p>Yet, it must be admitted that all they have to show for it is their victory in <em>Speck vs. Missouri Presbytery<\/em> and the failure of Overtures 23 and 37—hurray and hurrah!<\/p>\n<p>Maybe his conservative opponents will confess their sins if first, Pastor Keller confesses his own:<\/p>\n<blockquote>\n<p class=\"p1\">In the PCA we have not done that, and it is worse than ever today. But in truth it has been going on for decades. I’ve seen and heard it and at times I have participated in it. I think this has sowed the seeds for what we see today. And what is that?<\/p>\n<\/blockquote>\n<p>May we please clarify what “it” is which Pastor Keller is confessing?<\/p>\n<p>Anyhow, it’s time to blame things on President Trump (who shall remain nameless);<\/p>\n<blockquote>\n<h4 class=\"p1\"><strong>Polarization in the PCA Mirrors Polarization in the Culture<\/strong><\/h4>\n<p class=\"p1\">During the last five to six years, the entire nation has become more polarized politically and culturally. No matter your position, the alternative viewpoints to yours have become louder, stronger, and more extreme in society. Some are seeking to re-read the ‘strict’ and ‘broad’ groups as being the same as — and as connected to — the conservatives and progressives that are battling in the culture wars on the national stage. For example, many now want to name the broader PCA group ‘progressives’ and tie them to the activism of the secular Left. If a PCA church emphasizes helping the poor or disadvantaged, it may be said they are ‘into critical race theory.’ If they voted against Overtures 23 and 37 it may be said they are sympathetic to gay ideology. <\/p>\n<p class=\"p1\">This effort to tie the old strict-broad division in the PCA to the culture wars of the country has not been without any effect.  Many folks who would not ordinarily vote or side with the stricter party did so on Overtures 23 and 37 at the 2021 GA. And I’ve even heard people within the ‘broad’ group call themselves ‘the progressives’. What matters of course is to be biblical and Reformed, not to position ourselves on some changing spectrum of political-cultural beliefs.<\/p>\n<\/blockquote>\n<p>Substantive issues in the PCA are largely the infiltration of politics and its culture wars.<\/p>\n<p>With that reproof, Pastor Keller, brings his attempt to pacify his PCA by pleading his theological credentials:<\/p>\n<blockquote>\n<p class=\"p1\">However, a minister who believes women should not be ordained elders, who believes in the inerrancy of Scripture, who believes in orthodox Reformed theology, who believes some people are predestined from all eternity to be damned, who believes people are going to hell if they don’t believe savingly in Jesus, who believes homosexual practice and desire are sin, who believes we are all descended from a real, specially created Adam and Eve — is not progressive by any fair use of the English language or by any understanding of cultural reality.<\/p>\n<\/blockquote>\n<p>This is the list of doctrinal commitments Pastor Keller proposes for the terms of peace in the PCA. Let’s take them one by one.<\/p>\n<p><strong>First,<\/strong> Pastor Keller claims unity and peace in the PCA will be safe if a man “believes women should not be ordained elders.”<\/p>\n<p>The PCA will have woman officers, just not “ordained” woman elders. Now that word “ordained” is a tell, and let me explain why.<\/p>\n<p>Pastor Keller had <em>ex officio<\/em> members of his session who were women with voice but no vote. Further, one longtime pastor on Pastor Keller’s pastoral staff who attended those session meetings explained to me that the women were free to speak, but the pastoral staff was expected to be quiet.<\/p>\n<p>In other words, Pastor Keller wants women to be free to be officers and free to be ex officio members of the elders board with voice but no vote, but promises he won’t ordain those women. Sneaky, isn’t it? And how many of those reading his article here have friends who have been pastors on Pastor Keller’s staff and have explained this, and thus are in a position to know the significance of his inclusion of that qualifying word, “ordained?”<\/p>\n<p>So Scripture and the Confession and the PCA Book of Church Order lose if his first term of peace is adopted.<\/p>\n<p><strong>Second,<\/strong> Pastor Keller claims unity and peace in the PCA will be safe if a man “believes in the inerrancy of Scripture.”<\/p>\n<p>Honestly, what does this “inerrancy of Scripture” mean anymore when all the Evangelical Bible publishers are amending the sacred text, deleting politically incorrect expressions and words such as “man,” “father,” “brother,” “effeminates,” and “Jews?” Sure, all the legacy institutions and denominations have the word “inerrancy” in their statements of faith, but in doctrine and practice, the commitment has become a joke.<\/p>\n<p><strong>Third,<\/strong> Pastor Keller claims unity and peace in the PCA will be safe if a man “believes in orthodox Reformed theology.”<\/p>\n<p>This is meaningless, as everything written above shows. Take, for instance, Pastor Keller’s claim that men voted against Overtures 23 and 37 out of concern to protect orthodox Reformed theology.<\/p>\n<p><strong>Fourth,<\/strong> Pastor Keller claims unity and peace in the PCA will be safe if a man “believes some people are predestined from all eternity to be damned.”<\/p>\n<p>Yes, but do readers understand Pastor Keller’s own heterodox doctrine of Hell? Our critique of Pastor Keller’s position on Hell is in four parts, and the first in the series can be read <a href=\"http:\/\/baylyblog.com\/blog\/2010\/05\/problem-hell-part-one\">here<\/a>. This simply to say that Pastor Keller’s doctrine of Hell is a coin of truth he’s trimmed.<\/p>\n<p><strong>Fifth,<\/strong> Pastor Keller claims unity and peace in the PCA will be safe if a man “believes people are going to hell if they don’t believe savingly in Jesus.”<\/p>\n<p>The strength of any doctrinal statement is not what is affirmed, but what is denied. Anyone who’s spent half a day reading universalists who claim to be Christian knows a Mack truck can be driven through Pastor Keller’s statement “believe savingly in Jesus.”<\/p>\n<p>Too, may one “believe savingly” without repentance, about which the <em>Confession<\/em> states:<\/p>\n<p class=\"c2\"><em>WCF Chapter XV; III<\/em> Although repentance be not to be rested in as any satisfaction for sin, or any cause of the pardon thereof, which is the act of God’s free grace in Christ; yet is it of such necessity to all sinners, that none may expect pardon without it.<\/p>\n<p><strong>Sixth,<\/strong> Pastor Keller claims unity and peace in the PCA will be safe if a man “believes homosexual practice and desire are sin.”<\/p>\n<p>But what about identity? What about effeminacy? Are we to leave behind all the <em>Westminster Larger Catechism<\/em> condemns as sin under the Seventh Commandment?<\/p>\n<p>The most superficial experience and examination of the PCA men’s Revoice conferences overwhelms one with, not just the presence, but often the advocacy of these sins condemned by Scripture as listed by the Westminster divines:<\/p>\n<p class=\"c2\">Unclean imaginations, thoughts, purposes, and affections; all corrupt or filthy communications, or listening thereunto; wanton looks, impudent or light behaviour, immodest apparel; entangling vows of single life, undue delay of marriage, idleness, unchaste company; lascivious dancings, stage plays; and all other provocations to, or acts of uncleanness, either in ourselves or others. (<em>Larger Catechism,<\/em> Question 139)<\/p>\n<p><strong>Seventh,<\/strong> Pastor Keller claims unity and peace in the PCA will be safe if a man “believes we are all descended from a real, specially created Adam and Eve.”<\/p>\n<p>Again, anyone who’s spent even a short time <a href=\"https:\/\/biologos.org\/articles\/creation-evolution-and-christian-laypeople\/\">reading<\/a> Pastor Keller on Creation is aware how little significance there is to what he writes above when it comes to debates over evolution, theistic or otherwise. Note that Professor Jack Collins at Covenant Theological Seminary is allowed to articulate and defend this <a href=\"http:\/\/baylyblog.com\/blog\/2013\/08\/covenant-seminarys-scripture-problem-no-1-doing-numbers-jack-collins\"><em>view<\/em><\/a> of Adam and Eve:<\/p>\n<p class=\"c2\">If someone should decide that there were, in fact, more human beings than just Adam and Eve at the beginning of humankind, then, in order to maintain good sense, he or she should envision these humans as a single tribe. Adam would then be the chieftain of this tribe (preferably produced before the others), and Eve would be his wife. This tribe “fell” under the leadership of Adam and Eve.<\/p>\n<p>Keeping such suppositions of Pastor Keller and his PCA colleagues in mind, we begin to understand the meaninglessness of any confession that simply states Adam was “specially created.”<\/p>\n<p>Looking more carefully at these statements Pastor Keller is proposing as the basis of the theological purity, unity, and peace in the PCA going forward, what is most evident is Pastor Keller’s inability to understand truth is not permeable, malleable, and subjective. Read his formulations of the parameters of the PCA’s boundaries within which we ought to trust each other. They’re surreal. Does he really think we can trust a grandmother who looks and smells and howls like a wolf? Does he take us all for Little Red Riding Hood?<\/p>\n<p>So why is Pastor Keller so fearful of doctrinal precision? Why does he avoid it like the plague?<\/p>\n<p>Here, he gives us another tell:<\/p>\n<blockquote>\n<p class=\"p1\">(For the record, I have lived in Manhattan for 33 years and I heartily believe in all the above-mentioned positions. Nothing about being here has ever inclined me away from those commitments in the slightest. Living here may, however, give me a particularly clear picture of how thoroughly conservative the PCA really is from the standpoint of mainstream American culture.)<\/p>\n<\/blockquote>\n<p>Living in New York City for thirty-three years has done a number on Pastor Keller’s moral and doctrinal commitments. He may protest he’s just as firm in his commitments today as he was when he first began ministering in Manhattan, but most of us feel sad listening to his protest. We think the man doth protest too much.<\/p>\n<p>One thing Pastor Keller needs to realize, though, is that many of us have spent the same number of years or more ministering in cultural contexts equally or more hostile to Christian doctrine and morals than Manhattan. PCA men in the deep south may be intimidated by what Pastor Keller says about the pagan context of his work these past thirty-three years, but many of us have had temptations to go all mushy every bit as toxic and intense as those of New York City. Think about Seattle. Think about Boulder. Think about Boston. Think about New England. Think about Portland. Think about Madison and Bloomington, and on it goes.<\/p>\n<p>We all choose our path and then approach death defending it. As my Dad said before his death, “people get old the way they lived their lives.” Doctrinal and moral imprecision and compromise are lifetime habits confirmed by lifetimes of preaching and lifetimes of feelings of insecurity in front of the watching world.<\/p>\n<p>It’s sin to compromise God’s truth in the face of Western culture today, but the sin is perfectly understandable to most of us and we sympathize deeply. In fact, so deeply that we must fight against it in others or we’ll waver and give in to it ourselves.<\/p>\n<p>Now then, Pastor Keller’s conclusion:<\/p>\n<blockquote>\n<p class=\"p1\"><strong>Conclusion: It is not true that the PCA is in imminent danger of becoming a progressive, mainline Protestant church.  <\/strong><\/p>\n<p class=\"p1\">I think the sooner we lay that new “narrative” to rest the better, and the sooner we can get back to our real work. We must seek the spiritual health, scriptural integrity, ministry effectiveness, and unity of the church. And we must do it <em>together — <\/em>in the face of our long-time differences on how we read and practice the Westminster Standards. <\/p>\n<\/blockquote>\n<p>Sorry, dear Pastor Keller, I’m not on your bus. I don’t trust your driving or knowledge of the rules of the road.<\/p>\n<blockquote>\n<p class=\"p1\">How can we do that? <\/p>\n<p>First, we should acknowledge how much doctrinal unity we really have. We have a remarkable amount of consensus. There’s more than enough common ground doctrinally upon which to build a denomination. Are we willing to admit that? <\/p>\n<\/blockquote>\n<p>In truth, we don’t have doctrinal unity, and this sad fact is most evident at the gaps in the wall where the Devil is attacking God’s Word and truth today.<\/p>\n<blockquote>\n<p>Second, we should acknowledge the complexity of the reasons of why we really differ. The reasons are temperamental, cultural, and historical as well as hermeneutical.<\/p>\n<\/blockquote>\n<p>The reasons aren’t complex at all. Not in my heart and mind and not in your heart and mind, dear brother. Fear of man and being ashamed of our Lord’s Words have never been complicated at all.<\/p>\n<blockquote>\n<p>Third, all revivals and renewals begin with repentance. We should stop judging one another’s motives so readily — the strict assuming the broad are worldly and the broad assuming the strict are legalistic. We must repent and forgive each other.<\/p>\n<\/blockquote>\n<p>The place you choose to call for repentance is understandable given the nature of your commitment to truth.<\/p>\n<blockquote>\n<p>Fourth, we need far more face-to-face conversations — not social media or internet debates. If we did, it would make a difference. For example, before we post our articles and thoughts online, we might be more likely to run them by brothers and friends in the other “camp” first (as I did this article).<\/p>\n<\/blockquote>\n<p>Almost twenty years ago, I wrote Pastor Keller offering to get together, but of course, who was I? Not hearing anything in response, I repeat my offer, here. Sadly though, at our ages, both of us have firmly established trajectories which are, we must admit, entirely incompatible. I’m struggling to remember the precise words of a quote I read years ago to the effect that sometimes the problem isn’t that we don’t understand each other, but that we understand each other very well, and know our positions are incompatible, are mutually exclusive.<\/p>\n<p>This is what I wish and pray happens within the PCA and every other Biblically reformed denomination as we face the hatred of God which is everywhere around us: that we believe once more in argument and fight our way through to God’s truth being embraced fully, thereby freeing the people of God from all the chains the Spirit of the Age has bound us with; and that we learn again to love each other through the practice of loving and faithful discipline.<\/p>\n<p>What I propose as a first step in that direction is that, as I mentioned near the beginning of this response, someone in Missouri Presbytery love Pastor Greg Johnson enough to bring him under discipline. And may God give him the grace to repent.<\/p>\n<blockquote>\n<p class=\"p1\">Certainly, the differences are not insignificant, but in my four decades in the PCA I have been encouraged over and over again about how General Assembly study committees have created consensus yet laid down the necessary theological boundaries.<\/p>\n<p class=\"p1\">At my first General Assembly, in Jackson in 1975, we passed the “Pastoral Letter Concerning the Experience of the Holy Spirit in the Church Today” which was a model for the future. The letter laid down firm biblical guidelines — denying that the regenerate must also have a baptism of the Spirit to be equipped for ministry, denying tongues as a sign of the baptism of the Spirit, and urging against an inappropriate obsession with miracles. Yet the letter did not take a complete ‘cessationist’ view and urged “a spirit of forbearance among those holding differing views regarding the spiritual gifts.”<\/p>\n<\/blockquote>\n<p>Yes, in past years the assembly has had study committees that have done stellar work for the unity of the church, and I have recommended these older documents to brothers and sisters inside and outside the church countless times, even giving away printed copies to those needing them.<\/p>\n<p>But Pastor Keller continues:<\/p>\n<blockquote>\n<p class=\"p1\">The 2017 Report on Women Serving in the Ministry of the Church followed this same path, affirming all the restrictions on women in office, but allowing a diversity of practices with regard to areas where the Constitution doesn’t dictate. <\/p>\n<\/blockquote>\n<p>Sadly, I would not recommend anyone read Pastor Keller’s report which majored in hiding the substantive disagreements permeating the church in the Western world today. It reminded me of a similar paper called Evangelicals and Catholics Together trying for a rapprochement between Protestants and Roman Catholics.<\/p>\n<p>As the paper on sexuality Pastor Keller and other study committee members produced was not the finest moment of the authors and their fellow presbyters at last year’s assembly, ECT was not the finest moment of its authors including Richard John Neuhaus, Chuck Colson, and Jim Packer.<\/p>\n<p>Happily though, it’s been forgotten, now. Studies in ambiguity surrounding conflicted issues are never memorable.<\/p>\n<p>Now then, Pastor Keller will have these last words, and may God bless him.<\/p>\n<blockquote>\n<p class=\"p1\">The 1999 Creation Study Report served the same function. <\/p>\n<p class=\"p1\">In every case the reports did not add to the Constitution but reaffirmed it and allowed diversity within its stated guidelines and limitations. <\/p>\n<p class=\"p3\">As a result, we have the PCA we have today — strong and large enough to have real tensions, yet united around a wonderfully rich and remarkably comprehensive Confession. It has taken almost 50 years to grow the PCA with its many strong institutions and organizations, let alone hundreds of churches. To preserve and steward all the gifts God has given the PCA, let us build on our common love of these wise and biblical confessional documents by speaking the truth in love to each other. <\/p>\n<\/blockquote>\n<div class=\"shariff shariff-align-flex-start shariff-widget-align-flex-start\" data-services=\"facebook%7Ctwitter\" data-url=\"https%3A%2F%2Fwarhornmedia.com%2F2022%2F03%2F24%2Fkeller-future-of-pca%2F\" data-timestamp=\"1648460561\" data-hidezero=\"1\" data-backendurl=\"https:\/\/warhornmedia.com\/wp-json\/shariff\/v1\/share_counts?\">\n<div class=\"ShariffHeadline\">\n<hr \/><h5 class=\"shariff_headline\">Thankful for this content? Let others know:<\/h5>\n<\/div>\n<ul class=\"shariff-buttons theme-default orientation-horizontal buttonsize-medium\"><li class=\"shariff-button facebook shariff-nocustomcolor c6\"><a href=\"https:\/\/www.facebook.com\/sharer\/sharer.php?u=https%3A%2F%2Fwarhornmedia.com%2F2022%2F03%2F24%2Fkeller-future-of-pca%2F\" title=\"Share on Facebook\" aria-label=\"Share on Facebook\" role=\"button\" rel=\"nofollow\" class=\"shariff-link c5\" target=\"_blank\">share  66 <\/a><\/li>\n<li class=\"shariff-button twitter shariff-nocustomcolor c8\"><a href=\"https:\/\/twitter.com\/share?url=https%3A%2F%2Fwarhornmedia.com%2F2022%2F03%2F24%2Fkeller-future-of-pca%2F&amp;text=Pastor%20Tim%20Keller%20on%20future%20of%20PCA\" title=\"Share on Twitter\" aria-label=\"Share on Twitter\" role=\"button\" rel=\"noopener nofollow\" class=\"shariff-link c7\" target=\"_blank\">tweet  <\/a><\/li>\n<li class=\"shariff-button mailto shariff-nocustomcolor c10\"><a href=\"mailto:?body=https%3A%2F%2Fwarhornmedia.com%2F2022%2F03%2F24%2Fkeller-future-of-pca%2F&amp;subject=Pastor%20Tim%20Keller%20on%20future%20of%20PCA\" title=\"Send by email\" aria-label=\"Send by email\" role=\"button\" rel=\"noopener nofollow\" class=\"shariff-link c9\">email <\/a><\/li>\n<li class=\"shariff-button info shariff-nocustomcolor c12\"><a href=\"https:\/\/www.mediawiki.org\/wiki\/Extension:Shariff\" title=\"More information\" aria-label=\"More information\" role=\"button\" rel=\"noopener\" class=\"shariff-link c11\" target=\"_blank\"><\/a><\/li>\n<\/ul><\/div>\n<p class=\"extratags\">Tags: <a href=\"https:\/\/warhornmedia.com\/tag\/church-reform-and-discipline\/\" rel=\"tag\">Church reform and discipline<\/a>, <a href=\"https:\/\/warhornmedia.com\/tag\/covenant-theological-seminary\/\" rel=\"tag\">Covenant Theological Seminary<\/a>, <a href=\"https:\/\/warhornmedia.com\/tag\/creation\/\" rel=\"tag\">Creation<\/a>, <a href=\"https:\/\/warhornmedia.com\/tag\/evolution\/\" rel=\"tag\">Evolution<\/a>, <a href=\"https:\/\/warhornmedia.com\/tag\/greg-johnson\/\" rel=\"tag\">Greg Johnson<\/a>, <a href=\"https:\/\/warhornmedia.com\/tag\/hell\/\" rel=\"tag\">Hell<\/a>, <a href=\"https:\/\/warhornmedia.com\/tag\/jack-collins\/\" rel=\"tag\">Jack Collins<\/a>, <a href=\"https:\/\/warhornmedia.com\/tag\/memorial-presbyterian-church\/\" rel=\"tag\">Memorial Presbyterian Church<\/a>, <a href=\"https:\/\/warhornmedia.com\/tag\/missouri-presbytery\/\" rel=\"tag\">Missouri Presbytery<\/a>, <a href=\"https:\/\/warhornmedia.com\/tag\/pca\/\" rel=\"tag\">PCA<\/a>, <a href=\"https:\/\/warhornmedia.com\/tag\/revoice\/\" rel=\"tag\">Revoice<\/a>, <a href=\"https:\/\/warhornmedia.com\/tag\/side-b\/\" rel=\"tag\">Side B<\/a>, <a href=\"https:\/\/warhornmedia.com\/tag\/tim-keller\/\" rel=\"tag\">Tim Keller<\/a><\/p>",
				"created_at": "2022-04-01T01:30:25+0000",
				"updated_at": "2022-04-01T01:30:25+0000",
				"published_at": "2022-03-24T22:22:23+0000",
				"published_by": [
					"Tim Bayly"
				],
				"starred_at": null,
				"annotations": [],
				"mimetype": "text\/html; charset=UTF-8",
				"language": "en_US",
				"reading_time": 46,
				"domain_name": "warhornmedia.com",
				"preview_picture": "https:\/\/warhornmedia.com\/wp-content\/uploads\/2022\/03\/5407828848_a52e47a4a3_b-780x405-1.jpeg",
				"http_status": "200",
				"headers": {
					"server": "nginx",
					"date": "Fri, 01 Apr 2022 01:30:24 GMT",
					"content-type": "text\/html; charset=UTF-8",
					"transfer-encoding": "chunked",
					"connection": "keep-alive",
					"vary": "Accept-Encoding",
					"sg-f-cache": "HIT",
					"x-httpd": "1",
					"host-header": "8441280b0c35cbc1147f8ba998a563a7",
					"x-proxy-cache": "HIT"
				},
				"_links": {
					"self": {
						"href": "\/api\/entries\/13"
					}
				}
			},
			{
				"is_archived": 1,
				"is_starred": 1,
				"user_name": "justin",
				"user_email": "justinbrooks@fastmail.com",
				"user_id": 2,
				"tags": [],
				"is_public": false,
				"id": 11,
				"uid": null,
				"title": "How Partisan Politics Fractured The Evangelical-Industrial Complex",
				"url": "https:\/\/thefederalist.com\/2022\/03\/17\/how-partisan-politics-captured-and-fractured-the-evangelical-industrial-complex\/",
				"hashed_url": "3270923ecd9016c368e811b9207c384d13342f3a",
				"origin_url": null,
				"given_url": "https:\/\/thefederalist.com\/2022\/03\/17\/how-partisan-politics-captured-and-fractured-the-evangelical-industrial-complex\/",
				"hashed_given_url": "3270923ecd9016c368e811b9207c384d13342f3a",
				"archived_at": "2022-04-01T03:14:32+0000",
				"content": "<p>Ed Litton’s decision not to seek the usually perfunctory second term as president of the Southern Baptist Convention (SBC) will not surprise keen observers of the evangelical world. It marks just the latest effort by elites to salvage a collapsing evangelical movement bent on capturing the largest Protestant denomination in North America. Damaged by his insistence that “sexual sin is only <a href=\"https:\/\/www.youtube.com\/watch?v=dJKIfZribqY\">whispered<\/a> in the Bible,” and exposure as a decade-plus plagiarizer of others’ sermons, Litton’s usefulness to the woke evangelical cause has collapsed.   <\/p><p>For 20 years, a resurgence of evangelical vitality associated with superstar New York City pastor Timothy Keller sparked waves of new church plants among Gen Xers, Millennials, and Generation Z. Its tentacles penetrated the largest evangelical publishing houses and the largest protestant denominations, including the Presbyterian Church in America and the SBC. By 2012, Christianity Today’s Skye Jethani justly called the phalanx of luminaries and institutions involved the “Evangelical Industrial Complex (EIC).” <\/p><p>But according to one of its brightest lights, North Carolina pastor Kevin DeYoung, the party is <a href=\"https:\/\/www.thegospelcoalition.org\/blogs\/kevin-deyoung\/why-reformed-evangelicalism-has-splintered-four-approaches-to-race-politics-and-gender\/\">over<\/a>:<\/p><blockquote class=\"wp-block-quote\">\n<p> . . .on the other side of Ferguson (2014), Trump (2016), <a href=\"https:\/\/www.thegospelcoalition.org\/conference\/mlk50\/\">MLK50<\/a> (2018), coronavirus (2020–2021), George Floyd (2020), and more Trump (2020–2021), the remarkable coming together [of reformed evangelicals] seems to be all but torn apart. . . . We won’t be able to put all the pieces of Humpty Dumpty back together again . . .<\/p>\n<\/blockquote><p>DeYoung accurately identifies hot political realities as key factors in the break-up of the EIC. We should add to DeYoung’s list of political flashpoints critical race theory (CRT), the crisis at the U.S. border, Black Lives Matter, identity politics, and the recent totalitarian suppression of truckers by Canada’s prime minister. Left unidentified is the political party whose sensibilities precipitated Humpty Dumpty’s fall from his wall.<\/p><p>The EIC fell under the spell of what theologian Karl Barth called an “alien norm” — the capture of the church’s message by an external, and therefore, illegitimate pretender to spiritual authority. The alien norm, in this case, was the political proclivities and antipathies of “blue communities” — college educated, Democrat-voting denizens of the nation’s cities and blue enclaves clustered across the fruited plain.<\/p><p>From its inception, the Keller movement <a href=\"https:\/\/www.thegospelcoalition.org\/about\/foundation-documents\/\">vowed<\/a> to find winsome ways to reach <a href=\"https:\/\/www.cru.org\/content\/dam\/cru\/legacy\/2012\/02\/A_Theology_of_Cities.pdf\">blue<\/a> communities. Keller <a href=\"https:\/\/www.amazon.com\/Reason-God-Belief-Age-Skepticism\/dp\/1594483493\/ref=sr_1_1?crid=37P5XSIB6MD9N&amp;keywords=reason+for+god&amp;qid=1645995530&amp;s=books&amp;sprefix=reason+for+god%2Cstripbooks%2C149&amp;sr=1-1\">recognized<\/a> that cultural ignorance and captivation by culture endangers faithful proclamation of the gospel and harmony among the faithful.<\/p><p>But not to worry; unity within the burgeoning EIC was to be rooted in core doctrines, not in politics or church-planting strategy or anything else. The previous president of the Southern Baptist Convention, J.D. Greear, spoke for the EIC when he invoked that ancient, oft-repeated aphorism: “in essentials, unity; in nonessentials, diversity; in all things, charity.” <\/p><p>So what went wrong? How did “the remarkable coming together” of these doctrine-bonded evangelicals fall apart? The short answer is the politics of the blue communities.<\/p><p>What counts as winsomeness in any community is determined by that community, not by those looking to be found winsome to them. In blue communities, partisan political preferences proved increasingly non-negotiable.<\/p><p>Since 2014, the so-called Overton Window has repeatedly lurched left and altered blue community sensibilities in the process. Named for the late policy analyst Joseph P. Overton, this “window” designates the range of politically acceptable views held within a given community at a given time. As the blue community Overton Window moved left, winsomeness to them demanded not only accommodation of an ever-more Squad-pleasing Democrat Party, but also un-winsomeness to the un-woke.<\/p><p>That new demand sheds light on Keller’s penchant for charging conservatives with living by fear, of making an idol of conservative political loyalties, and of his recent commendation of conservative-bashing comedian Stephen Cobert’s musings on how his faith influences his work. Recently leaked audio <a href=\"https:\/\/www.dailywire.com\/news\/exclusive-in-leaked-audio-former-nih-director-new-biden-science-adviser-laughs-over-threatening-unemployment-to-force-vaccines-blames-trump-for-covid-19-deaths\">records<\/a> National Institutes of Health Director Francis Collins, a self-declared evangelical, in an interview with former SBC chief ethicist Russell Moore employing a southern accent to mock vaccine-wary conservatives and chuckling over threats posed to their jobs should they shun the shot.  <\/p><p>After Never Trumper evangelical David French <a href=\"https:\/\/www.dailywire.com\/news\/major-pastors-rebuke-david-french-over-his-repeated-criticism-of-churches-and-white-evangelicals\">identified<\/a> ordinary conservative pew-sitters as America’s “most dangerous political radicals,” DeYoung called for a halt to French’s constant “white evangelical jeremiad.” The pattern of EIC hostility reaches back years and reached a clarifying crescendo in <a href=\"https:\/\/www.youtube.com\/watch?v=TOIV7gq5fkM\">2018<\/a> as SBC elites wooed Texas celebrity pastor Matt Chandler to stick with the SBC despite his <a href=\"https:\/\/spectator.org\/battle-between-southern-baptists\/\">views<\/a> expressed to star Baptist pastor John Piper and others that he finds conservative evangelicals and Southern Baptists to be “fools” and “morons.”<\/p><p>An EIC cancel culture emerged that produced the nameable and explainable fragments comprised by the “coming apart” DeYoung laments. Megachurch pastor John MacArthur found himself out of the loop after he spearheaded the Dallas “Statement on Social Justice and the Gospel” which expresses views shared by much of the large majority of evangelicals who voted for Donald Trump. Black Southern Baptist best-selling author and preacher extraordinaire Voddie Baucham achieved <em>persona non grata<\/em> status when he refused to affirm the racism narrative about the police shooting death of Michael Brown in Ferguson, Missouri.<\/p><p>After Old Testament Hebrew scholar Russell Fuller signed the Dallas Statement and dared question the CRT dogma of systemic racism, he lost his job at the Southern Baptist Theological Seminary. Theologian Wayne Grudem’s decades of service to reformed evangelicals and authoring of the perennially best-selling “Systematic Theology” failed to shield him from EIC non-personing. Protective of blue community sensibility, EIC gate-keepers found no place for Grudem’s widely hailed Townhall <a href=\"https:\/\/townhall.com\/columnists\/waynegrudem\/2016\/07\/28\/why-voting-for-donald-trump-is-a-morally-good-choice-n2199564\">piece<\/a>, “Why Voting for Trump is a Good Moral Choice.”<\/p><p>Platform controllers at the Southern Baptist Convention in Nashville last summer thwarted black Southern Baptist best-selling, award-winning author and expert on race Carol Swain when she tried to speak against CRT.<\/p><p>Although once a major force within the EIC, the president of the flagship SBC seminary Albert Mohler reversed himself to support Trump in 2020. In response, woker SBC elites successfully tapped unknown pastor Litton to scuttle Mohler’s candidacy for the SBC presidency. Denominational resources and mobilization of the vast SBC bureaucracy were deployed on behalf of Litton, the wokest candidate in the field.<\/p><p>As president, white EIC-backed Litton declined to invite newly elected un-woke black SBC first vice president Lee Brand to take part in a highly publicized denominational conversation on racial reconciliation. Meanwhile, for six years, evangelical never Trumpers of all colors retained membership in good standing in EIC circles.   <\/p><p>Within 24 hours of Litton’s announced withdrawal from the race for SBC president this summer, Florida Pastor Willy Rice, also white, announced his own candidacy for the post. Like Litton, Rice speaks passionately about the need to platform African-American voices but has no persons of color on staff at the church he leads. He also ignores all un-woke voices including that of Brand, who occupies the highest SBC office of any elected black Southern Baptist.<\/p><p>Like Litton, Mohler, Keller, and Moore, Rice assiduously protects himself from the threat posed by un-woke blacks smeared as Uncle Toms by blue communities. But Rice was happy to platform and nod approvingly before blacks invited to his church to <a href=\"https:\/\/www.youtube.com\/watch?v=dRqcL2DQOJQ\">tout<\/a> Robin DiAngelo’s bestselling CRT manifesto, “WhiteFragility.”   <\/p><p>The EIC fell into the trap Keller had resolved to avoid. Keller <a href=\"https:\/\/www.goodreads.com\/work\/quotes\/17327750-center-church-doing-balanced-gospel-centered-ministry-in-your-city\">warned<\/a> — “if we are not deliberately thinking about our culture, we will simply be conformed to it without ever knowing it is happening.” To blue communities, un-woke evangelicals became, as Hilary Clinton taught the nation to view them, “a basket of deplorables.”<\/p><p>The EIC hoped to strike a less political posture. But the blue communities to which the movement tied its branding, messaging, and platforming dictated terms of winsomeness incompatible with that aim.<\/p><p>The arc of the EIC’s rise and fall calls into question the assumption that theology and politics can or should be treated as separable enemies. Religious belief or lack thereof, moral convictions, and political loyalties inevitably penetrate one another within communities whether colored blue, red, or purple. Efforts to spread the gospel that imagine otherwise risk unhappy and potentially shattering collisions with reality.    <\/p><hr class=\"wp-block-separator\" \/><p>Mark DeVine is a pastor, former missionary in Bangkok, Thailand, and a theology professor in Alabama. He is the author of \"<a href=\"https:\/\/www.amazon.com\/Bonhoeffer-Speaks-Today-Following-Jesus\/dp\/0805432612\/ref=sr_1_1?keywords=bonhoeffer+speaks+today&amp;qid=1584320486&amp;sr=8-1\">Bonhoeffer Speaks Today<\/a>\" and \"<a>Shalom Yesterday, Today, and Forever<\/a>.\"<\/p>",
				"created_at": "2022-03-28T01:49:41+0000",
				"updated_at": "2022-04-01T03:14:32+0000",
				"published_at": "2022-03-17T09:32:00+0000",
				"published_by": null,
				"starred_at": "2022-04-01T03:14:32+0000",
				"annotations": [],
				"mimetype": "text\/html; charset=UTF-8",
				"language": "en_US",
				"reading_time": 7,
				"domain_name": "thefederalist.com",
				"preview_picture": "https:\/\/thefederalist.com\/wp-content\/uploads\/2022\/03\/Screen-Shot-2022-03-15-at-4.46.34-PM-1024x627.png",
				"http_status": "200",
				"headers": {
					"date": "Mon, 28 Mar 2022 01:49:41 GMT",
					"content-type": "text\/html; charset=UTF-8",
					"transfer-encoding": "chunked",
					"connection": "keep-alive",
					"vary": "Accept-Encoding, Accept-Encoding, Accept-Encoding,Cookie",
					"cf-edge-cache": "cache,platform=wordpress",
					"link": "<https:\/\/thefederalist.com\/wp-json\/>; rel=\"https:\/\/api.w.org\/\", <https:\/\/thefederalist.com\/wp-json\/wp\/v2\/posts\/269114>; rel=\"alternate\"; type=\"application\/json\"",
					"x-powered-by": "WP Engine",
					"x-cacheable": "SHORT",
					"cache-control": "max-age=600, must-revalidate",
					"x-cache": "HIT: 2",
					"x-cache-group": "normal",
					"cf-cache-status": "DYNAMIC",
					"expect-ct": "max-age=604800, report-uri=\"https:\/\/report-uri.cloudflare.com\/cdn-cgi\/beacon\/expect-ct\"",
					"report-to": "{\"endpoints\":[{\"url\":\"https:\\\/\\\/a.nel.cloudflare.com\\\/report\\\/v3?s=tu84fkkr8dtKl6mNAxTkK2m3efx40wrwA2Lkxe6k2tRwcQaLizGc3XHVduQUKM0zQrlD\/elHccJjQZ\/DrrtppDB4d4rMAR3pz61m0ewxCiv8GeBZ1CuzCVguM60HvTW92tgK\"}],\"group\":\"cf-nel\",\"max_age\":604800}",
					"nel": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}",
					"server": "cloudflare",
					"cf-ray": "6f2cb5ec3da82daa-ORD",
					"alt-svc": "h3=\":443\"; ma=86400, h3-29=\":443\"; ma=86400"
				},
				"_links": {
					"self": {
						"href": "\/api\/entries\/11"
					}
				}
			},
			{
				"is_archived": 0,
				"is_starred": 0,
				"user_name": "justin",
				"user_email": "justinbrooks@fastmail.com",
				"user_id": 2,
				"tags": [],
				"is_public": false,
				"id": 10,
				"uid": null,
				"title": "Intro to Networking - Introduction to Virtual LANs (VLANs) and Tagging",
				"url": "https:\/\/help.ui.com\/hc\/en-us\/articles\/222183968",
				"hashed_url": "5da0fc29c19449682a2d3d2fb05f330d14e7eb32",
				"origin_url": null,
				"given_url": "https:\/\/help.ui.com\/hc\/en-us\/articles\/222183968",
				"hashed_given_url": "5da0fc29c19449682a2d3d2fb05f330d14e7eb32",
				"archived_at": null,
				"content": "wallabag can't retrieve contents for this article. Please <a href=\"https:\/\/doc.wallabag.org\/en\/user\/errors_during_fetching.html#how-can-i-help-to-fix-that\">troubleshoot this issue<\/a>.",
				"created_at": "2022-03-19T18:48:10+0000",
				"updated_at": "2022-03-19T18:48:25+0000",
				"published_at": null,
				"published_by": [
					""
				],
				"starred_at": null,
				"annotations": [],
				"mimetype": null,
				"language": null,
				"reading_time": 0,
				"domain_name": "help.ui.com",
				"preview_picture": null,
				"http_status": null,
				"headers": null,
				"_links": {
					"self": {
						"href": "\/api\/entries\/10"
					}
				}
			},
			{
				"is_archived": 0,
				"is_starred": 0,
				"user_name": "justin",
				"user_email": "justinbrooks@fastmail.com",
				"user_id": 2,
				"tags": [],
				"is_public": false,
				"id": 9,
				"uid": null,
				"title": "Why we stopped making Einsteins",
				"url": "https:\/\/erikhoel.substack.com\/p\/why-we-stopped-making-einsteins?s=r",
				"hashed_url": "be0e2ebf987cc5318fd3850dfc74691c421fd460",
				"origin_url": null,
				"given_url": "https:\/\/erikhoel.substack.com\/p\/why-we-stopped-making-einsteins?s=r",
				"hashed_given_url": "be0e2ebf987cc5318fd3850dfc74691c421fd460",
				"archived_at": null,
				"content": "<h3 class=\"subtitle\">Geniuses of the past were aristocratically tutored<\/h3><div class=\"available-content body markup\">\n<div class=\"captioned-image-container\">\n<figure><a class=\"image-link image2\" target=\"_blank\" rel=\"nofollow\" href=\"https:\/\/cdn.substack.com\/image\/fetch\/f_auto,q_auto:good,fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F35f41a91-1345-4169-a892-86468e236106_800x880.jpeg\"><img src=\"https:\/\/cdn.substack.com\/image\/fetch\/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F35f41a91-1345-4169-a892-86468e236106_800x880.jpeg\" width=\"800\" height=\"880\" data-attrs=\"{&quot;src&quot;:&quot;https:\/\/bucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com\/public\/images\/35f41a91-1345-4169-a892-86468e236106_800x880.jpeg&quot;,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:880,&quot;width&quot;:800,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:307420,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image\/jpeg&quot;,&quot;href&quot;:null}\" class=\"sizing-normal\" alt=\"\" srcset=\"https:\/\/cdn.substack.com\/image\/fetch\/w_424, c_limit, f_auto, denied:q_auto:good, denied:fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F35f41a91-1345-4169-a892-86468e236106_800x880.jpeg 424w, https:\/\/cdn.substack.com\/image\/fetch\/w_848, c_limit, f_auto, denied:q_auto:good, denied:fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F35f41a91-1345-4169-a892-86468e236106_800x880.jpeg 848w, https:\/\/cdn.substack.com\/image\/fetch\/w_1272, c_limit, f_auto, denied:q_auto:good, denied:fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F35f41a91-1345-4169-a892-86468e236106_800x880.jpeg 1272w, https:\/\/cdn.substack.com\/image\/fetch\/w_1456, c_limit, f_auto, denied:q_auto:good, denied:fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F35f41a91-1345-4169-a892-86468e236106_800x880.jpeg 1456w\" referrerpolicy=\"no-referrer\" \/><\/a>\n<figcaption class=\"image-caption\">Art for <em>The Intrinsic Perspective<\/em> is by <a href=\"https:\/\/www.alexandernaughton.com\/\" rel=\"\">Alexander Naughton<\/a><\/figcaption><\/figure><\/div>\n<p>I think the most depressing fact about humanity is that during the 2000s most of the world was handed essentially free access to the entirety of knowledge and that <em>didn’t<\/em> trigger a golden age.<\/p>\n<p>Think about the advent of the internet long enough and it seems impossible to not start throwing away preconceptions about how genius is produced. If genius were just a matter of genetic ability, then in the past century, as the world’s population increased dramatically, and as mass education skyrocketed, and as racial and gender barriers came thundering down across the globe, and particularly in the last few decades as free information saturated our society, we should have seen a genius boom—an efflorescence of the best mathematicians, the greatest scientists, the most awe-inspiring artists.<\/p>\n<p>If a renaissance be too grand for you, will you at least admit we should have expected some sort of a bump?<\/p>\n<p>And yet, this great real-world experiment has seen, not just no effect, but perhaps the exact opposite effect of a decline of genius. Consider how rare true world-historic geniuses are now-a-days, and how different it was in the past. In “<a href=\"https:\/\/scholars-stage.org\/where-have-all-the-great-works-gone\/\" rel=\"\">Where Have All the Great Books Gone?<\/a>” Tanner Greer uses Oswald Spengler, the original chronicler of the decline of genius back in 1914, to point out our current genius downturn.<\/p>\n<blockquote>\n<p>[Spengler] repeatedly describes Tolstoy (d. 1910), Ibsen (d. 1906), Nietzsche (d. 1900), Hertz (d. 1894), Dostoevsky (d. 1881), Marx (d. 1883), and Maxwell (1879) as figures of defining “world-historical” importance: in other words, as working on the same plane as Plato, Archimedes, Ovid, Shakespeare, and Newton. He does not argue their merits; to him it is obvious that these are the men who deserve to be thought of as “world-historical” figures, and it is clear from the way he makes his arguments that he expects that his own readers already agree with him.<\/p>\n<p>Ponder that! Spengler began writing <em>Decline of the West<\/em> in 1914. Tolstoy was only four years dead when Spengler started his book; Marx was only 30 years deceased. But Spengler could state, with the full expectation that his audience would not question him, that these men belonged in global pantheon of humanity’s greatest figures. But Spengler was hardly alone in this sort of judgement. Ten years later <a href=\"https:\/\/en.wikipedia.org\/wiki\/John_Erskine_(educator)\" rel=\"\">John Erskine<\/a> would teach his course on the great works of the Western tradition—which was the granddaddy of the Columbia Common Core, the St. John’s curriculum, and the Great Books of the Western World series—and it included all of the names mentioned above as well. To this Erskine would add the names William James, Sigmund Freud, Thomas Hardy, and Charles Darwin. . .<\/p>\n<p>Is there anyone who died in the last decade you could make that sort of claim for?<\/p>\n<p>How about for the last two decades?<\/p>\n<p>The last three?<\/p>\n<p>Or is there anyone at all who is still living today that might be described this way?<\/p>\n<\/blockquote>\n<p>There are a bunch of other analyses (really, laments) of a similar nature I could name, from <em>Nature<\/em>’s “<a href=\"https:\/\/www.nature.com\/articles\/493602a\" rel=\"\">Scientific genius is extinct<\/a>” to <em>The New Statesman<\/em>’s “<a href=\"https:\/\/www.newstatesman.com\/culture\/books\/2021\/05\/fall-intellectual\" rel=\"\">The fall of the intellectual<\/a>” to <em>The Chronicle of Higher Education<\/em>’s “<a href=\"https:\/\/www.chronicle.com\/article\/where-have-all-the-geniuses-gone\/\" rel=\"\">Where have all the geniuses gone?<\/a>” to <em>Wired<\/em>’s” “<a href=\"https:\/\/www.wired.com\/2011\/01\/the-difficulty-of-discovery\/\" rel=\"\">The Difficulty of Discovery (Where Have All The Geniuses Gone?)<\/a><strong>”<\/strong> to philosopher Eric Schwitzgebel’s “<a href=\"https:\/\/schwitzsplinters.blogspot.com\/2021\/11\/where-have-all-fodors-gone-or-golden.html\" rel=\"\">Where are all the Fodors?<\/a>” to my own <a href=\"https:\/\/erikhoel.substack.com\/p\/how-the-mfa-swallowed-literature?s=w\" rel=\"\">lamentation on the lack<\/a> of leading fiction writers.<\/p>\n<p>If you disagree, I’ll certainly admit that finding irrefutable evidence for a decline of genius is difficult—intellectual contributions are extremely hard to quantify, the definition of genius is always up for debate, and any discussion will necessarily elide all sorts of points and counterpoints. But the numbers, at least at first glance, seem to support the anecdotal. Here’s a chart from <em>Cold Takes<\/em>’ “<a href=\"https:\/\/www.cold-takes.com\/wheres-todays-beethoven\/#books-the-longest-series-i-have\" rel=\"\">Where’s Today’s Beethoven?<\/a>” Below, we can see the number of acclaimed scientists (in blue) and artists (in red), divided by the effective population (total human population with the education and access to contribute to these fields).<\/p>\n<div class=\"captioned-image-container\">\n<figure><a class=\"image-link image2\" target=\"_blank\" rel=\"nofollow\" href=\"https:\/\/cdn.substack.com\/image\/fetch\/f_auto,q_auto:good,fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F72d18e1c-baab-43f6-8469-05a14851fa5b_1200x742.png\"><img src=\"https:\/\/cdn.substack.com\/image\/fetch\/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F72d18e1c-baab-43f6-8469-05a14851fa5b_1200x742.png\" width=\"1200\" height=\"742\" data-attrs=\"{&quot;src&quot;:&quot;https:\/\/bucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com\/public\/images\/72d18e1c-baab-43f6-8469-05a14851fa5b_1200x742.png&quot;,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:742,&quot;width&quot;:1200,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:null,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null}\" class=\"sizing-normal\" alt=\"\" srcset=\"https:\/\/cdn.substack.com\/image\/fetch\/w_424, c_limit, f_auto, denied:q_auto:good, denied:fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F72d18e1c-baab-43f6-8469-05a14851fa5b_1200x742.png 424w, https:\/\/cdn.substack.com\/image\/fetch\/w_848, c_limit, f_auto, denied:q_auto:good, denied:fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F72d18e1c-baab-43f6-8469-05a14851fa5b_1200x742.png 848w, https:\/\/cdn.substack.com\/image\/fetch\/w_1272, c_limit, f_auto, denied:q_auto:good, denied:fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F72d18e1c-baab-43f6-8469-05a14851fa5b_1200x742.png 1272w, https:\/\/cdn.substack.com\/image\/fetch\/w_1456, c_limit, f_auto, denied:q_auto:good, denied:fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F72d18e1c-baab-43f6-8469-05a14851fa5b_1200x742.png 1456w\" referrerpolicy=\"no-referrer\" \/><\/a>\n<figcaption class=\"image-caption\">From “<a href=\"https:\/\/www.cold-takes.com\/wheres-todays-beethoven\/#books-the-longest-series-i-have\" rel=\"\">Where’s Today’s Beethoven?<\/a>”<\/figcaption><\/figure><\/div>\n<p>This particular dataset ends at 1950, but the downward trend is clear. And <em><a href=\"https:\/\/www.strangeloopcanon.com\/p\/the-mythology-of-genius\" rel=\"\">Strange Loop Canon<\/a><\/em> put together this graph of geniuses based on Wikipedia mentions.<\/p>\n<div class=\"captioned-image-container\">\n<figure><a class=\"image-link image2\" target=\"_blank\" rel=\"nofollow\" href=\"https:\/\/cdn.substack.com\/image\/fetch\/f_auto,q_auto:good,fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F99c1f00d-9c9b-46a0-ae77-ef1e2bc9dfc4_956x556.png\"><img src=\"https:\/\/cdn.substack.com\/image\/fetch\/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F99c1f00d-9c9b-46a0-ae77-ef1e2bc9dfc4_956x556.png\" width=\"528\" height=\"307.0794979079498\" data-attrs=\"{&quot;src&quot;:&quot;https:\/\/bucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com\/public\/images\/99c1f00d-9c9b-46a0-ae77-ef1e2bc9dfc4_956x556.png&quot;,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:556,&quot;width&quot;:956,&quot;resizeWidth&quot;:528,&quot;bytes&quot;:76849,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image\/png&quot;,&quot;href&quot;:null}\" class=\"sizing-normal\" alt=\"\" srcset=\"https:\/\/cdn.substack.com\/image\/fetch\/w_424, c_limit, f_auto, denied:q_auto:good, denied:fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F99c1f00d-9c9b-46a0-ae77-ef1e2bc9dfc4_956x556.png 424w, https:\/\/cdn.substack.com\/image\/fetch\/w_848, c_limit, f_auto, denied:q_auto:good, denied:fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F99c1f00d-9c9b-46a0-ae77-ef1e2bc9dfc4_956x556.png 848w, https:\/\/cdn.substack.com\/image\/fetch\/w_1272, c_limit, f_auto, denied:q_auto:good, denied:fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F99c1f00d-9c9b-46a0-ae77-ef1e2bc9dfc4_956x556.png 1272w, https:\/\/cdn.substack.com\/image\/fetch\/w_1456, c_limit, f_auto, denied:q_auto:good, denied:fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F99c1f00d-9c9b-46a0-ae77-ef1e2bc9dfc4_956x556.png 1456w\" referrerpolicy=\"no-referrer\" \/><\/a>\n<figcaption class=\"image-caption\">From “<a href=\"https:\/\/www.strangeloopcanon.com\/p\/the-mythology-of-genius?s=r\" rel=\"\">The Mythology of Genius<\/a>”<\/figcaption><\/figure><\/div>\n<p>These charts don’t even quantify the effective population explosion that the internet represented (and its unsettling concomitant lack of a genius boom).<\/p>\n<p>One might, of course, reply that there are still many Einsteins, they just don’t come off as Einsteins because ideas are so much harder to find now. This “ideas are getting harder to find” argument does indeed have some <a href=\"https:\/\/web.stanford.edu\/~chadj\/IdeaPF.pdf\" rel=\"\">data to support it<\/a>, although <a href=\"https:\/\/guzey.com\/economics\/bloom\/\" rel=\"\">not everyone agrees<\/a>. Yet, even if ideas are getting harder to find (to some degree), does it actually fully explain our dearth of geniuses? Surely, ideas didn’t get harder to find in the last twenty-five years to exactly such a degree it completely nullified the explosion of free information to pretty much everyone on Earth? And “ideas are getting harder to find” seems especially unconvincing outside the hard sciences in domains like music or fiction.<\/p>\n<p>We may be uncomfortable with it being pointed out, but the absence of genius is a major problem. Global cultural and intellectual exhaustion are an existential risk to the longterm viability of humanity. Geniuses prevent that from happening; they renew us, rejuvenate and reinvigorate us. We shouldn’t be shy about it.<\/p>\n<p>So, where are all the Einsteins?<\/p>\n<div class=\"captioned-image-container\">\n<figure><a class=\"image-link image2\" target=\"_blank\" rel=\"nofollow\" href=\"https:\/\/cdn.substack.com\/image\/fetch\/f_auto,q_auto:good,fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F942cf4e6-9539-4b9c-8dad-7a07ae9f8915_2912x332.png\"><img src=\"https:\/\/cdn.substack.com\/image\/fetch\/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F942cf4e6-9539-4b9c-8dad-7a07ae9f8915_2912x332.png\" width=\"1456\" height=\"166\" data-attrs=\"{&quot;src&quot;:&quot;https:\/\/bucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com\/public\/images\/942cf4e6-9539-4b9c-8dad-7a07ae9f8915_2912x332.png&quot;,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:166,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:12688,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image\/png&quot;,&quot;href&quot;:null}\" class=\"sizing-normal\" alt=\"\" srcset=\"https:\/\/cdn.substack.com\/image\/fetch\/w_424, c_limit, f_auto, denied:q_auto:good, denied:fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F942cf4e6-9539-4b9c-8dad-7a07ae9f8915_2912x332.png 424w, https:\/\/cdn.substack.com\/image\/fetch\/w_848, c_limit, f_auto, denied:q_auto:good, denied:fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F942cf4e6-9539-4b9c-8dad-7a07ae9f8915_2912x332.png 848w, https:\/\/cdn.substack.com\/image\/fetch\/w_1272, c_limit, f_auto, denied:q_auto:good, denied:fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F942cf4e6-9539-4b9c-8dad-7a07ae9f8915_2912x332.png 1272w, https:\/\/cdn.substack.com\/image\/fetch\/w_1456, c_limit, f_auto, denied:q_auto:good, denied:fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F942cf4e6-9539-4b9c-8dad-7a07ae9f8915_2912x332.png 1456w\" referrerpolicy=\"no-referrer\" \/><\/a><\/figure><\/div>\n<p>The answer must lie in education somewhere. And if we look into research on different education strategies and their effectiveness, we do indeed see all sorts of debates about best practices, learning styles, class size, monetary policy, and equality. But mostly we see, actually, that none of it matters much. Education researcher and fellow Substack writer Freddie deBoer <a href=\"https:\/\/freddiedeboer.substack.com\/p\/education-doesnt-work?s=r\" rel=\"\">points out that<\/a><\/p>\n<blockquote>\n<p>. . . winning a lottery to attend a supposedly better school in Chicago <a href=\"https:\/\/onlinelibrary.wiley.com\/doi\/abs\/10.1111\/j.1468-0262.2006.00702.x\" rel=\"\">makes no difference<\/a> on educational outcomes. In New York? <a href=\"https:\/\/www.aeaweb.org\/articles?id=10.1257\/app.6.3.58\" rel=\"\">Makes no difference<\/a>. What determines college completion rates, high school quality? No, that <a href=\"https:\/\/www.aeaweb.org\/articles?id=10.1257\/app.6.3.20\" rel=\"\">makes no difference<\/a>; what matters is “preentry ability.” How about private vs. public schools? Corrected for underlying demographic differences, it <a href=\"https:\/\/papers.ssrn.com\/sol3\/papers.cfm?abstract_id=2505333\" rel=\"\">makes no difference<\/a>. Parents in many cities are obsessive about getting their kids into competitive exam high schools, but when you adjust for differences in ability, attending them <a href=\"http:\/\/journals.sagepub.com\/doi\/pdf\/10.3102\/0162373716672039\" rel=\"\">makes no difference<\/a>. The kids who just missed the cut score and the kids who just beat it have very similar underlying ability and so it should not surprise us in the least that they have very similar outcomes, despite going to very different schools. (The perception that these schools matter is based on exactly the same bad logic that Harvard benefits from.) Similarly, highly sought-after government schools in Kenya <a href=\"https:\/\/www.aeaweb.org\/articles?id=10.1257\/app.6.3.234\" rel=\"\">make no difference<\/a>. Winning the lottery to choose your middle school in China? <a href=\"https:\/\/ncspe.tc.columbia.edu\/working-papers\/OP139.pdf\" rel=\"\">Makes no difference<\/a>.<\/p>\n<\/blockquote>\n<p>Many have taken this null effect of schools to be a sign of genetic determinism, wherein some innate ability, like IQ, is all that matters, and education is, at best, just the delivery of a repository of facts.<\/p>\n<p>I don’t think this is the case. For paradoxically there exists an agreed-upon and specific answer to the single best way to educate children, a way that has clear, obvious, and strong effects. The problem is that this answer is unacceptable. The superior method of education is deeply unfair and privileges those at the very top of the socioeconomic ladder. It’s an answer that was well-known historically, and is also observed by education researchers today: tutoring.<\/p>\n<p>Tutoring, one-on-one instruction, dramatically improves student’s abilities and scores. In education research this effect is sometimes called “<a href=\"https:\/\/en.wikipedia.org\/wiki\/Bloom%27s_2_sigma_problem\" rel=\"\">Bloom’s 2-sigma problem<\/a>” because in the 1980s the researcher Benjamin Bloom found that tutored students<\/p>\n<blockquote>\n<p>. . performed two standard deviations better than students who learn via conventional instructional methods—that is, \"the average tutored student was above 98% of the students in the control class.”<\/p>\n<\/blockquote>\n<p>However, despite its well-known effectiveness, tutoring’s modern incarnation almost universally concerns specific tests: in America the Advanced Placements (AP) tests, the SATs, and the GREs form the holy trinity of private tutoring. Meaning that contemporary tutoring, the most effective method of education, is overwhelmingly targeted at a small set of measurables that look good on a college resume.<\/p>\n<p>This is only a narrow version of the tutoring that was done historically. If we go back in time tutoring had a much broader scope, acting as the main method of early education, at least for the elite.<\/p>\n<p>Let us call this past form <em>aristocratic tutoring<\/em>, to distinguish it from a tutor you meet in a coffeeshop to go over SAT math problems while the clock ticks down. It’s also different than “tiger parenting,” which is specifically focused around the resume padding that’s needed for kids to meet the impossible requirements for high-tier colleges. Aristocratic tutoring was not focused on measurables. Historically, it usually involved a paid adult tutor, who was an expert in the field, spending significant time with a young child or teenager, instructing them but also engaging them in discussions, often in a live-in capacity, fostering both knowledge but also engagement with intellectual subjects and fields. As the name suggests it was something reserved mostly for aristocrats, which means, no way around it, it was deeply inequitable.<\/p>\n<p>It’s a tradition that goes back as far as one can find. For example, consider one of the greatest statesmen of all time and one of the few true philosopher-kings, the Roman Emperor Marcus Aurelius. Will Durant, in <em>The Story of Civilization: Vol III, Caesar and Christ<\/em>, said of Aurelius’s education that:<\/p>\n<blockquote>\n<p>Never was a boy so persistently educated. . . Marcus liked games and sports, even bird snaring and hunting, and some efforts were made to train his body as well as his mind and character. But seventeen tutors in childhood are a heavy handicap. Four grammarians, four rhetors, one jurist, and eight philosophers divided his soul among them. The most famous of these teachers was M. Cornelius Fronto, who taught him rhetoric . . . Marcus love him, lavished upon him all the kindnesses of an affectionate and royal pupil, and exchanged with him letters of intimate charm. . .<\/p>\n<\/blockquote>\n<p>Spanning kingdoms and continents aristocratic tutoring had a several-millennia long run. If we fast forward almost 2,000 years we can find Bertrand Russell, one of the undeniable geniuses of the 20th century, who was a classic case of aristocratic tutoring—raised by his rich grandparents, he didn’t even attend school <a href=\"https:\/\/www.jstor.org\/stable\/531585?seq=3#metadata_info_tab_contents\" rel=\"\">until he was 16<\/a>, and had a revolving door of tutors to equal Marcus’s. Many of whom were impressive scientists and intellectuals in their own right, e.g., J. Stuart, one of Russell’s tutors, had himself been a student of Lord Kelvin (that “<a href=\"https:\/\/en.wikipedia.org\/wiki\/Kelvin#:~:text=The%20kelvin%20is%20the%20base,Kelvin%20(1824%E2%80%931907).&amp;text=The%20relation%20between%20kelvin%20and,%3D%20t%C2%B0C%20%2B%20273.15.\" rel=\"\">Kelvin<\/a>”). Russell, thanks to his detailed autobiography, gives us a clear impression of what aristocratic tutoring was like. Here’s from the graphic novel adaption of Russell’s life, <em><a href=\"https:\/\/www.amazon.com\/Logicomix-search-truth-Apostolos-Doxiadis\/dp\/1596914521\" rel=\"\">Logicomix<\/a><\/em>:<\/p>\n<div class=\"captioned-image-container\">\n<figure><a class=\"image-link image2\" target=\"_blank\" rel=\"nofollow\" href=\"https:\/\/cdn.substack.com\/image\/fetch\/f_auto,q_auto:good,fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Fc03630f3-64c6-4436-ae38-5ae3dc70d809_1266x1848.png\"><img src=\"https:\/\/cdn.substack.com\/image\/fetch\/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Fc03630f3-64c6-4436-ae38-5ae3dc70d809_1266x1848.png\" width=\"1266\" height=\"1848\" data-attrs=\"{&quot;src&quot;:&quot;https:\/\/bucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com\/public\/images\/c03630f3-64c6-4436-ae38-5ae3dc70d809_1266x1848.png&quot;,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1848,&quot;width&quot;:1266,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:4600328,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image\/png&quot;,&quot;href&quot;:null}\" class=\"sizing-normal\" alt=\"\" srcset=\"https:\/\/cdn.substack.com\/image\/fetch\/w_424, c_limit, f_auto, denied:q_auto:good, denied:fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Fc03630f3-64c6-4436-ae38-5ae3dc70d809_1266x1848.png 424w, https:\/\/cdn.substack.com\/image\/fetch\/w_848, c_limit, f_auto, denied:q_auto:good, denied:fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Fc03630f3-64c6-4436-ae38-5ae3dc70d809_1266x1848.png 848w, https:\/\/cdn.substack.com\/image\/fetch\/w_1272, c_limit, f_auto, denied:q_auto:good, denied:fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Fc03630f3-64c6-4436-ae38-5ae3dc70d809_1266x1848.png 1272w, https:\/\/cdn.substack.com\/image\/fetch\/w_1456, c_limit, f_auto, denied:q_auto:good, denied:fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Fc03630f3-64c6-4436-ae38-5ae3dc70d809_1266x1848.png 1456w\" referrerpolicy=\"no-referrer\" \/><\/a><\/figure><\/div>\n<div class=\"captioned-image-container\">\n<figure><a class=\"image-link image2\" target=\"_blank\" rel=\"nofollow\" href=\"https:\/\/cdn.substack.com\/image\/fetch\/f_auto,q_auto:good,fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Fe232247b-e8bc-44e1-b7ea-cea4bc1770b3_1236x1848.png\"><img src=\"https:\/\/cdn.substack.com\/image\/fetch\/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Fe232247b-e8bc-44e1-b7ea-cea4bc1770b3_1236x1848.png\" width=\"1236\" height=\"1848\" data-attrs=\"{&quot;src&quot;:&quot;https:\/\/bucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com\/public\/images\/e232247b-e8bc-44e1-b7ea-cea4bc1770b3_1236x1848.png&quot;,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1848,&quot;width&quot;:1236,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:4619173,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image\/png&quot;,&quot;href&quot;:null}\" class=\"sizing-normal\" alt=\"\" srcset=\"https:\/\/cdn.substack.com\/image\/fetch\/w_424, c_limit, f_auto, denied:q_auto:good, denied:fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Fe232247b-e8bc-44e1-b7ea-cea4bc1770b3_1236x1848.png 424w, https:\/\/cdn.substack.com\/image\/fetch\/w_848, c_limit, f_auto, denied:q_auto:good, denied:fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Fe232247b-e8bc-44e1-b7ea-cea4bc1770b3_1236x1848.png 848w, https:\/\/cdn.substack.com\/image\/fetch\/w_1272, c_limit, f_auto, denied:q_auto:good, denied:fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Fe232247b-e8bc-44e1-b7ea-cea4bc1770b3_1236x1848.png 1272w, https:\/\/cdn.substack.com\/image\/fetch\/w_1456, c_limit, f_auto, denied:q_auto:good, denied:fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Fe232247b-e8bc-44e1-b7ea-cea4bc1770b3_1236x1848.png 1456w\" referrerpolicy=\"no-referrer\" \/><\/a><\/figure><\/div>\n<p>The same sort of idyllic learning situation was true for Russell’s famous compatriot, Ludwig Wittgenstein, who was privately tutored at home until he was 14. Name a genius and find a tutor: the governesses<a class=\"footnote-anchor\" id=\"footnote-anchor-1\" href=\"https:\/\/erikhoel.substack.com\/p\/why-we-stopped-making-einsteins?s=r#footnote-1\" rel=\"\">1<\/a> of John von Neumann taught him languages, and he had other later tutors as well. Even in the cases where the children weren’t entirely homeschooled, up until the latter half of the 20th century aristocratic tutors were a casual and constant supplement to traditional education. Consider the easy nature by which Darwin, at the age of only 16 and already in university, personally hired John Edmonstone, a former slave and black freedman, to give him lessons on taxidermy outside of his classes (lessons later key to his specimen collections on The Beagle). The young Darwin <a href=\"https:\/\/www.nhm.ac.uk\/discover\/john-edmonstone-the-man-who-taught-darwin-taxidermy.html\" rel=\"\">described Edmonstone in his letters<\/a> as someone who<\/p>\n<blockquote>\n<p>. . . gained his livelihood by stuffing birds, which he did excellently: he gave me lessons for payment, and I used often to sit with him, for he was a very pleasant and intelligent man.<\/p>\n<\/blockquote>\n<p>When you go back further, into the 1600s and 1700s, aristocratic tutors are the norm, often members of the aristocracy themselves. Voltaire’s tutor when he was young was the educated and worldly abbe de Chateauneuf, who was also his godfather. In turn, Voltaire was tutor to Émilie du Châtelet, an early female scientist and mathematician (notorious for her harsh demands of her tutors). Ada Lovelace, inventor of the first algorithm, was tutored as a youth by Mary Somerville, another early female scientist (indeed, <a href=\"https:\/\/www.themarginalian.org\/2020\/10\/20\/mary-somerville\/\" rel=\"\">the term “scientist”<\/a> was coined specifically to refer to Somerville in a gender-neutral way, rather than the previously-used “man of science”).<\/p>\n<p>The great philosopher himself, Descartes, literally died from tutoring—at the age of 53 he was giving lessons to Queen Christiana at the ungodly hour of 5 A.M., and the morning walk to the cold castle (which he hated) gave him pneumonia.<a class=\"footnote-anchor\" id=\"footnote-anchor-2\" href=\"https:\/\/erikhoel.substack.com\/p\/why-we-stopped-making-einsteins?s=r#footnote-2\" rel=\"\">2<\/a> But most of the time life as a tutor was essentially a cushy patronage job, wherein you instilled a sense of intellectual discovery into a young child in return for a hefty salary that left most of your free time intact—surely that’s what the tutors living on the Tolstoy estate must have felt, whiling away the evening hours chasing the local peasant girls after educating the young writer in the morning.<\/p>\n<p>Indeed, it’s remarkable how common aristocratic tutors were. Essentially universal. You may have heard of the Grand Tour that young European aristocrats <a href=\"https:\/\/www.huguenotsociety.org.uk\/blog\/the-grand-tour-and-its-huguenot-tutors\" rel=\"\">took part in<\/a>, traveling from country to country, visiting universities and partaking of the various cultures and cuisines and sights. But did you know the young aristocrats always <a href=\"https:\/\/www.huguenotsociety.org.uk\/blog\/the-grand-tour-and-its-huguenot-tutors\" rel=\"\">took their tutors<\/a> along with them?<\/p>\n<blockquote>\n<p>The young man (or woman) would not be traveling alone. Often it was the tutor who had already spent time educating the boy that was attached to the youngster in his (or her) travels. It could also be a specially appointed traveling tutor who was to supervise the journey.<\/p>\n<\/blockquote>\n<p>Perhaps the clearest example in history of a genius constructed by tutoring comes from the case of John Stuart Mill: philosopher, economist, politician, early feminist, and all-around Renaissance man. His father, already a famous intellectual, <a href=\"https:\/\/plato.stanford.edu\/entries\/mill\/#Life\" rel=\"\">raised John explicitly to be a genius<\/a> capable of carrying on the cause of philosophical utilitarianism, purposefully keeping the young John away from children his own age. The result was:<\/p>\n<blockquote>\n<p>Starting with Greek at age three and Latin at age eight, Mill had absorbed most of the classical canon by age twelve—along with algebra, Euclid, and the major Scottish and English historians. In his early teenage years, he studied political economy, logic, and calculus, utilising his spare time to digest treatises on experimental science as an amusement. At age fifteen—upon returning from a year-long trip to France, a nation he would eventually call home—he started work on the major treatises of philosophy, psychology and government. All this was conducted under the strict daily supervision of his father. . .<\/p>\n<\/blockquote>\n<p>This last part is a common pattern: the line between parent and tutor is often a blurry one, and it is precisely in this way that the aristocratic style of tutoring sometimes bled into the lives of the non-aristocratic. Karl Marx’s father (who was rich enough to own vineyards) privately tutored him up to the age of 12, his official schooling starting only after. Or consider the later case of Hannah Arendt, a titan of 20th century philosophy; raised upper-middle class and Jewish in Germany during the rise of Hitler, she was no aristocrat, but she received independent tutoring from rabbis and professors at various points in her young life, and, perhaps far more relevantly, her own mother <a href=\"https:\/\/en.wikipedia.org\/wiki\/Hannah_Arendt#Early_education\" rel=\"\">acted in the role<\/a> of a classic aristocratic tutor<a class=\"footnote-anchor\" id=\"footnote-anchor-3\" href=\"https:\/\/erikhoel.substack.com\/p\/why-we-stopped-making-einsteins?s=r#footnote-3\" rel=\"\">3<\/a>:<\/p>\n<blockquote>\n<p>Hannah Arendt's mother, who considered herself progressive, sought to raise her daughter along strict Goethean lines, which amongst other things, involved the reading of the complete works of Goethe. . . Goethe, at the time, was considered the essential mentor of <em>Bildung<\/em> (education), the conscious formation of mind, body and spirit. . . Hannah's developmental progress (<em>Entwicklung<\/em>) was carefully documented by her mother in a book, which she titled <em>Unser Kind<\/em> (Our Child) and measured her against the benchmark of what was then considered <em>normale Entwicklung<\/em> (\"normal development\").<\/p>\n<\/blockquote>\n<div class=\"captioned-image-container\">\n<figure><a class=\"image-link image2\" target=\"_blank\" rel=\"nofollow\" href=\"https:\/\/cdn.substack.com\/image\/fetch\/f_auto,q_auto:good,fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Fbb5e9efe-f955-47c2-8dce-d6e0d758c61a_710x849.png\"><img src=\"https:\/\/cdn.substack.com\/image\/fetch\/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Fbb5e9efe-f955-47c2-8dce-d6e0d758c61a_710x849.png\" width=\"332\" height=\"396.99718309859156\" data-attrs=\"{&quot;src&quot;:&quot;https:\/\/bucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com\/public\/images\/bb5e9efe-f955-47c2-8dce-d6e0d758c61a_710x849.png&quot;,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:849,&quot;width&quot;:710,&quot;resizeWidth&quot;:332,&quot;bytes&quot;:843523,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image\/png&quot;,&quot;href&quot;:null}\" class=\"sizing-normal\" alt=\"\" srcset=\"https:\/\/cdn.substack.com\/image\/fetch\/w_424, c_limit, f_auto, denied:q_auto:good, denied:fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Fbb5e9efe-f955-47c2-8dce-d6e0d758c61a_710x849.png 424w, https:\/\/cdn.substack.com\/image\/fetch\/w_848, c_limit, f_auto, denied:q_auto:good, denied:fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Fbb5e9efe-f955-47c2-8dce-d6e0d758c61a_710x849.png 848w, https:\/\/cdn.substack.com\/image\/fetch\/w_1272, c_limit, f_auto, denied:q_auto:good, denied:fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Fbb5e9efe-f955-47c2-8dce-d6e0d758c61a_710x849.png 1272w, https:\/\/cdn.substack.com\/image\/fetch\/w_1456, c_limit, f_auto, denied:q_auto:good, denied:fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Fbb5e9efe-f955-47c2-8dce-d6e0d758c61a_710x849.png 1456w\" referrerpolicy=\"no-referrer\" \/><\/a>\n<figcaption class=\"image-caption\">Hannah Arendt with her mother<\/figcaption><\/figure><\/div>\n<p>Another example of a case where parents acted as aristocratic tutors: Virginia Woolf. While Woolf famously did not get a formal education, she was instead <a href=\"https:\/\/sites.udel.edu\/britlitwiki\/virginia-woolf\/\" rel=\"\">rigorously homeschooled<\/a>.<\/p>\n<blockquote>\n<p>While she was growing up, Woolf did not attend school. However, she had a tutor who educated her in English literature and the classics. Her father took an interest in her education as well, and giving Woolf and her siblings private lessons in which he recommended literature and worked on improving their writing.<\/p>\n<\/blockquote>\n<p>With these examples in mind, it’s likely that at a significant contributing factor for the phenomenon of <a href=\"https:\/\/astralcodexten.substack.com\/p\/secrets-of-the-great-families?s=r\" rel=\"\">genius running in families<\/a> is that genius family members act as aristocratic tutors, encouraging learning, the life of the mind, and inculcating the pursuit of the higher mysteries in the young. When Bertrand Russell’s older brother introduced him to geometry at the age of 11, Russell later wrote in his autobiography that it was:<\/p>\n<blockquote>\n<p>. . . one of the great events of my life, as dazzling as first love.<\/p>\n<\/blockquote>\n<p>Is that really solely his innate genetic facility, or was mathematics colored by the love of his older brother?<\/p>\n<p>Recently I was discussing with a friend the hypothesis that aristocratic tutoring (of the kind we don’t do anymore) is the only known consistent method to at least occasionally produce geniuses, to which he objected “What about Einstein?” A great point. Einstein’s reputation makes him seem one the most democratic of geniuses, a term he’s synonymous with; Einstein emphasizes the innateness of genius, its capability of coming from anywhere, even a lowly patent clerk. Isn’t there that story of him getting low grades in middle school?<\/p>\n<p>Well, it turns out most of the school stuff is exaggerated or apocryphal, and Einstein had multiple tutors growing up in subjects like mathematics and philosophy, such as his uncle, Jakob Einstein, who taught him algebra. In fact, there was a family tutor of the Einsteins who went by the name Max Talmud (possibly the best name of a tutor <em>ever<\/em>), and it was indeed Max Talmud who introduced the young 12-year-old Albert to geometry, prefacing young Albert’s eventual transformation of our understanding of space and time into something geometric. Maybe we don’t make Einsteins anymore because we don’t make Max Talmuds anymore.<\/p>\n<div class=\"captioned-image-container\">\n<figure><a class=\"image-link image2\" target=\"_blank\" rel=\"nofollow\" href=\"https:\/\/cdn.substack.com\/image\/fetch\/f_auto,q_auto:good,fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F88fdcc20-0df9-4569-9109-0f977a13926b_386x556.jpeg\"><img src=\"https:\/\/cdn.substack.com\/image\/fetch\/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F88fdcc20-0df9-4569-9109-0f977a13926b_386x556.jpeg\" width=\"292\" height=\"420.60103626943004\" data-attrs=\"{&quot;src&quot;:&quot;https:\/\/bucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com\/public\/images\/88fdcc20-0df9-4569-9109-0f977a13926b_386x556.jpeg&quot;,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:556,&quot;width&quot;:386,&quot;resizeWidth&quot;:292,&quot;bytes&quot;:null,&quot;alt&quot;:&quot;images&quot;,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null}\" class=\"sizing-normal\" alt=\"images\" title=\"images\" srcset=\"https:\/\/cdn.substack.com\/image\/fetch\/w_424, c_limit, f_auto, denied:q_auto:good, denied:fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F88fdcc20-0df9-4569-9109-0f977a13926b_386x556.jpeg 424w, https:\/\/cdn.substack.com\/image\/fetch\/w_848, c_limit, f_auto, denied:q_auto:good, denied:fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F88fdcc20-0df9-4569-9109-0f977a13926b_386x556.jpeg 848w, https:\/\/cdn.substack.com\/image\/fetch\/w_1272, c_limit, f_auto, denied:q_auto:good, denied:fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F88fdcc20-0df9-4569-9109-0f977a13926b_386x556.jpeg 1272w, https:\/\/cdn.substack.com\/image\/fetch\/w_1456, c_limit, f_auto, denied:q_auto:good, denied:fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F88fdcc20-0df9-4569-9109-0f977a13926b_386x556.jpeg 1456w\" referrerpolicy=\"no-referrer\" \/><\/a>\n<figcaption class=\"image-caption\">Max Talmud, Einstein’s childhood tutor<\/figcaption><\/figure><\/div>\n<p>I’m certainly not saying that aristocratic tutoring is the <em>only<\/em> path to genius. There are people like Ramanujan, whose father was a clerk, and who was one of the greatest mathematical minds of all time (although I’ll note briefly that his home did lodge college students, who, it’s been suggested, may have acted as informal tutors). Some geniuses weren’t tutored, although verifying an absence is surprisingly difficult; tutoring is often not deigned to be mentioned except in detailed biographies. Certainly though, it appears that would-be-genius children had extremely abnormal amounts of one-on-one time with intellectually-inclined adults, who often introduced them to advanced topics far beyond their age. Once you begin looking, tutors pop up like mushrooms around historical geniuses.<\/p>\n<p>The traditional line for why essentially all intellectuals used to be aristocrats is that they were the only people with the leisure time to pursue the life of the mind. But what if it was never solely about leisure, but also a style of education that has fallen out of favor?<\/p>\n<p>For the decrease in genius sure does seem to coincide with the end of the aristocracy. Europe looms large in the history of geniuses, and for many reasons, but perhaps also its centuries-long tradition of tutored aristocracies. And this stretched quite late into the modern age. For instance, if I were forced at gunpoint to name the two greatest minds of the 20th century, I’d pick Bertrand Russell and John von Neumann. Is it really a coincidence that both were basically aristocrats? “Von” is, after all, a title. They were relics, anachronisms in a century that was shamefully and rapidly moving away from their kind. Aliens from an older world.<\/p>\n<div class=\"captioned-image-container\">\n<figure><a class=\"image-link image2\" target=\"_blank\" rel=\"nofollow\" href=\"https:\/\/cdn.substack.com\/image\/fetch\/f_auto,q_auto:good,fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F4bb1e4b7-eb18-42a6-a365-4103d0ff1d7e_2912x332.png\"><img src=\"https:\/\/cdn.substack.com\/image\/fetch\/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F4bb1e4b7-eb18-42a6-a365-4103d0ff1d7e_2912x332.png\" width=\"1456\" height=\"166\" data-attrs=\"{&quot;src&quot;:&quot;https:\/\/bucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com\/public\/images\/4bb1e4b7-eb18-42a6-a365-4103d0ff1d7e_2912x332.png&quot;,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:166,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:21506,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image\/png&quot;,&quot;href&quot;:null}\" class=\"sizing-normal\" alt=\"\" srcset=\"https:\/\/cdn.substack.com\/image\/fetch\/w_424, c_limit, f_auto, denied:q_auto:good, denied:fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F4bb1e4b7-eb18-42a6-a365-4103d0ff1d7e_2912x332.png 424w, https:\/\/cdn.substack.com\/image\/fetch\/w_848, c_limit, f_auto, denied:q_auto:good, denied:fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F4bb1e4b7-eb18-42a6-a365-4103d0ff1d7e_2912x332.png 848w, https:\/\/cdn.substack.com\/image\/fetch\/w_1272, c_limit, f_auto, denied:q_auto:good, denied:fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F4bb1e4b7-eb18-42a6-a365-4103d0ff1d7e_2912x332.png 1272w, https:\/\/cdn.substack.com\/image\/fetch\/w_1456, c_limit, f_auto, denied:q_auto:good, denied:fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F4bb1e4b7-eb18-42a6-a365-4103d0ff1d7e_2912x332.png 1456w\" referrerpolicy=\"no-referrer\" \/><\/a><\/figure><\/div>\n<p>Now consider our current situation. Despite all the language professing otherwise, in general the education system of the United States is based entirely on genetic determinism. A child is born assumed to have innate traits, including, for example, a preference as to what they want to be when they grow up (somehow just waiting fully-formed inside of their six-year-old selves). Then they are thrown into the school system, a competitive academic meritocracy wrapped in an obtuse hierarchical bureaucracy, a structure in which they will spend most of their young adult life, forced to learn mostly from their peers, who know as little as they do. Those who can’t sit through it are given drugs until they can. If they happen to test well or their parents spend the money, they might end up in slightly smaller classes, and with slightly better teachers, and with slightly smarter peers, but the structure will be the same. The first real intellectuals that most children meet in person are their college professors—already at eighteen and stuck in a class with dozens of other people (even at Harvard, introductory courses are often in the hundreds). Is it any surprise that such methods don’t reliably produce geniuses? Is it not anathema to how humans normally become interested in things? We sequestered children from great minds, and, perhaps it’s worth briefly noting, we also sequestered great minds from children.<\/p>\n<p>Today, tutoring is seen mostly as a <em>corrective<\/em> to failures within the bureaucratic structures of eduction, like an intervention to help out a course, grade, or test.<a class=\"footnote-anchor\" id=\"footnote-anchor-4\" href=\"https:\/\/erikhoel.substack.com\/p\/why-we-stopped-making-einsteins?s=r#footnote-4\" rel=\"\">4<\/a> In general, those doing well in school don’t get tutoring—it’s like we’re applying the secret genius sauce solely to the kids who aren’t going to be geniuses.<\/p>\n<div class=\"captioned-image-container\">\n<figure><a class=\"image-link image2\" target=\"_blank\" rel=\"nofollow\" href=\"https:\/\/cdn.substack.com\/image\/fetch\/f_auto,q_auto:good,fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F29bd5458-e2eb-4454-8ca4-16a217fbd48f_2912x332.png\"><img src=\"https:\/\/cdn.substack.com\/image\/fetch\/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F29bd5458-e2eb-4454-8ca4-16a217fbd48f_2912x332.png\" width=\"1456\" height=\"166\" data-attrs=\"{&quot;src&quot;:&quot;https:\/\/bucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com\/public\/images\/29bd5458-e2eb-4454-8ca4-16a217fbd48f_2912x332.png&quot;,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:166,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:14219,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image\/png&quot;,&quot;href&quot;:null}\" class=\"sizing-normal\" alt=\"\" srcset=\"https:\/\/cdn.substack.com\/image\/fetch\/w_424, c_limit, f_auto, denied:q_auto:good, denied:fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F29bd5458-e2eb-4454-8ca4-16a217fbd48f_2912x332.png 424w, https:\/\/cdn.substack.com\/image\/fetch\/w_848, c_limit, f_auto, denied:q_auto:good, denied:fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F29bd5458-e2eb-4454-8ca4-16a217fbd48f_2912x332.png 848w, https:\/\/cdn.substack.com\/image\/fetch\/w_1272, c_limit, f_auto, denied:q_auto:good, denied:fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F29bd5458-e2eb-4454-8ca4-16a217fbd48f_2912x332.png 1272w, https:\/\/cdn.substack.com\/image\/fetch\/w_1456, c_limit, f_auto, denied:q_auto:good, denied:fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F29bd5458-e2eb-4454-8ca4-16a217fbd48f_2912x332.png 1456w\" referrerpolicy=\"no-referrer\" \/><\/a><\/figure><\/div>\n<p>Might technology swoop in to the rescue once more? Perhaps aristocratic tutoring doesn’t have to be solely for aristocrats. Recent research has shown the two-sigma effect of tutoring <a href=\"https:\/\/arxiv.org\/abs\/2203.03724\" rel=\"\">using AI tutors<\/a> compared to traditional online courses. Perhaps in the future once could imagine personalized AI governesses and AI tutors. But by then, will we even need human geniuses?<\/p>\n<p>Returning to now, while online courses are growing in popularity, the grand experiment that was the introduction of the internet tells us that access to information counts for little in producing genius—perhaps almost nothing. As great as YouTube math tutorials are, they themselves haven’t triggered a golden age of mathematicians. Instead, what’s necessary for genius historically is early engagement with, not access to, intellectual subjects. And, for humans, engagement is a <em>social<\/em> phenomenon; particularly for children, this requires interactions with adults who can not just give them individual attention, but also model for them what serious intellectual engagement looks like. Think of how influential the in-his-twenties Max Talmud must have seemed to a preteen Einstein, handing him great books by the likes of Spinoza and Euclid.<\/p>\n<p>Could you hire a Max Talmud for your own family? I can certainly imagine a start-up specializing in online aristocratic tutoring, geared not toward tests or college resume padding but toward fundamentals, completely orthogonal to the norm of academic mass-production. This would actually fit in with some of other recent movements, like the “<a href=\"https:\/\/en.wikipedia.org\/wiki\/Slow_Food\" rel=\"\">slow food<\/a>” movement. There has already been a significant rise in homeschooling and even “unschooling” (which sounds like something that could, in some cases, essentially be parental-driven aristocratic tutoring). Yet, for such a start-up the problem is obvious: tutoring highlights economic privilege. And as Tocqueville pointed out, the rejection of aristocracy is a foundation of the American ethos. It’s telling I felt uncomfortable writing this essay, despite being confident it’s true.<\/p>\n<p>So, even if costs were reachable for the upper-middle class, would such a system be allowed to exist?<\/p>\n<div class=\"captioned-image-container\">\n<figure><a class=\"image-link image2\" target=\"_blank\" rel=\"nofollow\" href=\"https:\/\/cdn.substack.com\/image\/fetch\/f_auto,q_auto:good,fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F35152a1d-d14a-4d1d-bafd-5f1e2087e85d_2912x332.png\"><img src=\"https:\/\/cdn.substack.com\/image\/fetch\/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F35152a1d-d14a-4d1d-bafd-5f1e2087e85d_2912x332.png\" width=\"1456\" height=\"166\" data-attrs=\"{&quot;src&quot;:&quot;https:\/\/bucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com\/public\/images\/35152a1d-d14a-4d1d-bafd-5f1e2087e85d_2912x332.png&quot;,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:166,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:12890,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image\/png&quot;,&quot;href&quot;:null}\" class=\"sizing-normal\" alt=\"\" srcset=\"https:\/\/cdn.substack.com\/image\/fetch\/w_424, c_limit, f_auto, denied:q_auto:good, denied:fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F35152a1d-d14a-4d1d-bafd-5f1e2087e85d_2912x332.png 424w, https:\/\/cdn.substack.com\/image\/fetch\/w_848, c_limit, f_auto, denied:q_auto:good, denied:fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F35152a1d-d14a-4d1d-bafd-5f1e2087e85d_2912x332.png 848w, https:\/\/cdn.substack.com\/image\/fetch\/w_1272, c_limit, f_auto, denied:q_auto:good, denied:fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F35152a1d-d14a-4d1d-bafd-5f1e2087e85d_2912x332.png 1272w, https:\/\/cdn.substack.com\/image\/fetch\/w_1456, c_limit, f_auto, denied:q_auto:good, denied:fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F35152a1d-d14a-4d1d-bafd-5f1e2087e85d_2912x332.png 1456w\" referrerpolicy=\"no-referrer\" \/><\/a><\/figure><\/div>\n<p>Not everything improves with time. There are a number of things that people did better in the past, both because of lost wisdom but also simply because in the past things weren’t mass-produced. Beautiful older dresses, hand-stitched rugs, even kitchen appliances used to be sturdier and last longer. You can go purchase a mass-produced cheap samurai sword online, but you’d be a fool to use it in a fight against a blade of 20-times folded steel, even if the latter were ancient. Stradivari violins, hand-crafted by members of the Italian Stradivari family, are legendarily considered to have a superior and unique sound compared to violins made with even the most modern techniques.<\/p>\n<p>A child going from governesses teaching them multiple languages to renowned scholars tutoring them in advanced mathematics is similarly not replicable in today’s world. In turning education into a system of mass production we created a superbly democratic system that made the majority of people, and the world as a whole, much better off. It was the right decision. But we lost the most elegant and beautiful minds, those mental Stradivari, who were created via an artisanal process.<\/p>\n<p>The unfortunate consequence is that, in a very real sense, our intellectual culture is filled with figures who are essentially mass-produced ersatz knock-offs of their aristocratic forebearers. They are of decent quality, they serve their purpose, and boy, they sure were cheap to produce. But I don’t think they have quite the same sound.<\/p>\n<div class=\"footnote\" id=\"footnote-1\"><a href=\"https:\/\/erikhoel.substack.com\/p\/why-we-stopped-making-einsteins?s=r#footnote-anchor-1\" class=\"footnote-number\" contenteditable=\"false\" rel=\"\">1<\/a>\n<div class=\"footnote-content\">\n<p>Governesses seem like an ignored part of this historical story—they often aren’t explicitly referred to as tutors but acted precisely as such, especially for the earliest portions of education, like learning languages. And governesses were even more universal than tutors among the aristocrats who would eventually become the geniuses of the day.<\/p>\n<\/div>\n<\/div>\n<div class=\"footnote\" id=\"footnote-2\"><a href=\"https:\/\/erikhoel.substack.com\/p\/why-we-stopped-making-einsteins?s=r#footnote-anchor-2\" class=\"footnote-number\" contenteditable=\"false\" rel=\"\">2<\/a>\n<div class=\"footnote-content\">\n<p>Descartes death-by-tutoring was nowhere near the top of the ignoble deaths of scholars—that is reserved for those who died via collisions with dogs, e.g., Jean-Jacques Rousseau was knocked over by a rambunctious Grey Hound. Kurt Vonnegut, decades after surviving the fire-bombing of Dresden, was tripped when a small dog wound its leash around his legs. But Francis Bacon outdid them all, famously dying from trying to stuff a dead chicken with snow.<\/p>\n<\/div>\n<\/div>\n<div class=\"footnote\" id=\"footnote-3\"><a href=\"https:\/\/erikhoel.substack.com\/p\/why-we-stopped-making-einsteins?s=r#footnote-anchor-3\" class=\"footnote-number\" contenteditable=\"false\" rel=\"\">3<\/a>\n<div class=\"footnote-content\">\n<p>Even Hannah Arendt’s lovers acted as aristocratic tutors. While still a young college student Arendt had an affair with her professor, the philosopher Martin Heidegger, which she (perhaps perversely) described as “the blessing of my life.” <a href=\"https:\/\/www.jstor.org\/stable\/27569287?seq=2#metadata_info_tab_contents\" rel=\"\">Apparently<\/a>:<\/p>\n<blockquote>\n<p>Arendt was to Heidegger a young, beautiful woman who could follow the complicated paths of his thought; he was to her an initiation into existential philosophy and the life of the mind.<\/p>\n<\/blockquote>\n<\/div>\n<\/div>\n<div class=\"footnote\" id=\"footnote-4\"><a href=\"https:\/\/erikhoel.substack.com\/p\/why-we-stopped-making-einsteins?s=r#footnote-anchor-4\" class=\"footnote-number\" contenteditable=\"false\" rel=\"\">4<\/a>\n<div class=\"footnote-content\">\n<p>Perhaps the super rich still do aristocratic tutoring, in secret? It turns out these are mostly, again, interventions, even if <a href=\"https:\/\/www.cnbc.com\/2013\/12\/12\/meet-the-400000-a-year-tutor.html\" rel=\"\">we look at the most expensive tutor<\/a>:<\/p>\n<blockquote>\n<p>. . . the tutor he placed for $400,000 a year was for a rich family on the West Coast. The student was having trouble with school and with substance abuse, so the tutor had to home-school the student and coach the student and his family through rehab.<\/p>\n<\/blockquote>\n<\/div>\n<\/div>\n<\/div>",
				"created_at": "2022-03-18T13:24:16+0000",
				"updated_at": "2022-03-18T13:24:16+0000",
				"published_at": "2022-03-16T13:09:14+0000",
				"published_by": [
					"Erik Hoel"
				],
				"starred_at": null,
				"annotations": [],
				"mimetype": "text\/html; charset=utf-8",
				"language": null,
				"reading_time": 23,
				"domain_name": "erikhoel.substack.com",
				"preview_picture": "https:\/\/cdn.substack.com\/image\/fetch\/w_1200,h_600,c_limit,f_jpg,q_auto:good,fl_progressive:steep\/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Fc3830432-fb91-4b0a-98dc-779dc8aa5d87_800x571.jpeg",
				"http_status": "200",
				"headers": {
					"date": "Fri, 18 Mar 2022 13:24:16 GMT",
					"content-type": "text\/html; charset=utf-8",
					"content-length": "176665",
					"connection": "keep-alive",
					"cf-ray": "6ede49a159caf242-ORD",
					"accept-ranges": "bytes",
					"cache-control": "no-cache",
					"etag": "W\/\"2b219-GuB0diabql7P7LHon4x1kTb5pE4\"",
					"strict-transport-security": "max-age=31536000",
					"vary": "Accept-Encoding",
					"via": "1.1 vegur",
					"cf-cache-status": "EXPIRED",
					"expect-ct": "max-age=604800, report-uri=\"https:\/\/report-uri.cloudflare.com\/cdn-cgi\/beacon\/expect-ct\"",
					"x-cluster": "substack",
					"x-frame-options": "sameorigin",
					"x-powered-by": "Express",
					"x-served-by": "Substack",
					"set-cookie": "__cf_bm=RXFVm3uMXza7jdt0n4A4VzUFd2_xBmGtAKdXdEdp4dU-1647609856-0-Af8IF8S1CoXyRGdefzy3t3TuxI8UuWFeC505YI99qKmL4u3BBN1l\/z7XraXi 2ZxVWNEC0a7ciwONCMUni8lmt0=; path=\/; expires=Fri, 18-Mar-22 13:54:16 GMT; domain=.substack.com; HttpOnly; Secure; SameSite=None",
					"server": "cloudflare",
					"alt-svc": "h3=\":443\"; ma=86400, h3-29=\":443\"; ma=86400"
				},
				"_links": {
					"self": {
						"href": "\/api\/entries\/9"
					}
				}
			},
			{
				"is_archived": 0,
				"is_starred": 0,
				"user_name": "justin",
				"user_email": "justinbrooks@fastmail.com",
				"user_id": 2,
				"tags": [],
				"is_public": false,
				"id": 8,
				"uid": null,
				"title": "An Introduction to Swift Package Manager",
				"url": "https:\/\/www.raywenderlich.com\/1993018-an-introduction-to-swift-package-manager",
				"hashed_url": "345b3f4a7f9fc74ed141af4233c1d0cf096d4887",
				"origin_url": null,
				"given_url": "https:\/\/www.raywenderlich.com\/1993018-an-introduction-to-swift-package-manager",
				"hashed_given_url": "345b3f4a7f9fc74ed141af4233c1d0cf096d4887",
				"archived_at": null,
				"content": "<p>In server-side Swift projects, Apple’s <em>Swift Package Manager<\/em>, or <em>SPM<\/em>, lets you manage your project dependencies, allowing you to import libraries into your applications with ease.<\/p><p>In this tutorial, you’ll build a website to display random idioms. You’ll learn how to manage projects and dependencies, and how to read and modify <em>Package.swift<\/em> manifest files.<\/p><p>Ready for a dive into logistics with SPM? Break a leg!<\/p><h2 id=\"toc-anchor-001\">Creating Packages<\/h2><p><em>Packages<\/em> are simply repositories that contain one or more libraries and executables. Your application will have a <em>Package.swift<\/em> manifest file to manage its dependencies, and every package has <em>its own<\/em> <em>Package.swift<\/em> manifest to handle any dependencies that it may have.<\/p><p>The manifest files are also written in Swift, as implied by the file extension!<\/p><p>A manifest file describes the package; it contains a list of dependencies and targets.<\/p><p>A <em>target<\/em> is the specification of a single module and its dependencies. You can compile each target that contains a <em>main.swift<\/em> to an executable.<\/p><p>You might have seen <em>modules<\/em> in Xcode before. Your app itself is an executable module, and it has dependencies that, in turn, are also modules.<\/p><p>With SPM, you can create packages right from Terminal. SPM uses the directory name as your project name when setting up your application.<\/p><h2 id=\"toc-anchor-002\">Getting Started<\/h2><p>First, create a directory with the desired project name and enter that directory:<\/p><pre lang=\"bash\">\nmkdir Website\ncd Website\n<\/pre><p>To create an executable project, run the following command:<\/p><pre lang=\"bash\">\nswift package init --type=executable\n<\/pre><div class=\"note\"><em>Note<\/em>: If you wanted to create a library instead, you would omit the type parameter and simply<code>swift package init<\/code>instead.<\/div><p>You should see the following output as the system creates all the boilerplate for an SPM project:<\/p><p><img src=\"https:\/\/koenig-media.raywenderlich.com\/uploads\/2019\/03\/Screenshot-2019-03-18-at-20.44.05-480x249.png\" alt=\"swift package init\" width=\"480\" height=\"249\" class=\"alignright size-medium wp-image-220046 bordered\" srcset=\"https:\/\/koenig-media.raywenderlich.com\/uploads\/2019\/03\/Screenshot-2019-03-18-at-20.44.05-480x249.png 480w, https:\/\/koenig-media.raywenderlich.com\/uploads\/2019\/03\/Screenshot-2019-03-18-at-20.44.05-650x337.png 650w, https:\/\/koenig-media.raywenderlich.com\/uploads\/2019\/03\/Screenshot-2019-03-18-at-20.44.05.png 1268w\" referrerpolicy=\"no-referrer\" \/><\/p><p>That’s it; you’ve created your own package!<\/p><h2 id=\"toc-anchor-003\">Adding Dependencies<\/h2><p>The next step in creating a project is to add its dependencies. To do that, open the <em>Package.swift<\/em> manifest file inside the directory where you created your project.<\/p><p>At the top of the file is the Swift tools version. You should not remove the generated tools version comment; it’s read by SPM to understand how to interpret the manifest.<\/p><p>Each package has a name and a list of targets. Your executable has a regular <em>target<\/em> and a <em>test target<\/em>. The regular target is your executable or library, whereas the test target is a test suite.<\/p><p>Your <em>Package.swift<\/em> file should look as follows:<\/p><pre>\n\/\/ swift-tools-version:4.2\nimport PackageDescription\nlet package = Package(\n  name: \"Website\",\n  dependencies: [\n  ],\n  targets: [\n    .target(\n        name: \"Website\",\n        dependencies: []),\n    .testTarget(\n        name: \"WebsiteTests\",\n        dependencies: [\"Website\"]),\n  ]\n)\n<\/pre><p>In this tutorial, you’ll add the <a href=\"https:\/\/github.com\/raywenderlich\/spm-tutorial\" rel=\"noopener\" target=\"_blank\"><code>WebsiteBuilder<\/code> library<\/a> as a dependency to your application. This library was created specially for this tutorial.<\/p><h3 id=\"toc-anchor-004\">Finding Dependency URLs<\/h3><p>To add a dependency, you need three pieces of information: the URL, the version number and the name.<\/p><p>To get the URL, open the <a href=\"https:\/\/github.com\/raywenderlich\/spm-tutorial\" rel=\"noopener\" target=\"_blank\">GitHub link<\/a> to the WebsiteBuilder library and look for a green button named <em>Clone or download<\/em>. Click that button and look for <em>Clone with HTTPS<\/em>. If you don’t see this, you should see the text <em>Use HTTPS<\/em> instead. Click <em>Use HTTPS<\/em> to toggle to the HTTPS link, which you can then copy using the clipboard button.<\/p><p>The <em>package version<\/em> can usually be found in the README of the project. But if you want an older version of the package, or need to find the version yourself, you can find it in the <em>releases<\/em> tab of the project. For this project, you are going to start with version <em>1.0.0<\/em>.<\/p><p>The <em>package name<\/em> may be in the README, but you can always find it in the <em>Package.swift<\/em> file for the dependency. The name of this dependency is <code>WebsiteBuilder<\/code>.<\/p><p>In your app’s <em>Package.swift<\/em> file, you’ll find an array of dependencies. There is one example dependency there, but it’s commented out as it’s only for reference purposes.<\/p><p>Add the following line to your manifest within the dependencies array.<\/p><pre lang=\"swift\">\n.package(url: \"https:\/\/github.com\/raywenderlich\/spm-tutorial.git\", from: \"1.0.0\")\n<\/pre><p>This references the URL and the version number from the GitHub repository.<\/p><p>Next, add the package name – <code>WebsiteBuilder<\/code> – to the list of named dependencies in your <code>Website<\/code> target:<\/p><pre lang=\"swift\">\n.target(\n    name: \"Website\",\n    dependencies: [\"WebsiteBuilder\"]),\n<\/pre><p>Save your file and go back to Terminal. That takes care of your dependencies. But dependencies also have properties, which you’ll learn about next.<\/p><h2 id=\"toc-anchor-005\">Editing Dependency Properties<\/h2><p>You’ve just added your first SPM dependency in it’s simplest form, but what happens when you want some more specificity into the version of the dependency your app requires?<\/p><p>SPM lets you specify version requirements in a very granular way, providing great control over the exact version, or even branch, of the required dependency.<\/p><div class=\"note\"><p><em>Note<\/em>: These are examples to show how you can specify different versions. They use truncated URLs and imaginary version numbers.<\/p><\/div><p>The following code specifies <em>any version<\/em> of the dependency, starting at <em>1.1.3<\/em> and less than <em>2.0.0<\/em>:<\/p><p><code>.package(url: \"https:\/\/github.com\/...git\", from: \"1.1.3\")<\/code><\/p><p>If you want specify a <em>minimum<\/em> and <em>maximum<\/em> version for one dependency, you can use a range:<\/p><p><code>.package(url: \"https:\/\/github.com\/...git\", \"1.1.0\"...\"1.2.1\")<\/code><\/p><p>Use the following if you’re interested in an <em>exact<\/em> version of a dependency:<\/p><p><code>.package(url: \"https:\/\/github.com\/...git\", .exact(\"1.2.3\"))<\/code><\/p><p>All of these version-specific variations also support beta-versioning. For example:<\/p><p><code>.package(url: \"https:\/\/github.com\/...git\", from: \"1.1.3-beta.4\")<\/code><\/p><p>You can also lock the dependency to a <em>specific branch<\/em> in git. This is useful if a feature or fix is not yet released:<\/p><p><code>.package(url: \"https:\/\/github.com\/...git\", .branch(\"bugfix\/issue-121\"))<\/code><\/p><p>Finally, you can specify <em>a commit<\/em> by its hash:<\/p><p><code>.package(url: \"https:\/\/github.com\/...git\",<br \/>.revision(\"04136e97a73b826528dd077c3ebab07d9f8f48e2\"))<\/code><\/p><h2 id=\"toc-anchor-006\">Integrating With Xcode<\/h2><p>Now that your project is set up, you’re ready to generate an Xcode project.<\/p><p>Execute the following command in Terminal to do so:<\/p><pre lang=\"bash\">\nswift package generate-xcodeproj\n<\/pre><p>This will download the dependencies and create an Xcode project — <em>Website.xcodeproj<\/em>.<\/p><div class=\"note\"><em>Note<\/em>: If you have used Swift Package Manager before, you may notice that we didn't ask you to use<code>swift build<\/code>. This is because the Xcode project generation command does this for you, as well as resolve your dependency tree before building your project. Later on, you'll get a hint of how<code>swift build<\/code>and<code>swift package update<\/code>work on their own!<\/div><p>You should output similar to the following:<\/p><p><img src=\"https:\/\/koenig-media.raywenderlich.com\/uploads\/2019\/03\/swift-package-generate-1-650x241.png\" alt=\"swift package generate-xcodeproj\" width=\"650\" height=\"241\" class=\"aligncenter size-large wp-image-220254 bordered\" srcset=\"https:\/\/koenig-media.raywenderlich.com\/uploads\/2019\/03\/swift-package-generate-1-650x241.png 650w, https:\/\/koenig-media.raywenderlich.com\/uploads\/2019\/03\/swift-package-generate-1-480x178.png 480w, https:\/\/koenig-media.raywenderlich.com\/uploads\/2019\/03\/swift-package-generate-1.png 996w\" referrerpolicy=\"no-referrer\" \/><\/p><p>Finally, open the project.<\/p><p>Protip: you can open it quickly from Terminal by executing the following command:<\/p><pre lang=\"bash\">\nopen .\/Website.xcodeproj\n<\/pre><p>Or, by using <code>xed<\/code>, which will open the project in the current folder:<\/p><pre lang=\"bash\">\nxed .\n<\/pre><p>Xcode may select an iOS device or simulator as the targeted device, so make sure to switch to <em>My Mac<\/em>.<\/p><p><img src=\"https:\/\/koenig-media.raywenderlich.com\/uploads\/2019\/03\/switch-target.gif\" alt=\"\" width=\"251\" height=\"75\" class=\"alignright size-full wp-image-220047\" referrerpolicy=\"no-referrer\" \/><\/p><p>Build and run the project in Xcode. This will compile the project, start the project, print a message in the console and exit.<\/p><p><img src=\"https:\/\/koenig-media.raywenderlich.com\/uploads\/2019\/03\/Website-build-run-1-650x372.png\" alt=\"Build and run\" width=\"650\" height=\"372\" class=\"aligncenter size-large wp-image-220256 bordered\" srcset=\"https:\/\/koenig-media.raywenderlich.com\/uploads\/2019\/03\/Website-build-run-1-650x372.png 650w, https:\/\/koenig-media.raywenderlich.com\/uploads\/2019\/03\/Website-build-run-1-480x275.png 480w, https:\/\/koenig-media.raywenderlich.com\/uploads\/2019\/03\/Website-build-run-1-266x151.png 266w\" referrerpolicy=\"no-referrer\" \/><\/p><p>Open <em>main.swift<\/em> in Xcode and replace its contents with the following code:<\/p><pre lang=\"swift\">\nimport NIO\nimport WebsiteBuilder\n\/\/\/ All idioms the app can respond with\nlet idioms = [\n  \"A blessing in disguise\",\n  \"Better late than never\",\n  \"Bite the bullet\",\n  \"Break a leg\",\n  \"Cutting corners\",\n  \"Get your act together\",\n  \"That's the last straw\",\n  \"You can say that again\"\n]\n\/\/\/ Responds to the request with a random idiom chosen from the list above\nstruct IdiomResponder: HTTPResponder {\n  func respond(to request: HTTPRequest) -&gt; EventLoopFuture&lt;HTTPResponse&gt; {\n    guard let randomIdiom = idioms.randomElement() else {\n      return request.eventLoop.newFailedFuture(error: Error.noIdiomsAvailable)\n    }\n    let response = HTTPResponse(status: .ok, body: HTTPBody(text: randomIdiom))\n    return request.eventLoop.newSucceededFuture(result: response)\n  }\n  enum Error: Swift.Error {\n    \/\/\/ This error occurs if the idiom list is empty\n    case noIdiomsAvailable\n  }\n}\n\/\/\/ Creates a new website responding with the IdiomResponder\nlet website = Website(responder: IdiomResponder())\n\/\/\/ Runs the website at the default port\ntry website.run()\n<\/pre><p>In this piece of code, you respond to an incoming network with a random idiom from the provided list using <em>SwiftNIO<\/em>. While SwiftNIO itself is out-of-scope for this tutorial, you can learn more about it in <a href=\"https:\/\/www.raywenderlich.com\/1124580-swiftnio-a-simple-guide-to-async-on-the-server\" target=\"_blank\" rel=\"noopener\">SwiftNIO: A simple guide to async on the server<\/a>.<\/p><p>Build and run the application again using the <em>Run button<\/em> in Xcode. Oh no – it doesn’t work:<\/p><pre lang=\"bash\">\nFatal error: Error raised at top level: bind(descriptor:ptr:bytes:) failed: Permission denied (errno: 13)\n<\/pre><p>Uh-oh! What kind of bug is this?<\/p><p><img src=\"https:\/\/koenig-media.raywenderlich.com\/uploads\/2019\/03\/creature-bug-red.png\" alt=\"Bug\" width=\"200\" height=\"200\" class=\"aligncenter size-full wp-image-220258\" referrerpolicy=\"no-referrer\" \/><\/p><p>This is a deliberate error in this tutorial, and may even be a blessing in disguise. This means that the application attempted to use a port that is already in use, or one that you do not have permission to use. In this case, it’s a permission problem. The library uses port 80, which is only usable by the <em>super user<\/em>.<\/p><h2 id=\"toc-anchor-007\">Managing Dependencies<\/h2><p>In this project, you would be unable to run the application without switching to the super user. For development purposes, you’ll commonly use a port different than 80. You’re usually free to use any port above port 1024 that is not already in use.<\/p><p>Usually, you will specify a dependency using <code>from<\/code> to set a minimum version, so that SPM can download updates of newer version of the package. But in this scenario, version 1.0.1 has the port permission problem, and the last known working version is 1.0.0. Looks like you’ll need to go back to 1.0.0.<\/p><p>Edit <em>Package.swift<\/em> and replace the dependency with the following to pin the dependency to exactly version 1.0.0:<\/p><pre lang=\"swift\">\n.package(url: \"https:\/\/github.com\/raywenderlich\/spm-tutorial.git\", .exact(\"1.0.0\"))\n<\/pre><p>After changing the manifest, your dependencies won’t be updated automatically. To update them, you <em>could<\/em> just update your Xcode project again, but this time, run the following command in your project’s directory from Terminal:<\/p><pre lang=\"bash\">\nswift package update\n<\/pre><p>This command, on its own, will look for newer or different versions of your dependencies and download them as required.<\/p><p>You are working in Xcode to update this project, so you'll need to regenerate your Xcode project after running this command. This is necessary because dependencies can add and remove files.<\/p><p>Execute the following command to regenerate your project:<\/p><pre lang=\"bash\">\nswift package generate-xcodeproj\n<\/pre><h3 id=\"toc-anchor-008\">Troubleshooting Dependencies<\/h3><p>Some versions of Xcode will prompt you with the following:<\/p><p><img src=\"https:\/\/koenig-media.raywenderlich.com\/uploads\/2019\/03\/Screenshot-2019-03-18-at-09.02.49-480x238.png\" alt=\"\" width=\"480\" height=\"238\" class=\"alignright size-medium wp-image-220048\" srcset=\"https:\/\/koenig-media.raywenderlich.com\/uploads\/2019\/03\/Screenshot-2019-03-18-at-09.02.49-480x238.png 480w, https:\/\/koenig-media.raywenderlich.com\/uploads\/2019\/03\/Screenshot-2019-03-18-at-09.02.49-650x322.png 650w, https:\/\/koenig-media.raywenderlich.com\/uploads\/2019\/03\/Screenshot-2019-03-18-at-09.02.49.png 840w\" referrerpolicy=\"no-referrer\" \/><\/p><p>Click <em>Revert<\/em> to reload the project from the disk. And if Xcode will not compile your application after this, close the window and open the project again.<\/p><p>This time when you build and run in Xcode, you will see <code>Server started and listening<\/code> in the console. Open a web browser, and go to <code>localhost:8080<\/code> to check out what you made, refreshing a few times as you go.<\/p><p><a href=\"https:\/\/koenig-media.raywenderlich.com\/uploads\/2019\/03\/Screen-Shot-2019-03-31-at-3.38.46-PM.png\"><img src=\"https:\/\/koenig-media.raywenderlich.com\/uploads\/2019\/03\/Screen-Shot-2019-03-31-at-3.38.46-PM.png\" alt=\"\" width=\"1426\" height=\"644\" class=\"aligncenter size-full wp-image-221292\" srcset=\"https:\/\/koenig-media.raywenderlich.com\/uploads\/2019\/03\/Screen-Shot-2019-03-31-at-3.38.46-PM.png 1426w, https:\/\/koenig-media.raywenderlich.com\/uploads\/2019\/03\/Screen-Shot-2019-03-31-at-3.38.46-PM-480x217.png 480w, https:\/\/koenig-media.raywenderlich.com\/uploads\/2019\/03\/Screen-Shot-2019-03-31-at-3.38.46-PM-650x294.png 650w\" referrerpolicy=\"no-referrer\" \/><\/a><\/p><p>Now you know how to run an application using Xcode. So far, so good!<\/p><p>Next, you’ll learn more about SPM and running <code>swift<\/code> from the terminal. Stop the application in Xcode if it is running, and switch back to Terminal.<\/p><h2 id=\"toc-anchor-009\">Running From the Terminal<\/h2><p>Now that you’ve learned how to build and run applications on macOS, you’re all set to start developing. However, server-side Swift is commonly run on Linux servers. So you’ll need to know how to compile and run applications on Linux, too.<\/p><p>On macOS, as long as you have Xcode 10.1 or later installed, you’re all set. If you are working in a Linux environment, you need to set up Swift as described on the <a href=\"https:\/\/swift.org\/download\/\" rel=\"noopener\" target=\"_blank\">Swift Download page<\/a>.<\/p><p>There are three primary commands that you’ll work with; the most common command is <code>swift run<\/code>. This will build your application and run the resulting executable.<\/p><p>If there are multiple executable targets, you simply add the target name to the command:<\/p><pre lang=\"bash\">\nswift run Website\n<\/pre><p>The first time you run this command, SPM compiles everything first, which might take a bit of extra time, but it will compile much faster in subsequent compiles. Once you see the <code>Server started and listening<\/code> message, you’ll know it’s up and running. To stop the server, press <em>Control + C<\/em>.<\/p><p>Another common task is running <em>unit tests<\/em>. Don't run this for now, but the following command is the one you'll use for running the unit tests of your package:<\/p><pre lang=\"bash\">\nswift test\n<\/pre><div class=\"note\"><p><em>Note<\/em>: Do not run <code>swift test<\/code> as it will run the server in the background and never stop it. Testing server-side Swift projects is outside the scope of this tutorial, so while it is important to know this command, the project is not set up for testing.<\/p><\/div><p>Finally, use the following command to build your executable without running it:<\/p><pre lang=\"bash\">\nswift build\n<\/pre><h3 id=\"toc-anchor-010\">Build Configurations<\/h3><p>The above commands use the <code>debug<\/code> configuration by default. There are more configurations available; the most common one is <code>release<\/code>.<\/p><p>The <code>debug<\/code> configuration compiles much faster than <code>release<\/code>, but compiling a binary with the <code>release<\/code> configuration results in increased optimization.<\/p><p>Add <code>--configuration release<\/code> to your command to change the configuration to <code>release<\/code>, and execute it:<\/p><pre lang=\"bash\">\nswift run --configuration release\n<\/pre><p>This command starts the server. Navigate to <a href=\"http:\/\/localhost:8080\" rel=\"noopener\" target=\"_blank\">http:\/\/localhost:8080<\/a> in your browser. If you see an idiom, your application is working!<\/p><p><img src=\"https:\/\/koenig-media.raywenderlich.com\/uploads\/2019\/03\/run-480x195.png\" alt=\"Your server is up and running\" width=\"480\" height=\"195\" class=\"aligncenter bordered size-medium wp-image-221245\" srcset=\"https:\/\/koenig-media.raywenderlich.com\/uploads\/2019\/03\/run-480x195.png 480w, https:\/\/koenig-media.raywenderlich.com\/uploads\/2019\/03\/run.png 532w\" referrerpolicy=\"no-referrer\" \/><\/p><p>However, don’t call it a day just yet. There’s still a problem to be solved!<\/p><h2 id=\"toc-anchor-011\">Editing the Library<\/h2><p>In many development scenarios, another application will be using port 8080. You’ll need to move one of the applications to another port by assigning another unused port. The imported library doesn’t support this, but you can implement it yourself!<\/p><p>The first step is to put the package in editable mode. Press <em>Control + C<\/em> to stop the server. Then, run the following command:<\/p><pre lang=\"swift\">\nswift package edit WebsiteBuilder\n<\/pre><p>This moves WebsiteBuilder into the <em>Dependencies<\/em> folder in your project. SPM will not update or change the dependency. Before you can edit the package, regenerate the Xcode project.<\/p><div class=\"note\"><p><em>Tip<\/em>: To quickly recall commands in Terminal, you can press the up-arrow key repeatedly in Terminal. Do this until you get back to the <code>swift package generate-xcodeproj<\/code> line, then press <em>Return<\/em> to run it again and regenerate the project.<\/p><\/div><p>Within the Dependencies group in Xcode’s Project navigator, you’ll find a list of all dependency sources. Open <em>Website.swift<\/em> in the WebsiteBuilder dependency folder.<\/p><p><img src=\"https:\/\/koenig-media.raywenderlich.com\/uploads\/2019\/03\/Screenshot-2019-03-18-at-09.04.39-324x320.png\" alt=\"\" width=\"324\" height=\"320\" class=\"alignright size-medium wp-image-220050\" srcset=\"https:\/\/koenig-media.raywenderlich.com\/uploads\/2019\/03\/Screenshot-2019-03-18-at-09.04.39-324x320.png 324w, https:\/\/koenig-media.raywenderlich.com\/uploads\/2019\/03\/Screenshot-2019-03-18-at-09.04.39-506x500.png 506w, https:\/\/koenig-media.raywenderlich.com\/uploads\/2019\/03\/Screenshot-2019-03-18-at-09.04.39.png 542w\" referrerpolicy=\"no-referrer\" \/><\/p><p>Remove the following line from the <code>run()<\/code> method:<\/p><pre lang=\"swift\">\nlet port = 8080\n<\/pre><p>Also change the <code>run()<\/code> method’s signature to the following:<\/p><pre lang=\"swift\">\npublic func run(port: Int) throws {\n<\/pre><p>Now you’ll need to specify your port. Open your own application’s <em>main.swift<\/em> file. Change the last line in that file, the one that actually runs the website, and modify the port number:<\/p><pre lang=\"swift\">\ntry website.run(port: 8123)\n<\/pre><p>To complete this tutorial, run the application using the <code>release<\/code> configuration in Terminal with your <code>swift run --configuration release<\/code> command. Once it’s started, open the website in a browser at <a href=\"http:\/\/localhost:8123\" rel=\"noopener\" target=\"_blank\">http:\/\/localhost:8123<\/a>.<\/p><p>Do you see an idiom? If so, you’re done! Time flies when you’re having fun, doesn’t it?<\/p><h2 id=\"toc-anchor-012\">Where to Go From Here?<\/h2><p>You can download the completed version of this project using the <em>Download Materials<\/em> button at the top or bottom of this screen.<\/p><ul><li>One of the most important libraries in server-side Swift, SwiftNIO, is covered in the <a href=\"https:\/\/www.raywenderlich.com\/215451\/swiftnio-a-simple-guide-to-async-on-the-server\" rel=\"noopener\" target=\"_blank\">SwiftNIO tutorial<\/a>, also mentioned earlier in this tutorial.<\/li>\n<li>If you’re interested in learning about API development, look into Kitura and Vapor. <a href=\"https:\/\/www.raywenderlich.com\/214218\/getting-started-with-vapor\" rel=\"noopener\" target=\"_blank\">Getting Started with Vapor<\/a> and <a href=\"https:\/\/www.raywenderlich.com\/215168\/kitura-tutorial-getting-started-with-server-side-swift-2\" rel=\"noopener\" target=\"_blank\">Getting Started with Kitura<\/a> are two tutorials that will teach you the basics.<\/li>\n<li>In <a href=\"https:\/\/www.raywenderlich.com\/216743\/vapor-vs-kitura-choosing-a-server-side-swift-framework\" rel=\"noopener\" target=\"_blank\">Vapor vs. Kitura<\/a>, the two server-side Swift frameworks go head to head. If you’re not sure which to use, read that and make your decision!<\/li>\n<\/ul><p>Questions or comments? Leave them in the forum section below!<\/p><p><a class=\"o-button--green o-button--files\" data-materials-download-button-content-id=\"1993018\" data-event-action=\"downloadFiles\" data-event-category=\"article_all_downloadProjectAttempt\" data-login-required=\"true\" href=\"https:\/\/www.raywenderlich.com\/1993018-an-introduction-to-swift-package-manager\"><em class=\"o-button__icon--left o-button__icon--white\"><\/em> Download Materials<\/a><\/p><div class=\"l-margin-72 l-block--card-small l-margin-left-auto l-margin-right-auto l-border-top l-newsletter-article\"><h4 class=\"l-text-align-center\">raywenderlich.com Weekly<\/h4><p class=\"l-text-align-center l-font-body l-color-grey l-font-15--force l-margin-18\">Get a weekly digest of our tutorials and courses, and receive a free in-depth email course as a bonus!<\/p><\/div>",
				"created_at": "2022-03-17T16:06:14+0000",
				"updated_at": "2022-03-17T16:06:14+0000",
				"published_at": null,
				"published_by": null,
				"starred_at": null,
				"annotations": [],
				"mimetype": "text\/html; charset=utf-8",
				"language": "en",
				"reading_time": 13,
				"domain_name": "www.raywenderlich.com",
				"preview_picture": "https:\/\/koenig-media.raywenderlich.com\/uploads\/2019\/03\/SwiftPackageManager-twitter.png",
				"http_status": "200",
				"headers": {
					"date": "Thu, 17 Mar 2022 16:06:14 GMT",
					"content-type": "text\/html; charset=utf-8",
					"transfer-encoding": "chunked",
					"connection": "keep-alive",
					"server": "nginx\/1.14.0",
					"x-frame-options": "SAMEORIGIN, SAMEORIGIN",
					"x-xss-protection": "0",
					"x-content-type-options": "nosniff, nosniff",
					"x-download-options": "noopen",
					"x-permitted-cross-domain-policies": "none",
					"referrer-policy": "strict-origin-when-cross-origin",
					"cache-control": "no-store",
					"pragma": "no-cache",
					"expires": "Fri, 01 Jan 1990 00:00:00 GMT",
					"link": "<https:\/\/assets.carolus.raywenderlich.com\/assets\/application-d8546dc1633e4bd4824e27201a587b36a681c22d68caccf21fb8b9df5aa3886e.css>; rel=preload; as=style; nopush",
					"etag": "W\/\"0b4f4e96cb52db654eb703cc4cbb0d12\"",
					"set-cookie": "_carolus_session=nbyg7jRKn8rHKf9BI7FkRPvITL0lFOh0ckir3UhihUT4IYJDY81GWE44tM3PyeistDa3oyLz\/Yrww3tszpt21SYjcy0aPARAs73zW9qBFtX6wuCnvHx9K7\/lSD+4zXzw7stfjNwvomluNF\/7TWVSl0mW8Q4YCnkhWcK+dqj2jNh1wnqhbDKaGPN3ftcVdrIDhRAjpqJH8OtSnwy5hAzjbjuQ8qlUXxYkKZ8lCfNNYqJ68BVV3n0jMPQ\/EUoIJfrw4r5pzT7SG2hNg1YQ99X6gidoanF8cCV2--yDjrwcfP2cybyEMy--gOEgPTUUuVEHWeRsKpBy9w==; path=\/; HttpOnly; SameSite=Lax",
					"x-request-id": "cb68a0e1-a20b-44af-aafe-13549372a481",
					"x-runtime": "0.271675",
					"strict-transport-security": "max-age=15638400"
				},
				"_links": {
					"self": {
						"href": "\/api\/entries\/8"
					}
				}
			},
			{
				"is_archived": 1,
				"is_starred": 0,
				"user_name": "justin",
				"user_email": "justinbrooks@fastmail.com",
				"user_id": 2,
				"tags": [],
				"is_public": false,
				"id": 7,
				"uid": null,
				"title": "China Is a Declining Power—and That’s the Problem",
				"url": "https:\/\/foreignpolicy.com\/2021\/09\/24\/china-great-power-united-states\/",
				"hashed_url": "d402e0d6d9da76a1d5220da4a4aee06846c93e1e",
				"origin_url": null,
				"given_url": "https:\/\/foreignpolicy.com\/2021\/09\/24\/china-great-power-united-states\/",
				"hashed_given_url": "d402e0d6d9da76a1d5220da4a4aee06846c93e1e",
				"archived_at": "2022-03-27T03:01:58+0000",
				"content": "<article class=\"article\" data-post-id=\"1056639\" data-post-url=\"https:\/\/foreignpolicy.com\/2021\/09\/24\/china-great-power-united-states\/\"><div class=\"article-header c3\">\n<div class=\"feature-header-text\"><a href=\"https:\/\/foreignpolicy.com\/category\/analysis\/argument\/\" class=\"department-name\">\n<h3 class=\"department\">Argument<\/h3>\n<\/a>\n<h1 class=\"hed\">China Is a Declining Power—and That’s the Problem<\/h1>\n<h2 class=\"dek-heading\">The United States needs to prepare for a major war, not because its rival is rising but because of the opposite.<\/h2>\n<div class=\"meta-data\"><time pubdate=\"\" datetime=\"2021-09-24\" title=\"September 24th, 2021\" class=\"date-time\">September 24, 2021, 4:16 PM<\/time><\/div>\n<\/div>\n<figure class=\"figure-image\"><img width=\"1024\" height=\"591\" src=\"https:\/\/foreignpolicy.com\/wp-content\/uploads\/2021\/09\/china-xi-jinping-decline-GettyImages-682921526-lead.jpg?quality=90\" alt=\"Chinese President Xi Jinping leaves after making a toast during a welcome banquet .\" class=\"image full-height\" referrerpolicy=\"no-referrer\" \/>\n<div class=\"caption\">Chinese President Xi Jinping leaves after making a toast during a welcome banquet for the Belt and Road Forum at the Great Hall of the People in Beijing on May 14, 2017. Wu Hong\/Getty Images<\/div>\n<\/figure><\/div>\n<div class=\"post-content-main shares-position\">\n<div class=\"author-bio\">By <a rel=\"author\" href=\"https:\/\/foreignpolicy.com\/author\/hal-brands\/\"><strong>Hal Brands<\/strong><\/a>, the Henry Kissinger distinguished professor of global affairs at Johns Hopkins University’s School of Advanced International Studies, and <a rel=\"author\" href=\"https:\/\/foreignpolicy.com\/author\/michael-beckley\/\"><strong>Michael Beckley<\/strong><\/a> <\/div>\n<div class=\"content-ungated\">\n<p>Why do great powers fight great wars? The conventional answer is a story of rising challengers and declining hegemons. An ascendant power, which chafes at the rules of the existing order, gains ground on an established power—the country that made those rules. Tensions multiply; tests of strength ensue. The outcome is a spiral of fear and hostility leading, almost inevitably, to conflict. “The growth of the power of Athens, and the alarm which this inspired in Sparta, made war inevitable,” the ancient historian Thucydides wrote—a truism now invoked, ad nauseum, in explaining the U.S.-China rivalry.<\/p>\n<p>The idea of a Thucydides Trap, popularized by Harvard political scientist Graham Allison, holds that the danger of war will skyrocket as a surging China overtakes a sagging America. Even Chinese President Xi Jinping has endorsed the concept arguing Washington must make room for Beijing. As tensions between the United States and China escalate, the belief that the fundamental cause of friction is a looming “power transition”—the replacement of one hegemon by another—has become canonical.<\/p>\n<p>The only problem with this familiar formula is that it’s wrong.<\/p>\n<\/div>\n<div class=\"content-gated\">\n<div class=\"fp_curio\">\n<p><iframe width=\"100%\" height=\"20\" scrolling=\"no\" frameborder=\"no\" src=\"https:\/\/w.soundcloud.com\/player\/?url=https%3A\/\/api.soundcloud.com\/tracks\/1142185633%3Fsecret_token%3Ds-1kEH0hw6Ld1&amp;color=%23ff5500&amp;auto_play=false&amp;hide_related=true&amp;show_comments=false&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=false\">[embedded content]<\/iframe>Listen to this article<\/p>\n<\/div>\n<div class=\"bolded-first-line\">\n<p>Why do great powers fight great wars? The conventional answer is a story of rising challengers and declining hegemons. An ascendant power, which chafes at the rules of the existing order, gains ground on an established power—the country that made those rules. Tensions multiply; tests of strength ensue. The outcome is a spiral of fear and hostility leading, almost inevitably, to conflict. “The growth of the power of Athens, and the alarm which this inspired in Sparta, made war inevitable,” the ancient historian Thucydides wrote—a truism now invoked, ad nauseum, in explaining the U.S.-China rivalry.<\/p>\n<\/div>\n<p>The idea of a Thucydides Trap, popularized by Harvard political scientist Graham Allison, holds that the danger of war will skyrocket as a surging China overtakes a sagging America. Even Chinese President Xi Jinping has endorsed the concept arguing Washington must make room for Beijing. As tensions between the United States and China escalate, the belief that the fundamental cause of friction is a looming “power transition”—the replacement of one hegemon by another—has become canonical.<\/p>\n<p>The only problem with this familiar formula is that it’s wrong.<\/p>\n<p>The Thucydides Trap doesn’t really explain what caused the Peloponnesian War. It doesn’t capture the dynamics that have often driven revisionist powers—whether that is Germany in 1914 or Japan in 1941—to start some of history’s most devastating conflicts. And it doesn’t explain why war is a very real possibility in U.S.-China relations today because it fundamentally misdiagnoses where China now finds itself on its arc of development—the point at which its relative power is peaking and will soon start to fade.<\/p>\n<p>There’s indeed a deadly trap that could ensnare the United States and China. But it’s not the product of a power transition the Thucydidean cliché says it is. It’s best thought of instead as a “peaking power trap.” And if history is any guide, it’s China’s—not the United States’—impending decline that could cause it to snap shut.<\/p>\n<hr class=\"thick-horizontal-rule\" \/><div id=\"attachment_1056715\" class=\"wp-caption alignnone none text_width\"><img width=\"1024\" height=\"614\" src=\"https:\/\/foreignpolicy.com\/wp-content\/uploads\/2021\/09\/Peloponnesian-War-Thucydides-Trap-GettyImages-1155879110.jpg\" alt=\"The retreat of the Athenians from Syracuse in the Peloponnesian War\" class=\"image alignnone size-text_width wp-image-1056715 -fit\" referrerpolicy=\"no-referrer\" \/>\n<p id=\"caption-attachment-1056715\" class=\"wp-caption-text\">The retreat of the Athenians from Syracuse in the Peloponnesian War is depicted in “Cassell’s Illustrated Universal History, Vol. I—Early and Greek History.”The Print Collector\/Heritage Images via Getty Images <\/p>\n<\/div>\n<div class=\"bolded-first-line\">\n<p>There is an entire swath of literature, known as “power transition theory,” which holds that great-power war typically occurs at the intersection of one hegemon’s rise and another’s decline. This is the body of work underpinning the Thucydides Trap, and there is, admittedly, an elemental truth to the idea. The rise of new powers is invariably destabilizing. In the runup to the Peloponnesian War in the 5th century B.C., Athens would not have seemed so menacing to Sparta had it not built a vast empire and become a naval superpower. Washington and Beijing would not be locked in rivalry if China was still poor and weak. Rising powers do expand their influence in ways that threaten reigning powers.<\/p>\n<\/div>\n<p>But the calculus that produces war—particularly the calculus that pushes revisionist powers, countries seeking to shake up the existing system, to lash out violently—is more complex. A country whose relative wealth and power are growing will surely become more assertive and ambitious. All things equal, it will seek greater global influence and prestige. But if its position is steadily improving, it should postpone a deadly showdown with the reigning hegemon until it has become even stronger. Such a country should follow the dictum former Chinese leader Deng Xiaoping laid down for a rising China after the Cold War: It should hide its capabilities and bide its time.<\/p>\n<p>Now imagine a different scenario. A dissatisfied state has been building its power and expanding its geopolitical horizons. But then the country peaks, perhaps because its economy slows, perhaps because its own assertiveness provokes a coalition of determined rivals, or perhaps because both of these things happen at once. The future starts to look quite forbidding; a sense of imminent danger starts to replace a feeling of limitless possibility. In these circumstances, a revisionist power may act boldly, even aggressively, to grab what it can before it is too late. The most dangerous trajectory in world politics is a long rise followed by the prospect of a sharp decline.<\/p>\n<p>As we show in our forthcoming book, <em>Danger Zone: The Coming Conflict with China<\/em>, this scenario is more common than you might think. Historian Donald Kagan showed, for instance, that Athens started acting more belligerently in the years before the Peloponnesian War because it feared adverse shifts in the balance of naval power—in other words, because it was on the verge of losing influence vis-à-vis Sparta. We see the same thing in more recent cases as well.<\/p>\n<p>Great powers that had been growing dramatically faster than the world average and then suffered a severe, prolonged slowdown usually don’t fade away quietly. Rather, they become brash and aggressive.<\/p>\n<p>Over the past 150 years, peaking powers—great powers that had been growing dramatically faster than the world average and then suffered a severe, prolonged slowdown—usually don’t fade away quietly. Rather, they become brash and aggressive. They suppress dissent at home and try to regain economic momentum by creating exclusive spheres of influence abroad. They pour money into their militaries and use force to expand their influence. This behavior commonly provokes great-power tensions. In some cases, it touches disastrous wars.<\/p>\n<p>This shouldn’t be surprising. Eras of rapid growth supercharge a country’s ambitions, raise its people’s expectations, and make its rivals nervous. During a sustained economic boom, businesses enjoy rising profits and citizens get used to living large. The country becomes a bigger player on the global stage. Then stagnation strikes.<\/p>\n<p>Slowing growth makes it harder for leaders to keep the public happy. Economic underperformance weakens the country against its rivals. Fearing upheaval, leaders crack down on dissent. They maneuver desperately to keep geopolitical enemies at bay. Expansion seems like a solution—a way of grabbing economic resources and markets, making nationalism a crutch for a wounded regime, and beating back foreign threats.<\/p>\n<div class=\"fp_choose_placement_related_posts fp-related-wrapper related-articles--no-video related-articles\">\n<p class=\"heading-container\">Read More<\/p>\n<div class=\"blog-list-layout excerpt-content--list --first-post content-block\" data-post-id=\"1056487\">\n<figure class=\"figure-image -nocaption\"><a href=\"https:\/\/foreignpolicy.com\/2021\/09\/22\/china-evergrande-housing-bailout\/\" class=\"image-attachment -ratioscale horizontal-orientation c5\"><img width=\"800\" height=\"532\" alt=\"A Chinese flag waves in front of the Evergrande Center building in Shanghai, China, on Sept. 22.\" data-src=\"https:\/\/foreignpolicy.com\/wp-content\/uploads\/2021\/09\/china-evergrande-headquarters-GettyImages-1235417902.jpg?w=800&amp;h=532&amp;quality=80\" data-lazy-src=\"https:\/\/foreignpolicy.com\/wp-content\/uploads\/2021\/09\/china-evergrande-headquarters-GettyImages-1235417902.jpg?w=800&amp;h=532&amp;quality=80\" data-lazy-srcset=\"https:\/\/foreignpolicy.com\/wp-content\/uploads\/2021\/09\/china-evergrande-headquarters-GettyImages-1235417902.jpg?w=800&amp;h=532&amp;quality=80\" data-lazy-sizes=\"auto\" class=\"image image -fit-3-2 -fit jetpack-lazy-image -lazy\" referrerpolicy=\"no-referrer\" src=\"data:image\/gif;base64,R0lGODlhAQABAAAAACH5BAEKAAEALAAAAAABAAEAAAICTAEAOw==\" \/><noscript><img width=\"800\" height=\"532\" src=\"https:\/\/foreignpolicy.com\/wp-content\/uploads\/2021\/09\/china-evergrande-headquarters-GettyImages-1235417902.jpg?w=800&amp;h=532&amp;quality=80\" alt=\"A Chinese flag waves in front of the Evergrande Center building in Shanghai, China, on Sept. 22.\" class=\"image image -fit-3-2 -fit\" referrerpolicy=\"no-referrer\" \/><\/noscript><\/a><\/figure><div class=\"list-text\"><a class=\"hed-heading -excerpt\" href=\"https:\/\/foreignpolicy.com\/2021\/09\/22\/china-evergrande-housing-bailout\/\">\n<h3 class=\"hed\">Will China Bail Out Evergrande?<\/h3>\n<\/a>\n<div class=\"dek-heading -excerpt\">\n<p class=\"dek\">Even if it does, the real estate giant’s crisis doesn’t bode well for the economy.<\/p>\n<\/div>\n<div class=\"meta-data -excerpt\"><a href=\"https:\/\/foreignpolicy.com\/category\/china-brief\/\" class=\"department-name -excerpt\">China Brief<\/a> |\n<address class=\"author-list -excerpt\"><a href=\"https:\/\/foreignpolicy.com\/author\/james-palmer\/\" data-author-id=\"29390\" class=\"author\">James Palmer<\/a><\/address>\n<\/div>\n<\/div>\n<\/div>\n<\/div>\n<p>Many countries have followed this path. When the United States’ long post-Civil War economic surge ended, Washington violently suppressed strikes and unrest at home, built a powerful blue-water Navy, and engaged in a fit of belligerence and imperial expansion during the 1890s. After a fast-rising imperial Russia fell into a deep slump at the turn of the 20th century, the tsarist government cracked down hard while also enlarging its military, seeking colonial gains in East Asia and sending around 170,000 soldiers to occupy Manchuria. These moves backfired spectacularly: They antagonized Japan, which beat Russia in the first great-power war of the 20th century.<\/p>\n<p>A century later, Russia became aggressive under similar circumstances. Facing a severe, post-2008 economic slowdown, Russian President Vladimir Putin invaded two neighboring countries, sought to create a new Eurasian economic bloc, staked Moscow’s claim to a resource-rich Arctic, and steered Russia deeper into dictatorship. Even democratic France engaged in anxious aggrandizement after the end of its postwar economic expansion in the 1970s. It tried to rebuild its old sphere of influence in Africa, deploying 14,000 troops to its former colonies and undertaking a dozen military interventions over the next two decades.<\/p>\n<p>All of these cases were complicated, yet the pattern is clear. If a rapid rise gives countries the means to act boldly, the fear of decline serves up a powerful motive for rasher, more urgent expansion. The same thing often happens when fast-rising powers cause their own containment by a hostile coalition. In fact, some of history’s most gruesome wars have come when revisionist powers concluded their path to glory was about to be blocked.<\/p>\n<hr class=\"thick-horizontal-rule\" \/><div class=\"wpse-gallery-wrapper section_break_two gallery galleryid-1056639 gallery-columns-1 gallery-size-full\">\n<dl class=\"gallery-item\"><dt class=\"gallery-icon landscape\"><img width=\"1024\" height=\"683\" src=\"https:\/\/foreignpolicy.com\/wp-content\/uploads\/2021\/09\/germany-decline-kaiser-wilhelm-wwi-GettyImages-1277626185.jpg\" alt=\"\" class=\"image attachment-full size-full jetpack-lazy-image -fit\" referrerpolicy=\"no-referrer\" \/><\/dt>\n<dd class=\"wp-caption-text gallery-caption\" id=\"gallery-2-1056723\">German Kaiser Wilhelm II meets with troops during World War I in 1914.<\/dd>\n<\/dl><br class=\"c6\" \/><dl class=\"gallery-item\"><dt class=\"gallery-icon landscape\"><img width=\"1024\" height=\"683\" src=\"https:\/\/foreignpolicy.com\/wp-content\/uploads\/2021\/09\/imperial-japan-china-nanjing-flags-GettyImages-115602550.jpg\" alt=\"\" class=\"image attachment-full size-full jetpack-lazy-image -fit\" referrerpolicy=\"no-referrer\" \/><\/dt>\n<dd class=\"wp-caption-text gallery-caption\" id=\"gallery-2-1056724\">Japanese schoolgirls wave flags in front of the Imperial Palace in Tokyo on Dec. 15, 1937, in celebration of the Japanese capture of the Chinese city of Nanjing. PhotoQuest\/Getty Images<\/dd>\n<\/dl><br class=\"c6\" \/><\/div>\n<div class=\"bolded-first-line\">\n<p>Imperial Germany and Japan are textbook examples.<\/p>\n<\/div>\n<p>Germany’s rivalry with Britain in the late 19th and early 20th centuries is often considered an analogue to U.S.-China competition: In both cases, an autocratic challenger threatened a liberal hegemon. But the more sobering parallel is this: War came when a cornered Germany grasped it would not zip past its rivals without a fight.<\/p>\n<p>For decades after unification in 1871, Germany soared. Its factories spewed out iron and steel, erasing Britain’s economic lead. Berlin built Europe’s finest army and battleships that threatened British supremacy at sea. By the early 1900s, Germany was a European heavyweight seeking an enormous sphere of influence—a Mitteleuropa, or Middle Europe­—on the continent. It was also pursuing, under then-Kaiser Wilhelm II, a “world policy” aimed at securing colonies and global power.<\/p>\n<p>But during the prelude to war, the kaiser and his aides didn’t feel confident. Germany’s brash behavior caused its encirclement by hostile powers. London, Paris, and St. Petersburg, Russia, formed a “Triple Entente” to block German expansion. By 1914, time was running short. Germany was losing ground economically to a fast-growing Russia; London and France were pursuing economic containment by blocking its access to oil and iron ore. Berlin’s key ally, Austria-Hungary, was being torn apart by ethnic tensions. At home, Germany’s autocratic political system was in trouble.<\/p>\n<p>Most ominous, the military balance was shifting. France was enlarging its army; Russia was adding 470,000 men to its military and slashing the time it needed to mobilize for war. Britain announced it would build two battleships for every one built by Berlin. Germany was, for the moment, Europe’s foremost military power. But by 1916 and 1917, it would be hopelessly overmatched. The result was a now-or-never mentality: Germany should “defeat the enemy while we still stand a chance of victory,” declared Chief of Staff Helmuth von Moltke, even if that meant “provoking a war in the near future.”<\/p>\n<p>This is what happened after Serbian nationalists assassinated Austria’s crown prince in June 1914. The kaiser’s government urged Austria-Hungary to crush Serbia, even though that meant war with Russia and France. It then invaded neutral Belgium—the key to its Schlieffen Plan for a two-front war—despite the likelihood of provoking Britain. “This war will turn into a world war in which England will also intervene,” Moltke acknowledged. Germany’s rise had given it the power to gamble for greatness. Its impending decline drove the decisions that plunged the world into war.<\/p>\n<p>Imperial Japan followed a similar trajectory. For a half-century after the Meiji Restoration in 1868, Japan was rising steadily. The building of a modern economy and a fierce military allowed Tokyo to win two major wars and accumulate colonial privileges in China, Taiwan, and the Korean Peninsula. Yet Japan was not a hyper-belligerent predator: Through the 1920s, it cooperated with the United States, Britain, and other countries to create a cooperative security framework in the Asia-Pacific.<\/p>\n<p>During that decade, however, things fell apart. Growth dropped from 6.1 percent annually between 1904 and 1919 to 1.8 percent annually in the 1920s; the Great Depression then shut Japan’s overseas markets. Unemployment soared, and bankrupt farmers sold their daughters. In China, meanwhile, Japanese influence was being challenged by the Soviet Union and a rising nationalist movement under then-Chinese leader Chiang Kai-Shek. Tokyo’s answer was fascism at home and aggression abroad.<\/p>\n<p>From the late 1920s onward, the military conducted a slow-motion coup and harnessed the nation’s resources for “total war.” Japan initiated a massive military buildup and violently established a vast sphere of influence, seizing Manchuria in 1931, invading China in 1937, and laying plans to conquer resource-rich colonies and strategic islands across the Asia-Pacific. The goal was to build an autarkic empire; the result drew a strategic noose around Tokyo’s neck.<\/p>\n<p>Japan’s push into China eventually led to a punishing war with the Soviet Union. Japan’s designs on Southeast Asia alarmed Britain. Its drive for regional primacy also made it a foe of the United States—the country from which Tokyo imported nearly all of its oil with an economy vastly larger than Japan’s. Tokyo had antagonized an overwhelming coalition of enemies. It then risked everything rather than accepting humiliation and decline.<\/p>\n<p>The precipitating cause, again, was a closing window of opportunity. By 1941, the United States was building an unbeatable military. In July, then-U.S. President Franklin Roosevelt imposed an <a href=\"https:\/\/www.history.com\/this-day-in-history\/united-states-freezes-japanese-assets\">oil embargo<\/a> that threatened to stop Japan’s expansion in its tracks. But Japan still had a temporary military edge in the Pacific Ocean, thanks to its early rearmament. So it used that advantage in a lightning attack—seizing the Dutch East Indies, the Philippines, and other possessions from Singapore to Wake Island as well as bombing the U.S. fleet at Pearl Harbor—which guaranteed its own destruction.<\/p>\n<p>Japan’s prospects for victory were dim, acknowledged then-Japanese Gen. Hideki Tojo, yet there was no choice but to “close one’s eyes and jump.” A revisionist Japan became most violent when it saw that time was running out.<\/p>\n<hr class=\"thick-horizontal-rule\" \/><div id=\"attachment_1056728\" class=\"wp-caption alignnone none mid_width_graphic_photo\"><img width=\"1024\" height=\"576\" src=\"https:\/\/foreignpolicy.com\/wp-content\/uploads\/2021\/09\/china-aging-sea-burial-shanghai-GettyImages-480432939.jpg\" alt=\"Chinese Encouraged To Bury Deceased At Sea\" class=\"image alignnone size-mid_width_graphic_photo wp-image-1056728 -fit\" referrerpolicy=\"no-referrer\" \/>\n<p id=\"caption-attachment-1056728\" class=\"wp-caption-text\">Relatives pause as they place the ashes of a loved one in a metal chute on a ferry in the East China Sea off Shanghai on March 22, 2014. A number of Chinese cities promote sea burials as an attempt to offset a shortage of land for cemeteries due to a rapidly ageing population. Kevin Frayer\/Getty Images <\/p>\n<\/div>\n<div class=\"bolded-first-line\">\n<p>This is the real trap the United States should worry about regarding China today—the trap in which an aspiring superpower peaks and then refuses to bear the painful consequences of descent.<\/p>\n<\/div>\n<p>China’s rise is no mirage: Decades of growth have given Beijing the economic sinews of global power. Major investments in key technologies and communications infrastructure have yielded a strong position in the struggle for geoeconomic influence; China is using a multi-continent Belt and Road Initiative to bring other states into its orbit. Most alarming, think tank assessments and U.S. Defense Department reports show China’s increasingly formidable military now stands a real chance of winning a war against the United States in the Western Pacific.<\/p>\n<p>It is unsurprising, therefore, that China has also developed the ambitions of a superpower: Xi has more or less announced that Beijing desires to assert its sovereignty over Taiwan, the South China Sea, and other disputed areas, becoming Asia’s preeminent power and challenging the United States for global leadership. Yet if China’s geopolitical window of opportunity is real, its future is already starting to look quite grim because it is quickly losing the advantages that propelled its rapid growth.<\/p>\n<p>From the 1970s to the 2000s, China was nearly self-sufficient in food, water, and energy resources. It enjoyed the greatest demographic dividend in history, with 10 working-age adults for every senior citizen aged 65 or older. (For most major economies, the average is closer to 5 working-age adults for every senior citizen.) China had a secure geopolitical environment and easy access to foreign markets and technology, all underpinned by friendly relations with the United States. And China’s government skillfully harnessed these advantages by carrying out a process of economic reform and opening while also moving the regime from stifling totalitarianism under former Chinese leader Mao Zedong to a smarter—if still deeply repressive—form of authoritarianism under his successors. China had it all from the 1970s to the early 2010s—just the mix of endowments, environment, people, and policies needed to thrive.<\/p>\n<p>Since the late 2000s, however, the drivers of China’s rise have either stalled or turned around entirely. For example, China is running out of resources: Water has become scarce, and the country is importing more energy and food than any other nation, having ravaged its own natural resources. Economic growth is therefore becoming costlier: <a href=\"https:\/\/www.brookings.edu\/blog\/future-development\/2019\/01\/22\/joyless-growth-in-china-india-and-the-united-states\/\">According to data from DBS Bank,<\/a> it takes three times as many inputs to produce a unit of growth today as it did in the early 2000s.<\/p>\n<p>China is also approaching a demographic precipice: From 2020 to 2050, it will lose an astounding <a href=\"https:\/\/hbr.org\/2019\/09\/can-china-avoid-a-growth-crisis#:~:text=China's%20working%20population%20(people%20aged,the%20Netherlands%2C%20and%20Switzerland%20combined.\">200 million working-age adults<\/a>—a population the size of Nigeria—and gain 200 million senior citizens. The fiscal and economic consequences will be devastating: Current projections suggest China’s medical and social security spending will have to triple as a share of GDP, from 10 percent to 30 percent, by 2050 just to prevent millions of seniors from dying of impoverishment and neglect.<\/p>\n<p>China is also approaching a demographic precipice: From 2020 to 2050, it will lose an astounding <a href=\"https:\/\/hbr.org\/2019\/09\/can-china-avoid-a-growth-crisis#:~:text=China's%20working%20population%20(people%20aged,the%20Netherlands%2C%20and%20Switzerland%20combined.\">200 million working-age adults<\/a>—a population the size of Nigeria—and gain 200 million senior citizens.<\/p>\n<p>To make matters worse, China is turning away from the package of policies that promoted rapid growth. Under Xi, Beijing has slid back toward totalitarianism. Xi has appointed himself “chairman of everything,” destroyed any semblance of collective rule, and made adherence to “Xi Jinping thought” the ideological core of an increasingly rigid regime. And he has relentlessly pursued the centralization of power at the expense of economic prosperity.<\/p>\n<p>State zombie firms are being propped up while private firms are starved of capital. Objective economic analysis is being replaced by government propaganda. Innovation is becoming more difficult in a climate of stultifying ideological conformity. Meanwhile, Xi’s brutal anti-corruption campaign has deterred entrepreneurship, and a wave of politically driven regulations has erased more than $1 trillion from the market capitalization of China’s leading tech firms. Xi hasn’t simply stopped the process of economic liberalization that powered China’s development: He has thrown it hard into reverse.<\/p>\n<p>The economic damage these trends are causing is starting to accumulate—and it is compounding the slowdown that would have occurred anyway as a fast-growing economy matures. The Chinese economy has been losing steam for more than a decade: The country’s <a href=\"https:\/\/data.worldbank.org\/indicator\/NY.GDP.MKTP.KD.ZG?end=2020&amp;locations=CN&amp;start=2006\">official growth rate<\/a> declined from 14 percent in 2007 to 6 percent in 2019, and rigorous studies suggest the true growth rate is now closer to 2 percent. Worse, most of that growth stems from government stimulus spending. <a href=\"https:\/\/conference-board.org\/data\/economydatabase\/total-economy-database-productivity\">According to data from the Conference Board<\/a>, total factor productivity declined 1.3 percent every year on average between 2008 and 2019, meaning China is spending more to produce less each year. This has led, in turn, to massive debt: China’s total debt surged eight-fold between 2008 and 2019 and exceeded <a href=\"http:\/\/reuters.com\/article\/us-china-economy-debt\/chinas-debt-tops-300-of-gdp-now-15-of-global-total-iif-idUSKCN1UD0KD\">300 percent of GDP<\/a> prior to COVID-19. Any country that has accumulated debt or lost productivity at anything close to China’s current pace has subsequently suffered at least one “lost decade” of near-zero economic growth.<\/p>\n<p>All of this is happening, moreover, as China confronts an increasingly hostile external environment. The combination of COVID-19, persistent human rights abuses, and aggressive policies have caused negative views of China to reach levels not seen since the Tiananmen Square massacre in 1989. Countries worried about Chinese competition have slapped thousands of new trade barriers on its goods since 2008. More than a dozen countries have dropped out of Xi’s Belt and Road Initiative while the United States wages a global campaign against key Chinese tech companies—notably, Huawei—and rich democracies across multiple continents throw up barriers to Beijing’s digital influence. The world is becoming less conducive to easy Chinese growth, and Xi’s regime increasingly faces the sort of strategic encirclement that once drove German and Japanese leaders to desperation.<\/p>\n<p>Case in point is U.S. policy. Over the past five years, two U.S. presidential administrations have committed the United States to a policy of “competition”—really, neo-containment—vis-à-vis China. U.S. defense strategy is now focused squarely on defeating Chinese aggression in the Western Pacific; Washington is using an array of trade and technological sanctions to check Beijing’s influence and limit its prospects for economic primacy. “Once imperial America considers you as their ‘enemy,’ you’re in big trouble,” one senior People’s Liberation Army officer warned. Indeed, the United States has also committed to orchestrating greater global resistance to Chinese power, a campaign that is starting to show results as more and more countries respond to the threat from Beijing.<\/p>\n<p>In maritime Asia, resistance to Chinese power is stiffening. Taiwan is boosting military spending and laying plans to turn itself into a strategic porcupine in the Western Pacific. Japan is carrying out its biggest military buildup since the end of the Cold War and has agreed to back the United States if China attacks Taiwan. The countries around the South China Sea, particularly Vietnam and Indonesia, are beefing up their air, naval, and coast guard forces to contest China’s expansive claims.<\/p>\n<p>Other countries are pushing back against Beijing’s assertiveness as well. Australia is expanding northern bases to accommodate U.S. ships and aircraft and building long-range conventional missiles and nuclear-powered attack submarines. India is massing forces on its border with China while sending warships through the South China Sea. The European Union has labeled Beijing a “systemic rival,” and Europe’s three greatest powers—France, Germany, and the United Kingdom—have dispatched naval task forces to the South China Sea and Indian Ocean. A variety of multilateral anti-China initiatives—the Quadrilateral Security Dialogue; supply chain alliances; the new so-called AUKUS alliance with Washington, London, and Canberra; and others—are in the works. The United States’ “multilateral club strategy,” hawkish and well-connected scholar Yan Xuetong acknowledged in July, is “isolating China” and hurting its development.<\/p>\n<p>No doubt, counter-China cooperation has remained imperfect. But the overall trend is clear: An array of actors is gradually joining forces to check Beijing’s power and put it in a strategic box. China, in other words, is not a forever-ascendant country. It is an already-strong, enormously ambitious, and deeply troubled power whose window of opportunity won’t stay open for long.<\/p>\n<hr class=\"thick-horizontal-rule\" \/><div id=\"attachment_1056730\" class=\"wp-caption alignnone none text_width\"><img width=\"1024\" height=\"0\" src=\"https:\/\/foreignpolicy.com\/wp-content\/uploads\/2021\/09\/china-military-peoples-congress-xi-jinping-GettyImages-862723230.jpg\" alt=\"A Chinese military band plays\" class=\"image alignnone size-text_width wp-image-1056730 -fit\" referrerpolicy=\"no-referrer\" \/>\n<p id=\"caption-attachment-1056730\" class=\"wp-caption-text\">A Chinese military band plays after Chinese President Xi Jinping’s speech at the opening session of the 19th Communist Party Congress in Beijing on Oct. 18, 2017. Kevin Frayer\/Getty Images <\/p>\n<\/div>\n<div class=\"bolded-first-line\">\n<p>In some ways, all of this is welcome news for Washington: A China that is slowing economically and facing growing global resistance will find it exceedingly difficult to displace the United States as the world’s leading power—so long as the United States doesn’t tear itself apart or otherwise give the game away. In other ways, however, the news is more troubling. History warns the world should expect a peaking China to act more boldly, even erratically, over the coming decade—to lunge for long-sought strategic prizes before its fortunes fade.<\/p>\n<\/div>\n<p>What might this look like? We can make educated guesses based on what China is presently doing.<\/p>\n<p>Beijing is already redoubling its efforts to establish a 21st century sphere of economic influence by dominating critical technologies—such as artificial intelligence, quantum computing, and 5G telecommunications—and using the resulting leverage to bend states to its will. It will also race to perfect a “digital authoritarianism” that can protect an insecure Chinese Communist Party’s rule at home while bolstering Beijing’s diplomatic position by exporting that model to autocratic allies around the world.<\/p>\n<p>Most troubling of all, China will be sorely tempted to use force to resolve the Taiwan question on its terms in the next decade.<\/p>\n<p>In military terms, the Chinese Communist Party may well become increasingly heavy-handed in securing long, vulnerable supply lines and protecting infrastructure projects in Central and Southwest Asia, Africa, and other regions, a role some hawks in the People’s Liberation Army are already eager to assume. Beijing could also become more assertive vis-à-vis Japan, the Philippines, and other countries that stand in the way of its claims to the South and East China Seas.<\/p>\n<p>Most troubling of all, China will be sorely tempted to use force to resolve the Taiwan question on its terms in the next decade before Washington and Taipei can finish retooling their militaries to offer a stronger defense. The People’s Liberation Army is already stepping up its military exercises’ intensity in the Taiwan Strait. Xi has repeatedly declared Beijing cannot wait forever for its “renegade province” to return to the fold. When the military balance temporarily shifts further toward China’s favor in the late 2020s and as the Pentagon is forced to retire aging ships and aircraft, China may never have a better chance of seizing Taiwan and dealing Washington a humiliating defeat.<\/p>\n<p>To be clear, China probably won’t undertake an all-out military rampage across Asia, as Japan did in the 1930s and early 1940s. But it will run greater risks and accept greater tensions as it tries to lock in key gains. Welcome to geopolitics in the age of a peaking China: a country that already has the ability to violently challenge the existing order and one that will probably run faster and push harder as it loses confidence that time is on its side.<\/p>\n<p>The United States, then, will face not one but two tasks in dealing with China in the 2020s. It will have to continue mobilizing for long-term competition while also moving quickly to deter aggression and blunt some of the more aggressive, near-term moves Beijing may make. In other words, buckle up. The United States has been rousing itself to deal with a rising China. It’s about to discover that a declining China may be even more dangerous.<\/p>\n<\/div>\n<\/div>\n<section class=\"bio-no-photo\"><div>\n<p><strong>Hal Brands<\/strong> is the Henry Kissinger distinguished professor of global affairs at Johns Hopkins University’s School of Advanced International Studies. He is also a resident scholar at the American Enterprise Institute and a <em>Bloomberg Opinion<\/em> columnist.<\/p>\n<\/div>\n<div>\n<p><strong>Michael Beckley<\/strong> is an associate professor of political science at Tufts University, a Jeane Kirkpatrick visiting scholar at the American Enterprise Institute, and the author of <em>Unrivaled: Why America Will Remain the World’s Sole Superpower<\/em>.<\/p>\n<\/div>\n<\/section>\n<div class=\"the-tags no-top-border\">Tags: <a href=\"https:\/\/foreignpolicy.com\/tag\/asia\/\" class=\"tag\">Asia<\/a>, <a href=\"https:\/\/foreignpolicy.com\/tag\/china\/\" class=\"tag\">China<\/a>, <a href=\"https:\/\/foreignpolicy.com\/tag\/cold-war\/\" class=\"tag\">Cold War<\/a>, <a href=\"https:\/\/foreignpolicy.com\/tag\/economics\/\" class=\"tag\">Economics<\/a>, <a href=\"https:\/\/foreignpolicy.com\/tag\/united-states\/\" class=\"tag\">United States<\/a><\/div>\n<div class=\"calerts-tags c7\">\n<p class=\"calerts-tags__alert\">\n<\/p><p class=\"calerts-tags__intro\">NEW FOR SUBSCRIBERS: Want to read more on this topic or region? Click + to receive email alerts when new stories are published on <label class=\"calerts-tags__tag-label\"><input name=\"411127350\" type=\"checkbox\" class=\"calerts-tags__tag-checkbox calerts-checkbox\" data-type=\"topic_tag_alerts\" \/><\/label> Economics, <label class=\"calerts-tags__tag-label\"><input name=\"5850\" type=\"checkbox\" class=\"calerts-tags__tag-checkbox calerts-checkbox\" data-type=\"regional_tag_alerts\" \/><\/label> United States, <label class=\"calerts-tags__tag-label\"><input name=\"1470\" type=\"checkbox\" class=\"calerts-tags__tag-checkbox calerts-checkbox\" data-type=\"regional_tag_alerts\" \/><\/label> China<\/p>\n<\/div>\n<\/article><div class=\"post-content--after grid--full post-content--after--final-post grid--container grid--flex\">\n<h2 class=\"more-from-fp--title\">More from Foreign Policy<\/h2>\n<div class=\"grid__fourth grid__half--mobile more-from-fp grid--flex grid--flow\">\n<div class=\"excerpt-content content-block\" data-post-id=\"1070409\">\n<figure class=\"figure-image -nocaption\"><a href=\"https:\/\/foreignpolicy.com\/2022\/02\/23\/united-states-europe-war-russia-ukraine-sleepwalking\/?tpcc=recirc062921\" class=\"image-attachment -ratioscale horizontal-orientation c5\"><img width=\"800\" height=\"533\" src=\"https:\/\/foreignpolicy.com\/wp-content\/uploads\/2022\/02\/GettyImages-1233390879.jpg?w=800&amp;h=533&amp;quality=80\" alt=\"European Commission President Ursula von der Leyen, Canada's Prime Minister Justin Trudeau, U.S. President Joe Biden and France's President Emmanuel Macron walk along the boardwalk during the G7 summit in Carbis Bay, Cornwall, south-west England on June 11, 2021.\" class=\"image -fit-3-2\" referrerpolicy=\"no-referrer\" \/><\/a><\/figure><div class=\"list-text\"><a class=\"hed-heading -excerpt\" href=\"https:\/\/foreignpolicy.com\/2022\/02\/23\/united-states-europe-war-russia-ukraine-sleepwalking\/?tpcc=recirc062921\">\n<h3 class=\"hed\">The West Is Sleepwalking Into War in Ukraine<\/h3>\n<\/a>\n<div class=\"dek-heading -excerpt\">\n<p class=\"dek\">It’s not easy to make sense of how the United States and Europe are responding to Russia’s aggression.<\/p>\n<\/div>\n<\/div>\n<\/div>\n<div class=\"excerpt-content content-block\" data-post-id=\"1070621\">\n<figure class=\"figure-image -nocaption\"><a href=\"https:\/\/foreignpolicy.com\/2022\/02\/24\/russia-war-nato-ukraine-invasion\/?tpcc=recirc062921\" class=\"image-attachment -ratioscale horizontal-orientation c5\"><img width=\"800\" height=\"533\" src=\"https:\/\/foreignpolicy.com\/wp-content\/uploads\/2022\/02\/GettyImages-1238559942.jpg?w=800&amp;h=533&amp;quality=80\" alt=\"NATO Secretary-General Jens Stoltenberg\" class=\"image -fit-3-2\" referrerpolicy=\"no-referrer\" \/><\/a><\/figure><div class=\"list-text\"><a class=\"hed-heading -excerpt\" href=\"https:\/\/foreignpolicy.com\/2022\/02\/24\/russia-war-nato-ukraine-invasion\/?tpcc=recirc062921\">\n<h3 class=\"hed\">Is There a Risk of a NATO vs. Russia War?<\/h3>\n<\/a>\n<div class=\"dek-heading -excerpt\">\n<p class=\"dek\">Putin’s invasion of Ukraine marks a tectonic shift in world politics and increases the danger of superpower confrontation and the militarization of Europe.<\/p>\n<\/div>\n<\/div>\n<\/div>\n<div class=\"excerpt-content content-block\" data-post-id=\"1070193\">\n<figure class=\"figure-image -nocaption\"><a href=\"https:\/\/foreignpolicy.com\/2022\/02\/22\/russia-ukraine-invasion-georgia-2008-south-ossetia-tskhinvali\/?tpcc=recirc062921\" class=\"image-attachment -ratioscale horizontal-orientation c5\"><img width=\"800\" height=\"533\" src=\"https:\/\/foreignpolicy.com\/wp-content\/uploads\/2022\/02\/russia-georgia-invasion-2008.jpg?w=800&amp;h=533&amp;quality=80\" alt=\"Russian army trucks are pictured on a riverbank in Nar, near the border between Russia and Georgia, on Aug. 15, 2008.\" class=\"image -fit-3-2\" referrerpolicy=\"no-referrer\" \/><\/a><\/figure><div class=\"list-text\"><a class=\"hed-heading -excerpt\" href=\"https:\/\/foreignpolicy.com\/2022\/02\/22\/russia-ukraine-invasion-georgia-2008-south-ossetia-tskhinvali\/?tpcc=recirc062921\">\n<h3 class=\"hed\">Russia Is Reenacting Its Georgia Playbook in Ukraine<\/h3>\n<\/a>\n<div class=\"dek-heading -excerpt\">\n<p class=\"dek\">False claims of military withdrawal followed by recognition of breakaway regions is a tried and tested Kremlin strategy.<\/p>\n<\/div>\n<\/div>\n<\/div>\n<div class=\"excerpt-content content-block\" data-post-id=\"1070309\">\n<figure class=\"figure-image -nocaption\"><a href=\"https:\/\/foreignpolicy.com\/2022\/02\/22\/insurgency-ukraine-war-russia\/?tpcc=recirc062921\" class=\"image-attachment -ratioscale horizontal-orientation c5\"><img width=\"800\" height=\"533\" src=\"https:\/\/foreignpolicy.com\/wp-content\/uploads\/2022\/02\/UKRAINE-INSURGENCY-RUSSIA-GettyImages-1238686205.png?w=800&amp;h=533&amp;quality=80\" alt=\"Ukrainian servicemen patrol the front line.\" class=\"image -fit-3-2\" referrerpolicy=\"no-referrer\" \/><\/a><\/figure><div class=\"list-text\"><a class=\"hed-heading -excerpt\" href=\"https:\/\/foreignpolicy.com\/2022\/02\/22\/insurgency-ukraine-war-russia\/?tpcc=recirc062921\">\n<h3 class=\"hed\">Insurgency in Ukraine Could Lead to Major War in Europe<\/h3>\n<\/a>\n<div class=\"dek-heading -excerpt\">\n<p class=\"dek\">Avoiding escalation with Russia would become even harder.<\/p>\n<\/div>\n<\/div>\n<\/div>\n<\/div>\n<div class=\"grid__third grid--flex grid--flow additional-recirc-units\">\n<div class=\"trending-container g-block-wrapper top-ten-stories\">\n<h2 class=\"title\">Trending<\/h2>\n<div class=\"grid__half--mobile\">\n<ol><li class=\"fp-trending-content\"><a class=\"hed-heading -excerpt\" href=\"https:\/\/foreignpolicy.com\/2022\/03\/03\/putin-ukraine-russia-nato-kosovo\/?tpcc=recirc_trending062921\">\n<h3 class=\"hed\">Why Putin Keeps Talking About Kosovo<\/h3>\n<\/a>\n<div class=\"meta-data -excerpt\"><a href=\"https:\/\/foreignpolicy.com\/channel\/analysis\/\" class=\"department-name -excerpt\">Analysis<\/a> |\n<address class=\"author-list -excerpt\"><a href=\"https:\/\/foreignpolicy.com\/author\/jade-mcglynn\/\" data-author-id=\"1047984\" class=\"author\">Jade McGlynn<\/a><\/address>\n<\/div>\n<\/li>\n<li class=\"fp-trending-content\"><a class=\"hed-heading -excerpt\" href=\"https:\/\/foreignpolicy.com\/2022\/03\/02\/ukraine-biolabs-conspiracy-theory-qanon\/?tpcc=recirc_trending062921\">\n<h3 class=\"hed\">False Claims of U.S. Biowarfare Labs in Ukraine Grip QAnon<\/h3>\n<\/a>\n<div class=\"meta-data -excerpt\"><a href=\"https:\/\/foreignpolicy.com\/category\/news\/report\/\" class=\"department-name -excerpt\">Report<\/a> |\n<address class=\"author-list -excerpt\"><a href=\"https:\/\/foreignpolicy.com\/author\/justin-ling\/\" data-author-id=\"808286\" class=\"author\">Justin Ling<\/a><\/address>\n<\/div>\n<\/li>\n<li class=\"fp-trending-content\"><a class=\"hed-heading -excerpt\" href=\"https:\/\/foreignpolicy.com\/2022\/02\/28\/russia-urban-warfare-ukraine-insurgency-kyiv-kharkiv\/?tpcc=recirc_trending062921\">\n<h3 class=\"hed\">‘Street Fight’: Russia’s Block-by-Block Warfare in Ukraine<\/h3>\n<\/a>\n<div class=\"meta-data -excerpt\"><a href=\"https:\/\/foreignpolicy.com\/category\/q-a\/\" class=\"department-name -excerpt\">Q&amp;A<\/a> |\n<address class=\"author-list -excerpt\"><a href=\"https:\/\/foreignpolicy.com\/author\/jack-detsch\/\" data-author-id=\"999847\" class=\"author\">Jack Detsch<\/a><\/address>\n<\/div>\n<\/li>\n<li class=\"fp-trending-content\"><a class=\"hed-heading -excerpt\" href=\"https:\/\/foreignpolicy.com\/2022\/03\/02\/russia-war-wheat-economy-food-security\/?tpcc=recirc_trending062921\">\n<h3 class=\"hed\">Forget Oil. Putin’s War Is Wrecking the Wheat Market.<\/h3>\n<\/a>\n<div class=\"meta-data -excerpt\"><a href=\"https:\/\/foreignpolicy.com\/category\/news\/report\/\" class=\"department-name -excerpt\">Report<\/a> |\n<address class=\"author-list -excerpt\"><a href=\"https:\/\/foreignpolicy.com\/author\/christina-lu\/\" data-author-id=\"1029959\" class=\"author\">Christina Lu<\/a>, <a href=\"https:\/\/foreignpolicy.com\/author\/robbie-gramer\/\" data-author-id=\"385543\" class=\"author\">Robbie Gramer<\/a>, <a href=\"https:\/\/foreignpolicy.com\/author\/anisa-pezeshki\/\" data-author-id=\"1071477\" class=\"author\">Anisa Pezeshki<\/a><\/address>\n<\/div>\n<\/li>\n<li class=\"fp-trending-content\"><a class=\"hed-heading -excerpt\" href=\"https:\/\/foreignpolicy.com\/2022\/03\/03\/israel-russia-ukraine-neutral-side-west\/?tpcc=recirc_trending062921\">\n<h3 class=\"hed\">Israel Needs to Make Up Its Mind on Ukraine<\/h3>\n<\/a>\n<div class=\"meta-data -excerpt\"><a href=\"https:\/\/foreignpolicy.com\/category\/analysis\/argument\/\" class=\"department-name -excerpt\">Argument<\/a> |\n<address class=\"author-list -excerpt\"><a href=\"https:\/\/foreignpolicy.com\/author\/shalom-lipner\/\" data-author-id=\"934501\" class=\"author\">Shalom Lipner<\/a><\/address>\n<\/div>\n<\/li>\n<\/ol><\/div>\n<\/div>\n<div class=\"the-latest-container\">\n<div class=\"sidebar-list\">\n<div class=\"title\">Latest<\/div>\n<div class=\"excerpt-content\"><a class=\"hed-heading -excerpt\" href=\"https:\/\/foreignpolicy.com\/2022\/03\/03\/putin-ukraine-russia-nato-kosovo\/?tpcc=recirc_latest062921\">\n<h3 class=\"hed\">Why Putin Keeps Talking About Kosovo<\/h3>\n<\/a>\n<div class=\"meta-data -ago\"><time pubdate=\"\" datetime=\"2022-03-03\" title=\"March 3rd, 2022\" class=\"date-time\">March 3, 2022, 11:39 AM<\/time><\/div>\n<\/div>\n<div class=\"excerpt-content\"><a class=\"hed-heading -excerpt\" href=\"https:\/\/foreignpolicy.com\/2022\/03\/03\/china-pla-navy-base-west-africa-atlantic-equatorial-guinea\/?tpcc=recirc_latest062921\">\n<h3 class=\"hed\">Fears of a Chinese Naval Base in West Africa Are Overblown<\/h3>\n<\/a>\n<div class=\"meta-data -ago\"><time pubdate=\"\" datetime=\"2022-03-03\" title=\"March 3rd, 2022\" class=\"date-time\">March 3, 2022, 10:39 AM<\/time><\/div>\n<\/div>\n<div class=\"excerpt-content\"><a class=\"hed-heading -excerpt\" href=\"https:\/\/foreignpolicy.com\/2022\/03\/03\/uttar-pradesh-elections-india-dalit-candidate-azad\/?tpcc=recirc_latest062921\">\n<h3 class=\"hed\">The Dalit Politician Shaking Up Uttar Pradesh’s Elections<\/h3>\n<\/a>\n<div class=\"meta-data -ago\"><time pubdate=\"\" datetime=\"2022-03-03\" title=\"March 3rd, 2022\" class=\"date-time\">March 3, 2022, 9:50 AM<\/time><\/div>\n<\/div>\n<div class=\"excerpt-content\"><a class=\"hed-heading -excerpt\" href=\"https:\/\/foreignpolicy.com\/2022\/03\/03\/peace-talks-resume-as-russia-claims-first-city-since-invasion\/?tpcc=recirc_latest062921\">\n<h3 class=\"hed\">Peace Talks Resume as Russia Claims First City Since Invasion<\/h3>\n<\/a>\n<div class=\"meta-data -ago\"><time pubdate=\"\" datetime=\"2022-03-03\" title=\"March 3rd, 2022\" class=\"date-time\">March 3, 2022, 5:50 AM<\/time><\/div>\n<\/div>\n<div class=\"excerpt-content\"><a class=\"hed-heading -excerpt\" href=\"https:\/\/foreignpolicy.com\/2022\/03\/03\/israel-russia-ukraine-neutral-side-west\/?tpcc=recirc_latest062921\">\n<h3 class=\"hed\">Israel Needs to Make Up Its Mind on Ukraine<\/h3>\n<\/a>\n<div class=\"meta-data -ago\"><time pubdate=\"\" datetime=\"2022-03-03\" title=\"March 3rd, 2022\" class=\"date-time\">March 3, 2022, 4:36 AM<\/time><\/div>\n<\/div>\n<\/div>\n<div class=\"sidebar-list-more\"><a href=\"https:\/\/foreignpolicy.com\/category\/latest\/\">See All Stories<\/a><\/div>\n<\/div>\n<div class=\"newsletter-signup-and-ads\">\n<div class=\"newsletter-unit-signup newsletter-16 newsletter-unit newsletters-page newsletter-row newsletter-16\">\n<div class=\"padding-right--desktop\"><img src=\"https:\/\/foreignpolicy.com\/wp-content\/themes\/foreign-policy-2017\/assets\/src\/images\/newsletters-page\/newsletter-icon.png\" alt=\"Newsletters\" class=\"newsletter-icon-alt\" referrerpolicy=\"no-referrer\" \/><p class=\"signup-prompt\"><strong>Sign up for Morning Brief<\/strong><\/p>\n<h2 class=\"dek-heading\">Foreign Policy’s flagship daily newsletter with what’s coming up around the world today from <em>Foreign Policy<\/em>’s newsletter writer <strong>Colm Quinn<\/strong>.<\/h2>\n<\/div>\n<div>\n<div class=\"grid--flex newsletter-16 buttons\"><label for=\"email-16\">Enter your email<\/label> <input type=\"email\" name=\"email\" placeholder=\"Enter your email\" id=\"email-16\" \/><a class=\"button button--signup\" data-newsletter-id=\"16\" data-sourceid=\"Article Page Form\">Sign Up<\/a>\n<div class=\"signed-up\">✓ Signed Up <a class=\"button--unsubscribe\" data-newsletter-id=\"16\">Unsubscribe<\/a><\/div>\n<\/div>\n<div class=\"privacy-policy-acknowledge\"><input type=\"checkbox\" class=\"required-checkbox\" \/><p><small>By signing up, I agree to the <a href=\"https:\/\/foreignpolicy.com\/privacy\/\" target=\"_blank\">Privacy Policy<\/a> and <a href=\"https:\/\/foreignpolicy.com\/termsofuse\/\" target=\"_blank\">Terms of Use<\/a> and to occasionally receive special offers from Foreign Policy.<\/small><\/p>\n<\/div>\n<\/div>\n<\/div>\n<div class=\"ad-container--parent ad-container--parent--mobile-spacing hide-desktop\">\n<div class=\"ad-container--parent ad-container--parent--mobile-spacing hide-mobile\">\n<\/div>\n<\/div>\n<\/div>\n<\/div><\/div>",
				"created_at": "2022-03-03T18:14:19+0000",
				"updated_at": "2022-03-27T03:01:58+0000",
				"published_at": "2021-09-24T16:16:39+0000",
				"published_by": [
					"Hal Brands",
					"Michael Beckley"
				],
				"starred_at": null,
				"annotations": [],
				"mimetype": "text\/html; charset=UTF-8",
				"language": "en_US",
				"reading_time": 25,
				"domain_name": "foreignpolicy.com",
				"preview_picture": "https:\/\/foreignpolicy.com\/wp-content\/uploads\/2021\/09\/china-xi-jinping-decline-GettyImages-682921526-lead.jpg?w=1500",
				"http_status": "200",
				"headers": {
					"server": "nginx",
					"date": "Thu, 03 Mar 2022 18:14:18 GMT",
					"content-type": "text\/html; charset=UTF-8",
					"transfer-encoding": "chunked",
					"connection": "keep-alive",
					"x-hacker": "If you're reading this, you should visit wpvip.com\/careers and apply to join the fun, mention this header.",
					"x-powered-by": "WordPress VIP <https:\/\/wpvip.com>",
					"host-header": "a9130478a60e5f9135f765b23f26593b",
					"link": "<https:\/\/foreignpolicy.com\/wp-json\/>; rel=\"https:\/\/api.w.org\/\", <https:\/\/foreignpolicy.com\/wp-json\/wp\/v2\/posts\/1056639>; rel=\"alternate\"; type=\"application\/json\", <https:\/\/bit.ly\/3lSSGq2>; rel=shortlink",
					"x-rq": "atl2 0 4 9980",
					"age": "0",
					"x-cache": "miss",
					"cache-control": "private, no-store",
					"accept-ranges": "bytes"
				},
				"_links": {
					"self": {
						"href": "\/api\/entries\/7"
					}
				}
			},
			{
				"is_archived": 0,
				"is_starred": 0,
				"user_name": "justin",
				"user_email": "justinbrooks@fastmail.com",
				"user_id": 2,
				"tags": [],
				"is_public": false,
				"id": 6,
				"uid": null,
				"title": "Understanding Different Gradle Caches for Android Projects, part 2 – Jason Atwood",
				"url": "https:\/\/jasonatwood.io\/archives\/1995",
				"hashed_url": "8803507cfb4fafaf182f24207ebdb5062fe04b98",
				"origin_url": null,
				"given_url": "https:\/\/jasonatwood.io\/archives\/1995",
				"hashed_given_url": "8803507cfb4fafaf182f24207ebdb5062fe04b98",
				"archived_at": null,
				"content": "<p><em>This is part 2 in a series about different caches available to Android Gradle projects. In <a href=\"https:\/\/jasonatwood.io\/archives\/1966\">part 1<\/a> I wrote about the benefits provided by Gradle’s cache of incremental builds and the build cache directory. In the second half here, I write about Android’s build cache, the Gradle daemon, and dependency caching<\/em><\/p>\n<h2>Android’s build cache<\/h2>\n<p>Everything we talked about so far has been generic to all Gradle projects. However, the Android Gradle Plugin (AGP) adds some additional caching that warrants a separate discussion. As if the previous build-caching (which I’m now going to refer to as “Gradle build caching”) wasn’t complicated enough, AGP tries to do additional work for us. I’ll leave it up to you to decide if AGP is helping out or making things more complicated. This cache:<\/p>\n<blockquote>\n<p>stores certain outputs that the Android plugin for Gradle generates when building your project (such as unpackaged AARs and pre-dexed remote dependencies).<\/p>\n<p>…<\/p>\n<p>The build cache also works on continuous integration servers and when running multiple build processes on a single local machine.<\/p>\n<\/blockquote>\n<p><a href=\"https:\/\/developer.android.com\/studio\/build\/build-cache\">(source)<\/a><\/p>\n<p>I’ve actually found the <a href=\"https:\/\/sites.google.com\/a\/android.com\/tools\/tech-docs\/build-cache\">older documentation<\/a> (you’ll have to stop the redirect to see it) more illuminating:<\/p>\n<blockquote>\n<p>Note that the build cache works independently of Gradle’s cache management (e.g., reporting up-to-date statuses)<\/p>\n<\/blockquote>\n<p>So this cache works across builds, across projects, and across machines, similar to the Gradle build cache.<\/p>\n<p>The AGP build cache lives in <code>&lt;user-home&gt;\/.android\/build-cache\/<\/code> (or one of a few other <a href=\"https:\/\/developer.android.com\/studio\/build\/build-cache#change_cache_location\">possible locations<\/a>). I’m using Android Gradle Plugin 3.6.0. So I see a sub directory for the cache<\/p>\n<pre><code>$ pwd\n\/Users\/jasonatwood\/.android\/build-cache\n$ ls -al\ndrwxr-xr-x    5 jasonatwood    160 Feb  7 15:32 .\ndrwxr-xr-x   35 jasonatwood   1120 Jan  9 17:41 ..\ndrwxr-xr-x  328 jasonatwood  10496 Feb  7 15:33 3.6.0-rc01\n-rw-r--r--    1 jasonatwood      0 Feb  7 14:46 3.6.0-rc01.lock\n<\/code><\/pre>\n<p>We can clear this AGP cache with:<\/p>\n<p><code>$ .\/gradlew cleanBuildCache<\/code><\/p>\n<p>So let’s see what things look like if we clean, clear Gradle cache, <em>and<\/em> clear AGP cache:<\/p>\n<pre><code>$ .\/gradlew clean\n$ rm -rf $GRADLE_HOME\/caches\/build-cache-*\n$ .\/gradlew cleanBuildCache\n$ .\/gradlew --build-cache --scan app:assembleDebug\nBUILD SUCCESSFUL in 1m 15s\n279 actionable tasks: 189 executed, 85 from cache, 5 up-to-date\n<\/code><\/pre>\n<p>Remember from part 1 that even though we have cleared all the caches we still have some tasks that are marked as “from cache”.<\/p>\n<blockquote>\n<p>Side note: I have since made changes to the test project so any direct time comparison with the Gradle executions in part 1 won’t be very meaningful.<\/p>\n<\/blockquote>\n<p>We can then inspect the contents of the AGP cache directory.<\/p>\n<pre><code>$ pwd\n\/Users\/jasonatwood\/.android\/build-cache\/3.6.0-rc01\n$ls -al\n...\ndrwxr-xr-x    4 jasonatwood  staff    128 Feb  7 15:33 fe99ffa14773dc747b88a457a32a97b88d639502d96e01a74549ce6c13c1e29b\n-rw-r--r--    1 jasonatwood  staff      0 Feb  7 15:33 fe99ffa14773dc747b88a457a32a97b88d639502d96e01a74549ce6c13c1e29b.lock\ndrwxr-xr-x    4 jasonatwood  staff    128 Feb  7 15:33 fecd098df0182fbf510891743186d52182a04b5712c989ad7ae8a14c63ad8cbf\n-rw-r--r--    1 jasonatwood  staff      0 Feb  7 15:33 fecd098df0182fbf510891743186d52182a04b5712c989ad7ae8a14c63ad8cbf.lock\ndrwxr-xr-x    4 jasonatwood  staff    128 Feb  7 15:33 ff42b3969608800b0003e60a96e6f50d6e95fd084b6fdbf25a01f7ef0f86f339\n-rw-r--r--    1 jasonatwood  staff      0 Feb  7 15:33 ff42b3969608800b0003e60a96e6f50d6e95fd084b6fdbf25a01f7ef0f86f339.lock\n<\/code><\/pre>\n<p>These seem to have a similar UUID pattern as Gradle’s build cache.<\/p>\n<p>Let’s see what we get by using AGP cache. If we clear the incremental build cache and Gradle build cache and <em>rely on just the Android cache<\/em>:<\/p>\n<pre><code>$ .\/gradlew clean\n$ rm -rf $GRADLE_HOME\/caches\/build-cache-*\n$ .\/gradlew --build-cache --scan app:assembleDebug\nBUILD SUCCESSFUL in 55s\n279 actionable tasks: 192 executed, 82 from cache, 5 up-to-date\n<\/code><\/pre>\n<p>This sounds counterintuitive: fewer tasks were pulled from cache, but we still got lower build times. I ran this test four times on my local machine and got similar results: a 5 – 20 second improvement in build time with nearly identical cached task count.<\/p>\n<p>My guess is that when AGP hits the cache, it does not register tasks as FROM-CACHE the same way that Gradle’s cache does. So we are seeing the <em>effect<\/em> of the cache with a reduced build time. But we do not really have a way to <em>visualize<\/em> what tasks are being cached by AGP.<\/p>\n<p>It should be noted that some of <a href=\"https:\/\/developer.android.com\/studio\/build\/build-cache\">the documentation<\/a> on this cache is is dated and now incorrect. Specifically the parts about disabling the cache. Adding <code>android.enableBuildCache=false<\/code> results in a gradle error<\/p>\n<blockquote>\n<p>WARNING: The option setting ‘android.enableBuildCache=false’ is experimental and unsupported.<\/p>\n<\/blockquote>\n<p>It is not entirely clear about the state of the AGP cache or where it is heading. During my research I stumbled upon this <a href=\"https:\/\/issuetracker.google.com\/issues\/37324009#comment3\">comment from a Googler<\/a><\/p>\n<blockquote>\n<p>The Android Gradle build cache (different from the Gradle build cache) is now enabled by default and you shouldn’t have to tweak it manually (cleanBuildCache is also not needed as we auto-clean the cache automatically).<\/p>\n<p>We are migrating the Android Gradle build cache to the Gradle build cache too, so this cache will be obsolete soon.<\/p>\n<\/blockquote>\n<p>Since the AGP cache is enabled by default it was technically influencing with our results from part one, but since we were not clearing the cache either, I am confident that we can still understand the benefits of “incremental build” and Gradle’s build cache from prior tests. I’ll leave it up to you to repeat part one and clear AGP cache each time.<\/p>\n<h2>Memory cache with the Daemon<\/h2>\n<p>In each of our previous experiments, we had yet another cache working to our advantage that I have not talked about. This is caching provided by the Gradle Daemon. In terms of additional caching you can think of the Daemon as a process\/memory cache. You can read more about how the daemon speeds up builds <a href=\"https:\/\/docs.gradle.org\/current\/userguide\/gradle_daemon.html#sec:how_does_the_gradle_daemon_make_builds_faster\">here<\/a><\/p>\n<blockquote>\n<p>The daemon has the obvious benefit of only requiring Gradle to be loaded into memory once for multiple builds, as opposed to once for each build.<\/p>\n<p>Code is progressively optimized during execution which means that subsequent builds can be faster purely due to this optimization process<\/p>\n<p>The Daemon also allows more effective in memory caching across builds. For example, the classes needed by the build (e.g. plugins, build scripts) can be held in memory between builds. Similarly, Gradle can maintain in-memory caches of build data such as the hashes of task inputs and outputs, used for incremental building.<\/p>\n<\/blockquote>\n<p>The daemon is enabled by default, so by not explicitly disabling it (with <code>--no-daemon<\/code> flag) or stopping it before each <code>assemble<\/code> (with <code>$ .\/gradlew --stop<\/code> command), we included the benefit of the daemon in our previous build speed experiments. I did this to keep things simple but we can go back and re-run most of those experiments with daemon disabled to <em>exclude<\/em> any benefit of the daemon. This would have given us a better sense of how the incremental build, Gradle build cache, and Android build cache contributed to build speed. I won’t re-run those experiments here, save for one, our incremental build test:<\/p>\n<p>incremental build + daemon benefits:<\/p>\n<pre><code>$ .\/gradlew clean\n$ .\/gradlew --scan app:assembleDebug # run once\n$ .\/gradlew --scan app:assembleDebug # run again\nBUILD SUCCESSFUL in 6s\n317 actionable tasks: 2 executed, 315 up-to-date\n<\/code><\/pre>\n<p>incremental build + without daemon benefits:<\/p>\n<pre><code>$ .\/gradlew clean\n$ .\/gradlew --scan app:assembleDebug # run once\n$ .\/gradlew --scan --no-daemon app:assembleDebug \/\/ again with no daemon\nBUILD SUCCESSFUL in 27s\n317 actionable tasks: 2 executed, 315 up-to-date\n<\/code><\/pre>\n<p>You can see that we were able re-use 315 up-to-date task in both experiments, but because we didn’t have the Gradle daemon to keep most of that in memory, it cost us 21 seconds to read all that back into memory in the second run.<\/p>\n<p>Because the daemon is enabled by default you have likely been getting its benefit all along. The take away here is that you don’t want to disable it unless you have good reason, like a build failing for no apparent reason with cryptic error messages. More often than not, the best advice is to simply either stop all gradle instances (by using <code>--stop<\/code>), or simply killing all Gradle processes via your OS, and running the build again. You can always look at the Gradle daemons and their statuses by running <code>$ .\/gradlew --status<\/code>.<\/p>\n<h2>Third-party dependency caching<\/h2>\n<p>Another cache that Gradle provides is the caching of third-party jars. Most Android apps depend on at least a few third party jars. Even if you are only using code from AndroidX libs then you still have jars that need to be downloaded from central repositories. Gradle caches these dependencies in the aptly named <a href=\"https:\/\/docs.gradle.org\/current\/userguide\/dependency_resolution.html#sec:dependency_cache\">Dependency Cache<\/a>.<\/p>\n<p>Just like the build cache, this cache is available across projects on the same machine. In most cases, there’s no point sharing this cache across machines since downloading jars from a central repository is just as fast (if not faster) than downloading them from a build-cache-server type setup. All that being said, if your internet connection is not too fast and you need to pull a lot of dependencies, it can help to locally store them in your local area network and pull from there. If you use any form of CI containers it may make sense to use a dependency cache server so each instance can pull from the same local cache instead of downloading things every time.<\/p>\n<p>Gradle stores this cache in <code>$GRADLE_HOME\/.gradle\/caches\/<\/code> specifically <code>jars-3<\/code>, <code>modules-2<\/code> and <code>transforms-2<\/code>. I don’t have a good grasp of what goes in what. By exploring each directory I am guessing that <code>modules-2<\/code> contains .jar files for third party dependencies:<\/p>\n<p><img src=\"https:\/\/jasonatwood.io\/wp-content\/uploads\/2020\/02\/image4.png\" alt=\"\" width=\"848\" height=\"414\" class=\"aligncenter size-full wp-image-2001\" srcset=\"https:\/\/jasonatwood.io\/wp-content\/uploads\/2020\/02\/image4.png 848w, https:\/\/jasonatwood.io\/wp-content\/uploads\/2020\/02\/image4-300x146.png 300w, https:\/\/jasonatwood.io\/wp-content\/uploads\/2020\/02\/image4-768x375.png 768w\" referrerpolicy=\"no-referrer\" \/><\/p>\n<p><code>jars-3<\/code> contains jars needed to actually start and run Gradle. <code>transforms-2<\/code> contains transformed jars. On my machine, it contains lots of <a href=\"https:\/\/developer.android.com\/studio\/command-line\/jetifier\">jetified<\/a> jars created when non AndroidX dependencies get modified to reference AndroidX artifacts.<\/p>\n<p>We can run some more experiments to see what this cache saves us in build time. Since this will result in re-downloading lots of jars, the time savings will really depend on your internet connection speed.<\/p>\n<pre><code># clear incremental build cache\n$ .\/gradlew clean\n# clear Gradle build cache\n$ rm -rf $GRADLE_HOME\/caches\/build-cache-*\n# clear AGP cache\n$ .\/gradlew cleanBuildCache\n# clear 3rd party dependency cache\n$ rm -rf $GRADLE_HOME\/caches\/modules-2\n$ rm -rf $GRADLE_HOME\/caches\/transform-2\n$ .\/gradlew --scan app:assembleDebug\nBUILD SUCCESSFUL in 8m 25s\n279 actionable tasks: 193 executed, 81 from cache, 5 up-to-date\n<\/code><\/pre>\n<p>We can now clear everything <em>but<\/em> the 3rd party cache:<\/p>\n<pre><code># clear incremental build cache\n$ .\/gradlew clean\n# clear Gradle build cache\n$ rm -rf $GRADLE_HOME\/caches\/build-cache-*\n# clear AGP cache\n$ .\/gradlew cleanBuildCache\n$ .\/gradlew --scan app:assembleDebug\nBUILD SUCCESSFUL in 1m 39s\n279 actionable tasks: 186 executed, 88 from cache, 5 up-to-date\n<\/code><\/pre>\n<p>The HTML scan report has a great tab to show network activity<\/p>\n<p><img src=\"https:\/\/jasonatwood.io\/wp-content\/uploads\/2020\/02\/image5.png\" alt=\"\" width=\"2254\" height=\"704\" class=\"aligncenter size-full wp-image-2003\" srcset=\"https:\/\/jasonatwood.io\/wp-content\/uploads\/2020\/02\/image5.png 2254w, https:\/\/jasonatwood.io\/wp-content\/uploads\/2020\/02\/image5-300x94.png 300w, https:\/\/jasonatwood.io\/wp-content\/uploads\/2020\/02\/image5-1024x320.png 1024w, https:\/\/jasonatwood.io\/wp-content\/uploads\/2020\/02\/image5-768x240.png 768w, https:\/\/jasonatwood.io\/wp-content\/uploads\/2020\/02\/image5-1536x480.png 1536w, https:\/\/jasonatwood.io\/wp-content\/uploads\/2020\/02\/image5-2048x640.png 2048w\" referrerpolicy=\"no-referrer\" \/><\/p>\n<p>You can see that I had to download ~180 Mb at a cost of “19 minutes” of build time, versus zero network activity on subsequent builds. I’m assuming this is for all threads, sinde the whole build only took 8 minutes. But either way this is a substantial improvement.<\/p>\n<p>Just for fun I repeated the previous experiment, but deleted <em>only the <code>transform-2<\/code> directory<\/em>:<\/p>\n<pre><code>$ .\/gradlew clean\n$ rm -rf $GRADLE_HOME\/caches\/build-cache-*\n$ .\/gradlew cleanBuildCache\n$ rm -rf $GRADLE_HOME\/caches\/transform-2\n$ .\/gradlew --scan app:assembleDebug\n<\/code><\/pre>\n<p>This required zero network activity which proves my idea that <code>transform-2<\/code> includes only transformations to already-downloaded jars.<\/p>\n<h2>Cache cleanup<\/h2>\n<p>Periodically Gradle will cleanup the caches in <code>$GRADLE_HOME<\/code> for you, with unused-lifespan ranging from <a href=\"https:\/\/docs.gradle.org\/current\/userguide\/directory_layout.html#dir:gradle_user_home:cache_cleanup\">7 days to 30 days<\/a> depending on whether the cache can be rebuilt locally or not. These include the build cache and the third-party caches. If you need to <a href=\"https:\/\/github.com\/gradle\/gradle\/issues\/7018#issuecomment-473817849\">disable this cleanup entirely<\/a> you can add <code>org.gradle.cache.cleanup=false<\/code> to <code>gradle.properties<\/code>.<\/p>\n<p>I do not believe that Gradle automatically cleans up the incremental-build cache. But given how often I call <code>.\/gradlew clean<\/code> I don’t think it is a big deal.<\/p>\n<p>Neither of these cleanups have any affect on the AGP Build cache. As we said before that can be cleaned up manually. It looks like each new version of Android Studio generates a new cache directory, so a manual cleanup won’t remove directories for other Android Studio versions. Those directories you’ll need to manually delete.<\/p>\n<p>It should be noted that “Invalidate Caches \/ Restart …” in Android Studio does not affect any of these previously mentioned caches. It is specifically about <a href=\"https:\/\/www.jetbrains.com\/help\/idea\/2016.2\/cleaning-system-cache.html\">deleting files cached as part of the IDE’s regular processes<\/a>. In general, most of the IDE’s problems that require Invalidate Caches, are due to the index getting corrupted or out of date, meaning you get a lot of “red” references and errors, and even auto-complete is broken. In those instances, clearing the IDE’s cache, triggers a full index rebuild which fixes the problem. This is common if you change branches often and\/or have a lot of submodules. The point here is that if you experience any trouble from a command line build, “Invalidate Caches \/ Restart” in Android Studio is not the answer.<\/p>\n<h2>Recap<\/h2>\n<p>We’ve talked in detail about five different caches available to Android Gradle projects:<\/p>\n<ol><li>Incremental build: build directories <em>within<\/em> your project<\/li>\n<li>Gradle build cache: available across builds\/projects\/machines<\/li>\n<li>Android build cache: available across builds\/projects, for AGP output<\/li>\n<li>Gradle daemon: in-memory\/process caching<\/li>\n<li>Third party dependency caching: jars across builds\/projects on the same machine<\/li>\n<\/ol><p>We briefly mentioned additional caches that might work for you:<\/p>\n<ol><li>kapt output caching, potentially unsafe<\/li>\n<li>composite build caching, for builds of builds<\/li>\n<\/ol><p>My initial advice would be to turn on build cache and do not disable any of the rest of them. However most of these caches were not known to me before I started digging into them. So my real advice is to always use the latest versions of Gradle and AGP. Most of these caches are enabled by default or at least become the default state once they reach stability. Instead of always trying to stay up to date on the latest Gradle caching techniques, you are better off just staying on the latest versions of these tools and letting the Gradle and Android Tools developers silently make your builds faster with each release.<\/p>\n<p>Just for the hell of it, let’s build with none of the caches and then rebuild with all of them:<\/p>\n<pre><code># clear incremental build cache\n$ .\/gradlew clean\n# clear Gradle build cache\n$ rm -rf $GRADLE_HOME\/caches\/build-cache-*\n# clear AGP cache\n$ .\/gradlew cleanBuildCache\n# clear 3rd party dependency cache\n$ rm -rf $GRADLE_HOME\/caches\/modules-2\n$ rm -rf $GRADLE_HOME\/caches\/transform-2\n# stop gradle daemon\n$ .\/gradlew --stop\n# run a build\n$ .\/gradlew --scan app:assembleDebug\nBUILD SUCCESSFUL in 11m 49s\n279 actionable tasks: 192 executed, 82 from cache, 5 up-to-date\n# re-run a build without changing anything\n$ .\/gradlew --scan app:assembleDebug\nBUILD SUCCESSFUL in 9s\n279 actionable tasks: 279 up-to-date\n<\/code><\/pre>\n<p>This is a massive improvement.<\/p>\n<h2>Thanks<\/h2>\n<p>I was initially introduced to the build cache concept by <a href=\"https:\/\/dev.to\/joshuadeguzman\/speed-up-your-android-project-s-gradle-builds-1366\">this post by Joshua de Guzman<\/a>. That’s what got me researching all of this.<\/p>\n<p>I then drew inspiration and details from these two additional posts by <a href=\"https:\/\/medium.com\/asos-techblog\/exploring-the-android-build-process-caching-a9ee3e12873a\">Vesselin Iliev<\/a> and <a href=\"https:\/\/medium.com\/cirruslabs\/mastering-gradle-caching-and-incremental-builds-37eb1af7fcde\">Fedor Korotkov<\/a>.<\/p>\n<p>A big thanks goes to <a href=\"https:\/\/twitter.com\/gryzor\">Martin Marconcini<\/a> for reviewing this post.<\/p>\n<p>Lastly I want to thank anyone that’s ever contributed to the <a href=\"https:\/\/docs.gradle.org\/current\/userguide\/userguide.html\">Gradle documentation<\/a>. It is surprisingly easy to read and understand.<\/p>",
				"created_at": "2022-02-27T19:25:37+0000",
				"updated_at": "2022-02-27T19:25:37+0000",
				"published_at": null,
				"published_by": null,
				"starred_at": null,
				"annotations": [],
				"mimetype": "text\/html; charset=UTF-8",
				"language": "en_US",
				"reading_time": 12,
				"domain_name": "jasonatwood.io",
				"preview_picture": "https:\/\/jasonatwood.io\/wp-content\/uploads\/2020\/02\/image4.png",
				"http_status": "200",
				"headers": {
					"date": "Sun, 27 Feb 2022 19:25:36 GMT",
					"content-type": "text\/html; charset=UTF-8",
					"transfer-encoding": "chunked",
					"connection": "keep-alive",
					"cache-control": "no-cache",
					"wpo-cache-status": "cached",
					"last-modified": "Fri, 25 Feb 2022 15:45:26 GMT",
					"vary": "Accept-Encoding",
					"cf-cache-status": "DYNAMIC",
					"expect-ct": "max-age=604800, report-uri=\"https:\/\/report-uri.cloudflare.com\/cdn-cgi\/beacon\/expect-ct\"",
					"report-to": "{\"endpoints\":[{\"url\":\"https:\\\/\\\/a.nel.cloudflare.com\\\/report\\\/v3?s=lIdfw7B7j8CjhASrsj9qgk69350ryVAiy13pFpKDCjQPCphZ7f7ORAnoK5xMNS0aRxJnioTGIrJc7KuRSLLb4TOArQAwLigQvwwfSVx4cG92VxQOUn3NiFIQxZQ8Xm5TiQ==\"}],\"group\":\"cf-nel\",\"max_age\":604800}",
					"nel": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}",
					"server": "cloudflare",
					"cf-ray": "6e43ccd17fe12c88-ORD",
					"alt-svc": "h3=\":443\"; ma=86400, h3-29=\":443\"; ma=86400"
				},
				"_links": {
					"self": {
						"href": "\/api\/entries\/6"
					}
				}
			},
			{
				"is_archived": 0,
				"is_starred": 0,
				"user_name": "justin",
				"user_email": "justinbrooks@fastmail.com",
				"user_id": 2,
				"tags": [],
				"is_public": false,
				"id": 5,
				"uid": null,
				"title": "Complete guide to Rich Text in Jetpack Compose ✍️",
				"url": "https:\/\/dmytroshuba.com\/blog\/complete-guide-to-rich-text-in-jetpack-compose\/",
				"hashed_url": "24887ba9c23adb538d68c2d37dc2ad90bae9408e",
				"origin_url": null,
				"given_url": "https:\/\/dmytroshuba.com\/blog\/complete-guide-to-rich-text-in-jetpack-compose\/",
				"hashed_given_url": "24887ba9c23adb538d68c2d37dc2ad90bae9408e",
				"archived_at": null,
				"content": "<div>\n<p class=\"c10\">Jetpack Compose series:<\/p>\n<\/div><p>This article teaches how to customize text content in Jetpack Compose. It covers basics first and then goes deeper into advanced ways of customizing text appearance.<\/p>\n<blockquote>\n<p>Users don’t read anymore. They scan the content for anything that seems to be what they need.<\/p>\n<\/blockquote>\n<p>If you are not familiar with what rich text is then see the comparison to plain text below:<\/p>\n<p><img src=\"https:\/\/dmytroshuba.com\/blog\/plain-text-and-rich-text.png\" alt=\"plain text and rich text\" referrerpolicy=\"no-referrer\" \/><\/p>\n<p>From the picture we can see that rich text:<\/p>\n<ol><li>Displays content using <strong>multiple<\/strong> different styles;<\/li>\n<li><strong>Emphasizes<\/strong> some segments to stress the importance of some particular text.<\/li>\n<\/ol><p>It’s important to say that text styling is about UI <strong>and<\/strong> UX. Just like huge text in a book tells you it’s a header for a new chapter, this <a href=\"\">blue text<\/a> makes you think it’s a link (it’s not).<br \/>So rich text is not only about formatting and styling, but also about the delivery of the content and its meaning.<\/p>\n<h2 id=\"h-now-how-to-apply-styles-to-text%3F\"><a class=\"heading-anchor\" href=\"https:\/\/dmytroshuba.com\/blog\/complete-guide-to-rich-text-in-jetpack-compose#h-now-how-to-apply-styles-to-text%3F\" aria-hidden=\"true\">#<\/a> Now how to apply styles to Text?<\/h2>\n<p>We’re going to cover 3 ways how one can tweak text appearance. Each following approach is more advanced and flexible:<\/p>\n<ol><li>Filling <code>Text<\/code> composable properties<\/li>\n<li>Using (and reusing) <code>TextStyle<\/code><\/li>\n<li>With <code>AnnotatedString<\/code><\/li>\n<\/ol><h2 id=\"h-style-text-composable-with-its-properties\"><a class=\"heading-anchor\" href=\"https:\/\/dmytroshuba.com\/blog\/complete-guide-to-rich-text-in-jetpack-compose#h-style-text-composable-with-its-properties\" aria-hidden=\"true\">#<\/a> Style Text composable with its properties<\/h2>\n<p>In this section we will go through <code>Text<\/code> parameters. We will learn what these parameters do, how we can specify them and then see what content looks like when we apply them.<\/p>\n<p>Let’s start with a basic text field in Jetpack Compose:<\/p>\n<pre class=\"language-kotlin\">    Text(<br \/>text = \"Hello world\"<br \/>)<\/pre>\n<p>Here’s our text!<\/p>\n<p><img src=\"https:\/\/dmytroshuba.com\/blog\/hw.png\" alt=\"hello world image\" referrerpolicy=\"no-referrer\" \/><\/p>\n<p>Now let’s have some fun and style it.<\/p>\n<h3 id=\"h-text-size\"><a class=\"heading-anchor\" href=\"https:\/\/dmytroshuba.com\/blog\/complete-guide-to-rich-text-in-jetpack-compose#h-text-size\" aria-hidden=\"true\">#<\/a> Text size<\/h3>\n<p>A Text composable actually supports 2 units for size:<\/p>\n<ul><li><code>sp<\/code> - scaled pixels. Just as in Views, use this one.<\/li>\n<li><code>em<\/code> - <a href=\"https:\/\/developer.android.com\/reference\/kotlin\/androidx\/compose\/ui\/unit\/TextUnit\">relative font size<\/a>.<\/li>\n<\/ul><p>We will simply set an <code>sp<\/code> value to <code>fontSize<\/code> to make it slightly bigger.<\/p>\n<p><strong>⏭️ tldr:<\/strong> <code>fontSize = 24.sp<\/code><\/p>\n<p><img src=\"https:\/\/dmytroshuba.com\/blog\/hw1.png\" alt=\"hello world image with font size\" referrerpolicy=\"no-referrer\" \/><\/p>\n<h3 id=\"h-text-color\"><a class=\"heading-anchor\" href=\"https:\/\/dmytroshuba.com\/blog\/complete-guide-to-rich-text-in-jetpack-compose#h-text-color\" aria-hidden=\"true\">#<\/a> Text color<\/h3>\n<p>Jetpack Compose has its own Color class which is:<\/p>\n<ol><li>not compatible with Android View <a href=\"https:\/\/developer.android.com\/reference\/android\/graphics\/Color\">Color<\/a><br \/>However, you can simply turn Compose Color into View Color using the <code>toArgb()<\/code> function.<\/li>\n<li>created in a different way:<br \/>When setting a custom hex color we specify it as <code>Int<\/code>. Be aware of its transparency as we have to set it explicitly.<\/li>\n<\/ol><p>Let’s make the text purple. The value would be <code>0xFF81009E<\/code> where<\/p>\n<ul><li><code>81009E<\/code> is the hex of the color (<code>#81009E<\/code>)<\/li>\n<li><code>0xFF<\/code> is the alpha that adjusts transparency (<a href=\"https:\/\/gist.github.com\/lopspower\/03fb1cc0ac9f32ef38f4\">hex transparency table<\/a>)<br \/>Now <code>0xFF81009E<\/code> is an <code>Int<\/code> value.<\/li>\n<\/ul><p><strong>⏭️ tldr:<\/strong><code>color = Color(0xFF81009E)<\/code><\/p>\n<p><img src=\"https:\/\/dmytroshuba.com\/blog\/hw2.png\" alt=\"hello world image color\" referrerpolicy=\"no-referrer\" \/><\/p>\n<h3 id=\"h-font-family\"><a class=\"heading-anchor\" href=\"https:\/\/dmytroshuba.com\/blog\/complete-guide-to-rich-text-in-jetpack-compose#h-font-family\" aria-hidden=\"true\">#<\/a> Font family<\/h3>\n<p>Using <code>fontFamily<\/code> we can select a custom typeface or choose one of the font families that come by default:<\/p>\n<p>To apply a platform default font use <code>FontFamily.Default<\/code><\/p>\n<p>Others go by:<\/p>\n<ul><li><code>FontFamily.Monospace<\/code><\/li>\n<li><code>FontFamily.SansSerif<\/code><\/li>\n<li><code>FontFamily.Cursive<\/code><\/li>\n<li><code>FontFamily.Serif<\/code><\/li>\n<\/ul><p>Here’s how different these font styles are visually:<\/p>\n<p><img src=\"https:\/\/dmytroshuba.com\/blog\/fonts.png\" alt=\"fonts difference\" referrerpolicy=\"no-referrer\" \/><\/p>\n<p>To use a custom font put it into the <code>Font<\/code> class like this: <code>FontFamily(Font(R.font.open_sans))<\/code><\/p>\n<p><strong>⏭️ tldr:<\/strong><code>fontFamily = FontFamily.Monospace<\/code><\/p>\n<p><img src=\"https:\/\/dmytroshuba.com\/blog\/hw3.png\" alt=\"hello world image font family\" referrerpolicy=\"no-referrer\" \/><\/p>\n<h3 id=\"h-text-alignment\"><a class=\"heading-anchor\" href=\"https:\/\/dmytroshuba.com\/blog\/complete-guide-to-rich-text-in-jetpack-compose#h-text-alignment\" aria-hidden=\"true\">#<\/a> Text alignment<\/h3>\n<p>The TextAlign value is used to align text content.<\/p>\n<p>There are <a href=\"https:\/\/developer.android.com\/reference\/kotlin\/androidx\/compose\/ui\/text\/style\/TextAlign.Companion?hl=th#summary\">6 types of alignment<\/a>:<\/p>\n<ul><li><code>TextAlign.Center<\/code> - centers text content(based on <code>Text<\/code> width)<\/li>\n<li><code>TextAlign.Justify<\/code> - fills the width of the Text composable by stretching its content all over the available space.<\/li>\n<li><code>TextAlign.Start<\/code> and <code>TextAlign.Left<\/code> - the default. Align the text on the leading\/left edge.<\/li>\n<li><code>TextAlign.End<\/code> and <code>TextAlign.Right<\/code> - Align the text on the leading\/right edge.<\/li>\n<\/ul><p>The difference between <em>start<\/em> and <em>left<\/em>, <em>end<\/em> and <em>right<\/em> is not big, but <strong>never mix them<\/strong>.<\/p>\n<img src=\"https:\/\/dmytroshuba.com\/blog\/l-s_r-e.png\" alt=\"image of start\/left and right\/end\" width=\"50%\" referrerpolicy=\"no-referrer\" \/><p>❗ Keep in mind that <em>start<\/em> ≠ <em>left<\/em> and <em>end<\/em> ≠ <em>right<\/em> when you have to support RTL languages (such as Arabic).<br \/><code>end<\/code> is the same as right if the direction is left-to-right and left if the direction is right-to-left.<br \/>Align to <code>right<\/code> and the content is aligned to the right edge of the composable.<\/p>\n<p><strong>⏭️ tldr:<\/strong><code>textAlign = TextAlign.Center<\/code><\/p>\n<h3 id=\"h-set-max-lines-limit\"><a class=\"heading-anchor\" href=\"https:\/\/dmytroshuba.com\/blog\/complete-guide-to-rich-text-in-jetpack-compose#h-set-max-lines-limit\" aria-hidden=\"true\">#<\/a> Set max lines limit<\/h3>\n<p>The <code>maxLines<\/code> property sets how many lines your text can be on.<br \/>Now what happens if <code>maxLines<\/code> equals 1, but the text requires 2 lines? It’s called text overflow and there are a few strategies on how to handle it.<\/p>\n<p><strong>⏭️ tldr:<\/strong><code>maxLines = 1<\/code><\/p>\n<h3 id=\"h-text-overflow\"><a class=\"heading-anchor\" href=\"https:\/\/dmytroshuba.com\/blog\/complete-guide-to-rich-text-in-jetpack-compose#h-text-overflow\" aria-hidden=\"true\">#<\/a> Text overflow<\/h3>\n<p>There are 3 ways how you can handle text overflow by default:<\/p>\n<ul><li><code>TextOverflow.Clip<\/code> - clips the overflowing text to the bounds of the composable;<\/li>\n<li><code>TextOverflow.Ellipsis<\/code> - replace overflowing text with an ellipsis (…);<\/li>\n<li><code>TextOverflow.Visible<\/code> - shows all text even if there is not enough space (will render even outside of the composable)<\/li>\n<\/ul><p><strong>⏭️ tldr:<\/strong><code>overflow = TextOverflow.Ellipsis<\/code> - end with 3 dots if too many characters<\/p>\n<h3 id=\"h-make-text-clickable\"><a class=\"heading-anchor\" href=\"https:\/\/dmytroshuba.com\/blog\/complete-guide-to-rich-text-in-jetpack-compose#h-make-text-clickable\" aria-hidden=\"true\">#<\/a> Make text clickable<\/h3>\n<ul><li>To Make the entire text clickable use <a href=\"https:\/\/developer.android.com\/reference\/kotlin\/androidx\/compose\/ui\/Modifier\">modifier<\/a>:<br \/><code>modifier = Modifier.clickable { }<\/code><\/li>\n<li>To make some parts of text clickable:<br \/>Use <code>ClickableText<\/code> and <code>AnnotatedString<\/code>(more details below)<\/li>\n<\/ul><p><strong>⏭️ tldr:<\/strong> <code>modifier = Modifier.clickable { \/* execution *\/ }<\/code><\/p>\n<h3 id=\"h-text-all-caps\"><a class=\"heading-anchor\" href=\"https:\/\/dmytroshuba.com\/blog\/complete-guide-to-rich-text-in-jetpack-compose#h-text-all-caps\" aria-hidden=\"true\">#<\/a> Text all caps<\/h3>\n<p>Just make the input text uppercase:<br \/><code>text = \"Hello world\".uppercase()<\/code><\/p>\n<h3 id=\"h-add-underline\"><a class=\"heading-anchor\" href=\"https:\/\/dmytroshuba.com\/blog\/complete-guide-to-rich-text-in-jetpack-compose#h-add-underline\" aria-hidden=\"true\">#<\/a> Add underline<\/h3>\n<p>TextDecoration draws a line for your text.<\/p>\n<ul><li><code>TextDecoration.Udnerline<\/code> - draws it right below;<\/li>\n<li><code>TextDecoration.LineThrough<\/code> - draws a line right through the content;<\/li>\n<li><code>TextDecoration.None<\/code> - as the name suggests - does nothing.<\/li>\n<\/ul><p><strong>⏭️ tldr:<\/strong> <code>textDecoration = TextDecoration.Udnerline<\/code><\/p>\n<p><img src=\"https:\/\/dmytroshuba.com\/blog\/hw4.png\" alt=\"hello world image text decoration\" referrerpolicy=\"no-referrer\" \/><\/p>\n<h3 id=\"h-make-text-bold\"><a class=\"heading-anchor\" href=\"https:\/\/dmytroshuba.com\/blog\/complete-guide-to-rich-text-in-jetpack-compose#h-make-text-bold\" aria-hidden=\"true\">#<\/a> Make text bold<\/h3>\n<p>Text now has weight! It gives a whole range of values from Thin &amp; ExtraLight to Bold &amp; ExtraBold!<br \/>You can set how bold the text is in glyphs(“unit” for font weight) or by simply using aliases like:<\/p>\n<ul><li><code>FontWeight.Thin<\/code><\/li>\n<li><code>FontWeight.ExtraLight<\/code><\/li>\n<li><code>FontWeight.Light<\/code><\/li>\n<li><code>FontWeight.Normal<\/code><\/li>\n<li><code>FontWeight.Medium<\/code><\/li>\n<li><code>FontWeight.SemiBold<\/code><\/li>\n<li><code>FontWeight.Bold<\/code><\/li>\n<li><code>FontWeight.ExtraBold<\/code><\/li>\n<li><code>FontWeight.Black<\/code><\/li>\n<\/ul><p><strong>⏭️ tldr:<\/strong> <code>fontWeight = FontWeight.ExtraBold<\/code><\/p>\n<p><img src=\"https:\/\/dmytroshuba.com\/blog\/hw5.png\" alt=\"hello world image font weight\" referrerpolicy=\"no-referrer\" \/><\/p>\n<p>Don’t be confused with the <code>fontStyle<\/code> parameter though!<\/p>\n<h3 id=\"h-make-text-italic\"><a class=\"heading-anchor\" href=\"https:\/\/dmytroshuba.com\/blog\/complete-guide-to-rich-text-in-jetpack-compose#h-make-text-italic\" aria-hidden=\"true\">#<\/a> Make text italic<\/h3>\n<p>Now fontStyle is very simple. It has only 2 options:<\/p>\n<ul><li><code>FontStyle.Italic<\/code> - applies italic to the text.<\/li>\n<li><code>FontStyle.Normal<\/code> - keeps the original text.<\/li>\n<\/ul><p><strong>⏭️ tldr:<\/strong> <code>fontStyle = FontStyle.Italic<\/code><\/p>\n<p><img src=\"https:\/\/dmytroshuba.com\/blog\/hw6.png\" alt=\"hello world image font style\" referrerpolicy=\"no-referrer\" \/><\/p>\n<h3 id=\"h-now-briefly-about-some-other-properties\"><a class=\"heading-anchor\" href=\"https:\/\/dmytroshuba.com\/blog\/complete-guide-to-rich-text-in-jetpack-compose#h-now-briefly-about-some-other-properties\" aria-hidden=\"true\">#<\/a> Now briefly about some other properties:<\/h3>\n<p><code>letterSpacing<\/code> - specifies the amount of space between each character.<br \/><code>lineHeight<\/code> - specifies line height for the text paragraph.<br \/><code>softWrap<\/code> - specifies if the text breaks at soft line breaks.<br \/><code>onTextLayout<\/code> - a callback to trigger when text layout is calculated (<a href=\"https:\/\/developer.android.com\/reference\/kotlin\/androidx\/compose\/ui\/text\/TextLayoutResult\">more details<\/a>).<\/p>\n<h3 id=\"h-recap\"><a class=\"heading-anchor\" href=\"https:\/\/dmytroshuba.com\/blog\/complete-guide-to-rich-text-in-jetpack-compose#h-recap\" aria-hidden=\"true\">#<\/a> <strong>Recap<\/strong><\/h3>\n<ul><li>Text composable has common basic properties for styling<\/li>\n<li>Use <code>fontWeight<\/code> to make text Bold and <code>fontStyle<\/code> to make it Italic<\/li>\n<\/ul><h2 id=\"h-update-text-appearance-with-textstyle\"><a class=\"heading-anchor\" href=\"https:\/\/dmytroshuba.com\/blog\/complete-guide-to-rich-text-in-jetpack-compose#h-update-text-appearance-with-textstyle\" aria-hidden=\"true\">#<\/a> Update text appearance with TextStyle<\/h2>\n<p><code>Text<\/code> properties provide common styling attributes. However, this approach has 2 major drawbacks:<\/p>\n<ol><li>It’s tedious to fill properties manually every time.<\/li>\n<li>It has a limited number of attributes and is missing other properties like text background color or shadows.<\/li>\n<li>Not very convenient to reuse.<\/li>\n<\/ol><h3 id=\"h-applying-1-style-to-many-texts-in-a-single-line\"><a class=\"heading-anchor\" href=\"https:\/\/dmytroshuba.com\/blog\/complete-guide-to-rich-text-in-jetpack-compose#h-applying-1-style-to-many-texts-in-a-single-line\" aria-hidden=\"true\">#<\/a> Applying 1 style to many texts in a single line<\/h3>\n<p>💡 TextStyle is a styling configuration. It can be reused easily and its properties are all attributes that a text can have by default.<\/p>\n<p>When creating a <code>TextStyle<\/code> you can either fill out its properties directly or initialize it with <code>SpanStyle<\/code> and <code>ParagraphStyle<\/code> whose parameters <code>TextStyle<\/code> takes anyways.<\/p>\n<ul><li><code>SpanStyle<\/code> parameters affect text itself.<\/li>\n<li><code>ParagraphStyle<\/code> adjusts the paragraph or “the lines” text is on.<\/li>\n<\/ul><p>Just like we could use styles from Android resource for our Text Views we now can reuse one TextStyle in many composables. So this XML style resource:<\/p>\n<pre class=\"language-xml\">    &lt;style name=\"TextAppearance.MyApp.Medium\" parent=\"TextAppearance.AppCompat.Medium\"&gt;<br \/>&lt;item name=\"android:textSize\"&gt;32sp&lt;\/item&gt;<br \/>&lt;item name=\"android:color\"&gt;@color\/black&lt;\/item&gt;<br \/>&lt;item name=\"background\"&gt;@color\/gray&lt;\/item&gt;<br \/>&lt;\/style&gt;<\/pre>\n<p>Becomes this:<\/p>\n<pre class=\"language-kotlin\">    val medium = SpanStyle(<br \/>fontSize = 32.sp,<br \/>color = Color.Black,<br \/>background = Color.Gray<br \/>)<\/pre>\n<p>If we go further, we can organize it in a way that we can reuse it later as a part of our app theme! So in this case we could collect other text styles under <code>TextAppearance<\/code> object:<\/p>\n<pre class=\"language-kotlin\">object TextAppearance {<br \/>val Medium = SpanStyle(<br \/>fontSize = 32.sp,<br \/>color = Color.Black,<br \/>background = Color.Gray<br \/>)<br \/>}<\/pre>\n<p>Check out my article on <a href=\"https:\/\/dmytroshuba.com\/blog\/how-to-create-a-custom-theme-in-jetpack-compose\/\">how to create custom themes in Jetpack Compose<\/a> to see more on theming!<\/p>\n<h3 id=\"h-recap-1\"><a class=\"heading-anchor\" href=\"https:\/\/dmytroshuba.com\/blog\/complete-guide-to-rich-text-in-jetpack-compose#h-recap-1\" aria-hidden=\"true\">#<\/a> <strong>Recap<\/strong><\/h3>\n<ul><li>TextStyle extends the number of properties you can style your text by;<\/li>\n<li>It is possible to reuse the same TextStyle for multiple <code>Text<\/code> composable;<\/li>\n<li>You can generate TextStyle with different combinations of <code>SpanStyle<\/code> and <code>ParagraphStyle<\/code>. The first tweaks text content appearance, the second changes paragraph settings.<\/li>\n<\/ul><h2 id=\"h-full-customization-with-annotatedstring\"><a class=\"heading-anchor\" href=\"https:\/\/dmytroshuba.com\/blog\/complete-guide-to-rich-text-in-jetpack-compose#h-full-customization-with-annotatedstring\" aria-hidden=\"true\">#<\/a> Full customization with AnnotatedString<\/h2>\n<p>What makes AnnotatedString different from <code>TextStyle<\/code> and <code>Text<\/code> properties is that their parameters affect the entire text. AnnotatedString allows to tweak the apperance of its certain parts and can even add metadata to it.<\/p>\n<h3 id=\"h-hyperlink-example\"><a class=\"heading-anchor\" href=\"https:\/\/dmytroshuba.com\/blog\/complete-guide-to-rich-text-in-jetpack-compose#h-hyperlink-example\" aria-hidden=\"true\">#<\/a> Hyperlink example<\/h3>\n<p>Let’s say we want to make a hyperlink and open a website when we click on it. Theoretically, we could set the blue color to text and add <code>Modifier.clickable<\/code> to open a static link in a browser.<\/p>\n<p>But.<\/p>\n<p>Our entire content is plain text. It’s just a few links here and there that should be highlighted and clickable.<br \/>AnnotatedString is the perfect tool to make a hyperlink in Jetpack compose in this case! Let’s implement this use case to see it.<\/p>\n<h5 id=\"h-implementing-a-hyperlink\"><a class=\"heading-anchor\" href=\"https:\/\/dmytroshuba.com\/blog\/complete-guide-to-rich-text-in-jetpack-compose#h-implementing-a-hyperlink\" aria-hidden=\"true\">#<\/a> Implementing a hyperlink<\/h5>\n<p>First, let’s create some constants and add a <code>ClickableText<\/code> composable. It requires us to specify the <code>text<\/code> and <code>onClick<\/code> parameters by default.<\/p>\n<pre class=\"language-kotlin\">private const val TAG_URL = \"ANNOTATION_TAG_URL\"<br \/>@Composable<br \/>fun MainText() {<br \/>val uriHandler = UriHandlerAmbient.current \/\/ utility to open links in a browser    <br \/>val text = \"Here is my website.\" \/\/ \"my website\" contains a link<br \/>val link = \"https:\/\/dmytroshuba.com\/\"<br \/>val annotatedText = attachLink(<br \/>source = text,<br \/>segment = \"my website\",<br \/>link = link<br \/>)<br \/>ClickableText(<br \/>text = annotatedText,<br \/>onClick = { \/* implementation *\/}<br \/>)<br \/>}<\/pre>\n<p><code>onClick<\/code> when triggered provides the index of the character that a user clicked on. It’s important as that’s the way we can verify that there’s a link.<\/p>\n<p>Not let’s have a closer look at the <code>attachLink<\/code> function:<\/p>\n<pre class=\"language-kotlin\">fun attachLink(<br \/>source: String,<br \/>segment: String,<br \/>link: String<br \/>): AnnotatedString {<br \/>val builder = AnnotatedString.Builder() \/\/ builder to attach metadata(link)<br \/>builder.append(source) \/\/ load current text into the builder<br \/>val start = source.indexOf(segment) \/\/ get the start of the span \"my website\"<br \/>val end = start + segment.length \/\/ get the end of the span<br \/>val hyperlinkStyle = SpanStyle(<br \/>color = Color.Blue,<br \/>textDecoration = TextDecoration.Underline<br \/>) \/\/ create a hyperlink text style<br \/>builder.addStyle(hyperlinkStyle, start, end) \/\/ style \"my website\" to make it look like a link<br \/>builder.addStringAnnotation(TAG_URL, link, start, end) \/\/ attach the link to the span. We can then access it via the TAG_URL<br \/>return builder.toAnnotatedString()<br \/>}<\/pre>\n<p>AnnotatedString contains the text. We styled “my website” substring in it and added a url “behind its characters”.<br \/>Now let’s get back to the <code>ClikableText<\/code>.<\/p>\n<pre class=\"language-kotlin\">    ClickableText(<br \/>text = annotatedString,<br \/>onClick = {<br \/>annotatedString<br \/>.getStringAnnotations(TAG_URL, it, it)<br \/>.firstOrNull()<br \/>?.let { url -&gt; uriHandler.openUri(url.item) }<br \/>}<\/pre>\n<p>When clicking on the text we call <code>onClick<\/code> callback and get the index of the character that was clicked.<\/p>\n<p>Then what we do is we try to extract the url with <code>TAG_URL<\/code> from the character behind the index. If the character is the one that is behind the span with “my website” text then we receive the link and open it in a browser using uriHandler.<\/p>\n<p><img src=\"https:\/\/dmytroshuba.com\/blog\/my%20website.png\" alt=\"my website text picture\" referrerpolicy=\"no-referrer\" \/><\/p>\n<h3 id=\"h-extra-dynamic-parsing-example\"><a class=\"heading-anchor\" href=\"https:\/\/dmytroshuba.com\/blog\/complete-guide-to-rich-text-in-jetpack-compose#h-extra-dynamic-parsing-example\" aria-hidden=\"true\">#<\/a> Extra: dynamic parsing example<\/h3>\n<p>Using AnnotatedString we can pretty much automate the styling and annotation of our content.<br \/>One of my recent releases is <a href=\"https:\/\/github.com\/DmytroShuba\/DailyTags\">DailyTags library<\/a>. It can parse markdown, some HTML and even custom markups! Using AnnotatedString it could both style individual segments of text and add metadata (such as url) on the fly as it splits the entire content into small chunks called nodes.<br \/>In fact, it worked pretty much the same way as in the hyperlink example.<\/p>\n<h3 id=\"h-recap-2\"><a class=\"heading-anchor\" href=\"https:\/\/dmytroshuba.com\/blog\/complete-guide-to-rich-text-in-jetpack-compose#h-recap-2\" aria-hidden=\"true\">#<\/a> <strong>Recap<\/strong><\/h3>\n<ul><li>Using AnnotatedString we can style individual parts of text independently.<\/li>\n<li>AnnotatedString allows us to add metadata to text. It can be a url, an ID, etc.<\/li>\n<li>AnnotatedString is a great<\/li>\n<\/ul><h2 id=\"h-qa\"><a class=\"heading-anchor\" href=\"https:\/\/dmytroshuba.com\/blog\/complete-guide-to-rich-text-in-jetpack-compose#h-qa\" aria-hidden=\"true\">#<\/a> Q&amp;A<\/h2>\n<h3 id=\"h-spannablestring-vs-annotatedstring\"><a class=\"heading-anchor\" href=\"https:\/\/dmytroshuba.com\/blog\/complete-guide-to-rich-text-in-jetpack-compose#h-spannablestring-vs-annotatedstring\" aria-hidden=\"true\">#<\/a> SpannableString vs AnnotatedString<\/h3>\n<p>SpannableString is used for decorating text in Android View while AnnotatedString is a native way to do so in Jetpack Compose.<br \/>In a nutshell, they’re pretty much the same, but made for different UI systems.<\/p>\n<h3 id=\"h-the-entire-text-row-is-clickable-how-do-i-make-only-text-clickable%3F\"><a class=\"heading-anchor\" href=\"https:\/\/dmytroshuba.com\/blog\/complete-guide-to-rich-text-in-jetpack-compose#h-the-entire-text-row-is-clickable-how-do-i-make-only-text-clickable%3F\" aria-hidden=\"true\">#<\/a> The entire text row is clickable. How do I make only text Clickable?<\/h3>\n<p>The problem is that your Text composable takes more width\/height than it needs for its content.<br \/>Wrap it into a <code>Box<\/code> and center the content inside it. Now <code>Box<\/code> should cover extra space while <code>Text<\/code> boundaries are right next to its content.<\/p>\n<h3 id=\"h-how-to-make-3-dots-in-the-end-of-a-string-if-it%E2%80%99s-too-long-in-jetpack-compose%3F\"><a class=\"heading-anchor\" href=\"https:\/\/dmytroshuba.com\/blog\/complete-guide-to-rich-text-in-jetpack-compose#h-how-to-make-3-dots-in-the-end-of-a-string-if-it%E2%80%99s-too-long-in-jetpack-compose%3F\" aria-hidden=\"true\">#<\/a> How to make 3 dots in the end of a string if it’s too long in Jetpack Compose?<\/h3>\n<p>Add ellipsis overflow mode in the text properties:<\/p>\n<pre class=\"language-kotlin\">Text(<br \/>text = \"...\",<br \/>overflow = TextOverflow.Ellipsis<br \/>)<\/pre>\n<h3 id=\"h-how-to-parse-html-text-in-jetpack-compose%3F\"><a class=\"heading-anchor\" href=\"https:\/\/dmytroshuba.com\/blog\/complete-guide-to-rich-text-in-jetpack-compose#h-how-to-parse-html-text-in-jetpack-compose%3F\" aria-hidden=\"true\">#<\/a> How to parse HTML text in Jetpack Compose?<\/h3>\n<p>HTML is a markup and the real question is what’s the tool to parse it. One way to do so is with <a href=\"https:\/\/stackoverflow.com\/a\/68397058\/17071238\">AndroidView<\/a>.<br \/>Another way to do so is using <a href=\"https:\/\/github.com\/DmytroShuba\/DailyTags\">DailyTags library<\/a> as it supports HTML text tags.<\/p>\n<h2 id=\"h-resources\"><a class=\"heading-anchor\" href=\"https:\/\/dmytroshuba.com\/blog\/complete-guide-to-rich-text-in-jetpack-compose#h-resources\" aria-hidden=\"true\">#<\/a> Resources<\/h2>\n<p><a href=\"https:\/\/developer.android.com\/jetpack\/compose\/text\">Jetpack Compose Text<\/a><br \/><a href=\"https:\/\/dmytroshuba.com\/blog\/how-to-create-a-custom-theme-in-jetpack-compose\/\">How to create a custom theme<\/a><br \/><a href=\"https:\/\/developer.android.com\/reference\/kotlin\/androidx\/compose\/ui\/text\/TextStyle\">Text Style documentation<\/a><br \/><a href=\"https:\/\/alexzh.com\/jetpack-compose-styling-text\/\">Jetpack Compose styling text by Alex Zhukovich<\/a><\/p>",
				"created_at": "2022-02-27T18:59:44+0000",
				"updated_at": "2022-02-27T18:59:44+0000",
				"published_at": "2022-02-23T00:00:00+0000",
				"published_by": [
					"Dmytro Shuba"
				],
				"starred_at": null,
				"annotations": [],
				"mimetype": "text\/html; charset=UTF-8",
				"language": "en",
				"reading_time": 10,
				"domain_name": "dmytroshuba.com",
				"preview_picture": "https:\/\/dmytroshuba.com\/blog\/complete-guide-to-rich-text-in-jetpack-compose\/plain-text-and-rich-text.png",
				"http_status": "200",
				"headers": {
					"age": "0",
					"cache-control": "public, max-age=0, must-revalidate",
					"content-type": "text\/html; charset=UTF-8",
					"date": "Sun, 27 Feb 2022 18:59:44 GMT",
					"etag": "\"cb99ca1cf1c73dc9710f98a50cfd0f75-ssl\"",
					"permissions-policy": "interest-cohort=()",
					"referrer-policy": "no-referrer-when-downgrade",
					"server": "Netlify",
					"strict-transport-security": "max-age=31536000",
					"x-content-type-options": "nosniff",
					"x-frame-options": "DENY",
					"x-nf-request-id": "01FWY8V3Q9Y31QATA5852DBSBH",
					"x-xss-protection": "1; mode=block",
					"transfer-encoding": "chunked"
				},
				"_links": {
					"self": {
						"href": "\/api\/entries\/5"
					}
				}
			},
			{
				"is_archived": 0,
				"is_starred": 0,
				"user_name": "justin",
				"user_email": "justinbrooks@fastmail.com",
				"user_id": 2,
				"tags": [],
				"is_public": false,
				"id": 4,
				"uid": null,
				"title": "Exploring Kotlin’s Context Receivers",
				"url": "https:\/\/nomisrev.github.io\/context-receivers\/",
				"hashed_url": "986d8713a295da4473f1ce0022e99f9baac1fb26",
				"origin_url": null,
				"given_url": "https:\/\/nomisrev.github.io\/context-receivers\/",
				"hashed_given_url": "986d8713a295da4473f1ce0022e99f9baac1fb26",
				"archived_at": null,
				"content": "<p>Last week a long awaited feature was released as a preview in Kotlin 1.6.20-M1. In this blogpost we’re going to explore what <em>Context Receivers<\/em> are, and some benefits and patterns they’ll enable. To try it out in your IDE, follow this <a href=\"https:\/\/kotlinlang.org\/docs\/install-eap-plugin.html\">guide<\/a><\/p><p>Currently, the only <em>receiver<\/em> we can define in Kotlin is through <a href=\"https:\/\/kotlinlang.org\/docs\/extensions.html\">extension functions<\/a>. In the following function, <code class=\"language-plaintext highlighter-rouge\">fun List&lt;Int&gt;.sum(): Int<\/code>, we call <code class=\"language-plaintext highlighter-rouge\">List&lt;Int&gt;<\/code> the <em>receiver<\/em> of the function.<\/p><p>We can call the above function as a member function on the type <code class=\"language-plaintext highlighter-rouge\">List&lt;Int&gt;<\/code>. Note that for a custom defined extension function it requires an import, but not for most functions from the Kotlin Std.<\/p><div class=\"language-kotlin highlighter-rouge highlight\"><pre>listOf(1, 2, 3).sum()\n<\/pre><\/div><h2 id=\"what-are-context-receivers\">What are Context Receivers<\/h2><p>With <em>Context Receivers<\/em> we can introduce <em>additional<\/em> receivers. Let’s take another function from the Kotlin Std <a href=\"https:\/\/kotlinlang.org\/api\/latest\/jvm\/stdlib\/kotlin.collections\/sorted-with.html\"><code class=\"language-plaintext highlighter-rouge\">List&lt;A&gt;.sortedWith(comparator: Comparator&lt;A&gt;): List&lt;A&gt;<\/code><\/a> and refactor it to use <em>context receivers<\/em>.<\/p><p>With context receivers we can redefine this function <em>without<\/em> the <code class=\"language-plaintext highlighter-rouge\">Comparator&lt;A&gt;<\/code> argument in the parameter list. Where we call <code class=\"language-plaintext highlighter-rouge\">Comparator&lt;A&gt;<\/code> the <em>Context receiver<\/em>, and <code class=\"language-plaintext highlighter-rouge\">List&lt;A&gt;<\/code> the <em>Extension Receiver<\/em><\/p><div class=\"language-kotlin highlighter-rouge highlight\"><pre>context(Comparator&lt;A&gt;)\nfun &lt;A&gt; List&lt;A&gt;.sort(): List&lt;A&gt; =\n  sortedWith(this@Comparator)\n<\/pre><\/div><p>We can now call this function <em>only<\/em> from within the <em>context<\/em> of <code class=\"language-plaintext highlighter-rouge\">Comparator&lt;A&gt;<\/code>, so we can use Kotlin’s <a href=\"https:\/\/kotlinlang.org\/docs\/scope-functions.html\">scope functions<\/a> to bring <code class=\"language-plaintext highlighter-rouge\">Comparator&lt;A&gt;<\/code> into <em>context<\/em>.<\/p><div class=\"language-kotlin highlighter-rouge highlight\"><pre>with(Comparator.naturalOrder&lt;Int&gt;()) {\n  listOf(3, 5, 1).sort() \/\/ [1, 3, 5]\n}\nComparator.naturalOrder&lt;Int&gt;().run {\n  listOf(4, 6, 2, 1).sort() \/\/ [1, 2, 4, 6]\n}\n<\/pre><\/div><p>What happens if we mark a function with <code class=\"language-plaintext highlighter-rouge\">context(Comparator&lt;A&gt;)<\/code>, is that it gets an implicit argument that the compiler automatically fills in for us when we’re in its scope. If we look at the JVM signature we will see <code class=\"language-plaintext highlighter-rouge\">public &lt;A&gt; List&lt;A&gt; sort(List&lt;A&gt; extension, Comparator&lt;A&gt; comporator)<\/code>, where <em>both<\/em> receivers are actually regular arguments on the JVM and Kotlin takes care of passing them around for us.<\/p><h2 id=\"context-receivers-in-action\">Context Receivers in action<\/h2><p>So now that we have an understanding of how <em>Context Receivers<\/em> work, and what terminology is involved, lets take a look at some cool patterns.<\/p><p>In a previous blogposts we’ve discussed <a href=\"https:\/\/nomisrev.github.io\/continuation-monad-in-kotlin\/\"><code class=\"language-plaintext highlighter-rouge\">Effect<\/code><\/a> &amp; <a href=\"https:\/\/nomisrev.github.io\/inline-and-suspend\/\"><code class=\"language-plaintext highlighter-rouge\">inline<\/code> &amp; <code class=\"language-plaintext highlighter-rouge\">suspend<\/code><\/a>. Currently, in Kotlin with Arrow we’d write a function like this <code class=\"language-plaintext highlighter-rouge\">fun readFile(path: String?): Effect&lt;FileError, Content&gt; = effect { ... }<\/code>. We’re forced to have a wrapper in the return type, <code class=\"language-plaintext highlighter-rouge\">Effect&lt;FileError, Content&gt;<\/code>, to signal to the type system that the function results in <code class=\"language-plaintext highlighter-rouge\">Content<\/code> but can fail with <code class=\"language-plaintext highlighter-rouge\">FileError<\/code>.<\/p><p>With <em>Context Receivers<\/em> we can write code <em>inside the effect context<\/em>, so we can rewrite the function as:<\/p><div class=\"language-kotlin highlighter-rouge highlight\"><pre>@JvmInline value class Content(val body: List&lt;String&gt;)\nsealed interface FileError\n@JvmInline value class SecurityError(val msg: String?) : FileError\n@JvmInline value class FileNotFound(val path: String) : FileError\nobject EmptyPath : FileError {\n  override fun toString() = \"EmptyPath\"\n}\ncontext(EffectScope&lt;FileError&gt;)\nsuspend fun readFile(path: String?): Content {\n  TODO(\"All functionality from effect { } available here\")\n}\n<\/pre><\/div><p>So we can now write functions like we love in Kotlin, <code class=\"language-plaintext highlighter-rouge\">suspend fun<\/code> with the happy-path in the return type. There are two ways that we can call this function:<\/p><div class=\"language-kotlin highlighter-rouge highlight\"><pre>val res: Effect&lt;FileError, Content&gt; = effect {\n  readFile(\"\")\n}\ncontext(EffectScope&lt;FileError&gt;)\nsuspend fun allFiles(vararg path: String): List&lt;Content&gt; =\n  path.map { readFile(it) }\n<\/pre><\/div><p>However, we can also introduce new context receivers as we go along in our program, for example logging.<\/p><div class=\"language-kotlin highlighter-rouge highlight\"><pre>fun interface Logger {\n  suspend fun info(msg: String): Unit\n  suspend fun warn(msg: String): Unit\n  suspend fun error(msg: String): Unit\n}\ncontext(EffectScope&lt;FileError&gt;, Logger)\nsuspend fun allFiles(vararg path: String): List&lt;Content&gt; {\n  info(\"Processing files\")\n  return path.map { readFile(it) }\n}\nval res2: Effect&lt;FileError, Content&gt; = with(Logger(::println)) {\n  effect {\n    allFiles(\"path1\", \"path2\")\n  }\n}\n<\/pre><\/div><p>Kotlin <em>Context Receivers<\/em> enable a popular pattern in FP called “Effect Handlers”, which refers to the technique of constraining functionality to an <code class=\"language-plaintext highlighter-rouge\">interface<\/code> and enabling its functionality by bringing it into <em>scope<\/em>. In the example above the <code class=\"language-plaintext highlighter-rouge\">Logger<\/code> handler enables the <code class=\"language-plaintext highlighter-rouge\">info<\/code>, <code class=\"language-plaintext highlighter-rouge\">warn<\/code> and <code class=\"language-plaintext highlighter-rouge\">error<\/code> functionality. We can resolve the _EffectScope_ part of our _context_ but leave the `Logger` handler as _context_.<\/p><div class=\"language-kotlin highlighter-rouge highlight\"><pre>context(Logger)\nsuspend fun allFilesOrEmpty(vararg path: String): List&lt;Content&gt; =\n  effect&lt;FileError, List&lt;Content&gt;&gt; {\n    allFiles(*path)\n  }.orElse { emptyList() }\n<\/pre><\/div><p>Here we were able to make resolve the <code class=\"language-plaintext highlighter-rouge\">EffectScope&lt;FileError&gt;<\/code> context, by wrapping in <code class=\"language-plaintext highlighter-rouge\">effect<\/code> and resolving the error by defaulting to an <code class=\"language-plaintext highlighter-rouge\">emptyList<\/code>. This makes it very easy to solve errors across certain layers in your application, in case you’d want to resolve <code class=\"language-plaintext highlighter-rouge\">DbError<\/code> before consuming them in the <em>service<\/em> layer.<\/p><p>Let’s look at a quick example of what that might look like:<\/p><div class=\"language-kotlin highlighter-rouge highlight\"><pre>data class User(val uuid: UUID)\ndata class DbError(val error: Throwable)\ninterface Users {\n  context(EffectScope&lt;DbError&gt;)\n  suspend fun fetchUser(uuid: UUID): User = User(uuid)\n  companion object Default : Users\n}\ndata class Profile(val uuid: UUID)\ndata class NetworkError(val error: Throwable)\ninterface Profiles {\n  context(EffectScope&lt;NetworkError&gt;)\n  suspend fun fetchProfile(user: User): Profile = Profile(user.uuid)\n  companion object Default : Profiles\n}\ncontext(EffectScope&lt;DbError&gt;, EffectScope&lt;NetworkError&gt;, Profiles, Users)\nsuspend fun service(): Profile {\n  val user = fetchUser(UUID.randomUUID())\n  return fetchProfile(user)\n}\n<\/pre><\/div><p>Here we have defined a <code class=\"language-plaintext highlighter-rouge\">service<\/code> function, that talks to the <code class=\"language-plaintext highlighter-rouge\">Persistence<\/code> layer, and the <code class=\"language-plaintext highlighter-rouge\">Network<\/code> layer. Both layers have their own error hierarchy, and we would like to keep them separate, so we don’t have to create a single error hierarchy for all layers. This also makes it more explicit from which layers the error came from.<\/p><div class=\"language-kotlin highlighter-rouge highlight\"><pre>suspend fun program(): Profile? = with(Profiles.Default) {\n  with(Users.Default) {\n    effect&lt;DbError, Profile?&gt; {\n      effect&lt;NetworkError, Profile?&gt; {\n        service(Persistence, Network)\n      }.tapLeft { networkError -&gt; println(networkError) }\n        .orNull()\n    }.tapLeft { dbError -&gt; println(dbError) }\n      .orNull()\n  }\n}\n<\/pre><\/div><h2 id=\"conclusion\">Conclusion<\/h2><p>Context receivers give us an elegant way of constraining functions to which context they can be called from. It allows for composing <em>context<\/em> without requiring inheritance, and bringing them into <em>scope<\/em>\/<em>context<\/em> by using Kotlin’s <a href=\"https:\/\/kotlinlang.org\/docs\/scope-functions.html\">scope functions<\/a>.<\/p><p>The biggest improvement I’m still hoping for is <code class=\"language-plaintext highlighter-rouge\">with<\/code> that allows multiple parameters, that would allow us to flatten a lot of code.<\/p><div class=\"language-kotlin highlighter-rouge highlight\"><pre>with(Users.Default, Profiles.Default) {\n  \/\/ Users &amp; Profiles available here\n}\n<\/pre><\/div><p>After having tried context receivers I cannot wait for them to become stable, and will probably start using them in all my toy projects already and perhaps even in some production code.<\/p><p>Thanks for reading my blog, and thoughts on Kotlin’s context receivers. Hope you enjoyed it!<\/p><p>A Gradle project with the code from this blogpost can be found on GitHub <a href=\"https:\/\/github.com\/nomisRev\/context-receivers-blog\">here<\/a>. If you want to try it out do not forget to set up your IDEA as well, instructions can be found <a href=\"https:\/\/kotlinlang.org\/docs\/install-eap-plugin.html\">here<\/a>.<\/p>",
				"created_at": "2022-02-21T14:59:36+0000",
				"updated_at": "2022-02-21T14:59:36+0000",
				"published_at": "2022-02-17T00:00:00+0000",
				"published_by": [
					"Simon Vergauwen"
				],
				"starred_at": null,
				"annotations": [],
				"mimetype": "text\/html; charset=utf-8",
				"language": "en_US",
				"reading_time": 5,
				"domain_name": "nomisrev.github.io",
				"preview_picture": "http:\/\/nomisrev.github.iohttps\/\/avatars.githubusercontent.com\/u\/12424668?v=4",
				"http_status": "200",
				"headers": {
					"connection": "keep-alive",
					"content-length": "30758",
					"server": "GitHub.com",
					"content-type": "text\/html; charset=utf-8",
					"permissions-policy": "interest-cohort=()",
					"last-modified": "Thu, 17 Feb 2022 08:39:09 GMT",
					"access-control-allow-origin": "*",
					"etag": "\"620e09ad-7826\"",
					"expires": "Sun, 20 Feb 2022 14:06:27 GMT",
					"cache-control": "max-age=600",
					"x-proxy-cache": "MISS",
					"x-github-request-id": "4406:69EA:EF9AA8:14D52CA:6212488B",
					"accept-ranges": "bytes",
					"date": "Mon, 21 Feb 2022 14:59:36 GMT",
					"via": "1.1 varnish",
					"age": "0",
					"x-served-by": "cache-fty21324-FTY",
					"x-cache": "MISS",
					"x-cache-hits": "0",
					"x-timer": "S1645455576.375103,VS0,VE18",
					"vary": "Accept-Encoding",
					"x-fastly-request-id": "4a049b6bbf3f6bba0f8978c554eb56d7ba15789a"
				},
				"_links": {
					"self": {
						"href": "\/api\/entries\/4"
					}
				}
			},
			{
				"is_archived": 0,
				"is_starred": 0,
				"user_name": "justin",
				"user_email": "justinbrooks@fastmail.com",
				"user_id": 2,
				"tags": [],
				"is_public": false,
				"id": 3,
				"uid": null,
				"title": "Bloom Filters by Example",
				"url": "https:\/\/llimllib.github.io\/bloomfilter-tutorial\/",
				"hashed_url": "9c43a17acf04a6a8a1b07328515a38c2289af34a",
				"origin_url": null,
				"given_url": "https:\/\/llimllib.github.io\/bloomfilter-tutorial\/",
				"hashed_given_url": "9c43a17acf04a6a8a1b07328515a38c2289af34a",
				"archived_at": null,
				"content": "<a href=\"https:\/\/llimllib.github.io\/zh_CN\/\">简体中文<\/a><p>A Bloom filter is a data structure designed to tell you, rapidly and memory-efficiently, whether an element is present in a set.<\/p><p>The price paid for this efficiency is that a Bloom filter is a <strong>probabilistic data structure<\/strong>: it tells us that the element either <em>definitely is not<\/em> in the set or <em>may be<\/em> in the set.<\/p><p>The base data structure of a Bloom filter is a <strong>Bit Vector<\/strong>. Here's a small one we'll use to demonstrate:<\/p><p>Each empty cell in that table represents a bit, and the number below it its index. To add an element to the Bloom filter, we simply hash it a few times and set the bits in the bit vector at the index of those hashes to 1.<\/p><p>It's easier to see what that means than explain it, so enter some strings and see how the bit vector changes. Fnv and Murmur are two simple hash functions:<\/p><div id=\"addstring\" class=\"insetbox\"><p>Enter a string: <\/p><p>fnv:<br \/>murmur:<\/p><p>Your set: []<\/p><\/div><p>When you add a string, you can see that the bits at the index given by the hashes are set to 1. I've used the color green to show the newly added ones, but any colored cell is simply a 1.<\/p><p>To test for membership, you simply hash the string with the same hash functions, then see if those values are set in the bit vector. If they aren't, you know that the element isn't in the set. If they are, you only know that it <em>might<\/em> be, because another element or some combination of other elements could have set the same bits. Again, let's demonstrate:<\/p><div id=\"testmembership\" class=\"insetbox\"><p>Test an element for membership: <\/p><p>fnv:<br \/>murmur:<\/p><p>Is the element in the set? no<\/p><p>Probability of a false positive: 0%<\/p><\/div><p>And that's the basics of a bloom filter!<\/p><p>Before I write a bit more about Bloom filters, a disclaimer: I've never used them in production. Don't take my word for it. All I intend to do is give you general ideas and pointers to where you can find out more.<\/p><p>In the following text, we will refer to a Bloom filter with <em>k<\/em> hashes, <em>m<\/em> bits in the filter, and <em>n<\/em> elements that have been inserted.<\/p><h3>Hash Functions<\/h3><p>The hash functions used in a Bloom filter should be <strong><a href=\"http:\/\/en.wiktionary.org\/wiki\/independent_function\">independent<\/a><\/strong> and <strong><a href=\"http:\/\/en.wikipedia.org\/wiki\/Uniform_distribution_(discrete)\">uniformly distributed<\/a><\/strong>. They should also be as fast as possible (cryptographic hashes such as sha1, though widely used therefore are not very good choices).<\/p><p>Examples of fast, simple hashes that are independent enough<sup><a href=\"https:\/\/llimllib.github.io\/bloomfilter-tutorial#footnote3\">3<\/a><\/sup> include <a href=\"https:\/\/sites.google.com\/site\/murmurhash\/\">murmur<\/a>, <a href=\"https:\/\/github.com\/Cyan4973\/xxHash\">xxHash<\/a>, the <a href=\"http:\/\/isthe.com\/chongo\/tech\/comp\/fnv\/\">fnv<\/a> series of hashes, and <a href=\"https:\/\/web.archive.org\/web\/20061030103559\/http:\/\/www.concentric.net\/~Ttwang\/tech\/inthash.htm\">HashMix<\/a>.<\/p><p>To see the difference that a faster-than-cryptographic hash function can make, <a href=\"https:\/\/github.com\/bitly\/dablooms\/pull\/19\">check out this story<\/a> of a ~800% speedup when switching a bloom filter implementation from md5 to murmur.<\/p><p>In a short survey of bloom filter implementations:<\/p><ul><li><a href=\"https:\/\/chromium.googlesource.com\/chromium\/chromium\/+\/refs\/heads\/main\/chrome\/browser\/safe_browsing\/bloom_filter.cc\">Chromium<\/a> uses <a href=\"https:\/\/web.archive.org\/web\/20061030103559\/http:\/\/www.concentric.net\/~Ttwang\/tech\/inthash.htm\">HashMix<\/a>. (also, <a href=\"https:\/\/web.archive.org\/web\/20160306232658\/http:\/\/blog.alexyakunin.com\/2010\/03\/nice-bloom-filter-application.html\">here's<\/a> a short description of how they use bloom filters)<\/li>\n<li><a href=\"https:\/\/plan9.io\/sources\/plan9\/sys\/src\/cmd\/venti\/srv\/bloom.c\">Plan9<\/a> uses a simple hash as proposed in <a href=\"http:\/\/citeseerx.ist.psu.edu\/viewdoc\/summary?doi=10.1.1.152.579&amp;rank=1\">Mitzenmacher 2005<\/a><\/li>\n<li><a href=\"https:\/\/github.com\/sdroege\/snippets\/blob\/master\/snippets\/bloomfilter.c\">Sdroege Bloom filter<\/a> uses fnv1a (included just because I wanted to show one that uses fnv.)<\/li>\n<li><a href=\"https:\/\/github.com\/squid-cache\/squid\/blob\/master\/src\/store_key_md5.cc\">Squid<\/a> uses MD5<\/li>\n<li><a href=\"https:\/\/github.com\/RedisBloom\/RedisBloom\/blob\/be2ef438ddd4343f12d4689eeaed9be21ff491f1\/src\/cuckoo.h#L38\">RedisBloom<\/a> uses murmur<\/li>\n<li><a href=\"https:\/\/github.com\/apache\/spark\/blob\/93251ed77ea1c5d037c64d2292b8760b03c8e181\/common\/sketch\/src\/main\/java\/org\/apache\/spark\/util\/sketch\/BloomFilterImpl.java#L87\">Apache Spark<\/a> uses murmur<\/li>\n<li><a href=\"https:\/\/github.com\/influxdata\/influxdb\/blob\/e20b5e99a6f92614b1b97bda0807ef6c2ab1f7e9\/pkg\/bloom\/bloom.go#L3\">influxdb<\/a> uses xxhash<\/li>\n<\/ul><h3>How big should I make my Bloom filter?<\/h3><p>It's a nice property of Bloom filters that you can modify the false positive rate of your filter. A larger filter will have less false positives, and a smaller one more.<\/p><p>Your false positive rate will be approximately <em>(1-e<sup>-kn\/m<\/sup>)<sup>k<\/sup><\/em>, so you can just plug the number <em>n<\/em> of elements you expect to insert, and try various values of <em>k<\/em> and <em>m<\/em> to configure your filter for your application.<sup><a href=\"https:\/\/llimllib.github.io\/bloomfilter-tutorial#footnote2\">2<\/a><\/sup><\/p><p>This leads to an obvious question:<\/p><h3>How many hash functions should I use?<\/h3><p>The more hash functions you have, the slower your bloom filter, and the quicker it fills up. If you have too few, however, you may suffer too many false positives.<\/p><p>Since you have to pick <em>k<\/em> when you create the filter, you'll have to ballpark what range you expect <em>n<\/em> to be in. Once you have that, you still have to choose a potential <em>m<\/em> (the number of bits) and <em>k<\/em> (the number of hash functions).<\/p><p>It seems a difficult optimization problem, but fortunately, given an <em>m<\/em> and an <em>n<\/em>, we have a function to choose the optimal value of <em>k<\/em>: <em>(m\/n)ln(2)<\/em> <sup><a href=\"https:\/\/llimllib.github.io\/bloomfilter-tutorial#footnote2\">2<\/a>, <a href=\"https:\/\/llimllib.github.io\/bloomfilter-tutorial#footnote3\">3<\/a><\/sup><\/p><p>So, to choose the size of a bloom filter, we:<\/p><ol><li>Choose a ballpark value for <em>n<\/em><\/li>\n<li>Choose a value for <em>m<\/em><\/li>\n<li>Calculate the optimal value of <em>k<\/em><\/li>\n<li>Calculate the error rate for our chosen values of <em>n<\/em>, <em>m<\/em>, and <em>k<\/em>. If it's unacceptable, return to step 2 and change m; otherwise we're done.<\/li>\n<\/ol><h3>How fast and space efficient is a Bloom filter?<\/h3><p>Given a Bloom filter with <em>m<\/em> bits and <em>k<\/em> hashing functions, both insertion and membership testing are <em>O(k)<\/em>. That is, each time you want to add an element to the set or check set membership, you just need to run the element through the <em>k<\/em> hash functions and add it to the set or check those bits.<\/p><p>The space advantages are more difficult to sum up; again it depends on the error rate you're willing to tolerate. It also depends on the potential range of the elements to be inserted; if it is very limited, a deterministic bit vector can do better. If you can't even ballpark estimate the number of elements to be inserted, you may be better off with a hash table or a scalable Bloom filter<sup><a href=\"https:\/\/llimllib.github.io\/bloomfilter-tutorial#footnote4\">4<\/a><\/sup>.<\/p><h3>What can I use them for?<\/h3><p>I'll link you to <a href=\"http:\/\/en.wikipedia.org\/wiki\/Bloom_filter#Examples\">wiki<\/a> instead of copying what they say. <a href=\"https:\/\/archive.org\/details\/pyvideo_402___handling-ridiculous-amounts-of-data-with-probabilistic-data-structures\">C. Titus Brown<\/a> also has an excellent talk on an application of Bloom filters to bioinformatics.<\/p><h3>References<\/h3><p><a name=\"footnote1\" id=\"footnote1\">1:<\/a> <a href=\"http:\/\/citeseer.ist.psu.edu\/viewdoc\/download;jsessionid=6CA79DD1A90B3EFD3D62ACE5523B99E7?doi=10.1.1.127.9672&amp;rep=rep1&amp;type=pdf\">Network Applications of Bloom Filters: A Survey<\/a>, Broder and Mitzenmacher. An excellent overview.<\/p><p><a name=\"footnote2\" id=\"footnote2\">2:<\/a> <a href=\"http:\/\/en.wikipedia.org\/wiki\/Bloom_filter#Probability_of_false_positives\">Wikipedia<\/a>, which has an excellent and comprehensive page on Bloom filters<\/p><p><a name=\"footnote3\" id=\"footnote3\">3:<\/a> <a href=\"http:\/\/citeseerx.ist.psu.edu\/viewdoc\/summary?doi=10.1.1.152.579&amp;rank=1\">Less Hashing, Same Performance<\/a>, Kirsch and Mitzenmacher<\/p><p><a name=\"footnote4\" id=\"footnote4\">4:<\/a> <a href=\"http:\/\/gsd.di.uminho.pt\/members\/cbm\/ps\/dbloom.pdf\">Scalable Bloom Filters<\/a>, Almeida et al<\/p>",
				"created_at": "2022-02-21T02:52:32+0000",
				"updated_at": "2022-02-21T02:52:32+0000",
				"published_at": null,
				"published_by": null,
				"starred_at": null,
				"annotations": [],
				"mimetype": "text\/html; charset=utf-8",
				"language": null,
				"reading_time": 4,
				"domain_name": "llimllib.github.io",
				"preview_picture": null,
				"http_status": "200",
				"headers": {
					"connection": "keep-alive",
					"content-length": "15544",
					"server": "GitHub.com",
					"content-type": "text\/html; charset=utf-8",
					"permissions-policy": "interest-cohort=()",
					"x-origin-cache": "HIT",
					"last-modified": "Fri, 18 Feb 2022 16:26:38 GMT",
					"access-control-allow-origin": "*",
					"etag": "\"620fc8be-3cb8\"",
					"expires": "Mon, 21 Feb 2022 03:02:32 GMT",
					"cache-control": "max-age=600",
					"x-proxy-cache": "MISS",
					"x-github-request-id": "94CE:2083:F0FE59:17533CB:6212FE70",
					"accept-ranges": "bytes",
					"date": "Mon, 21 Feb 2022 02:52:32 GMT",
					"via": "1.1 varnish",
					"age": "0",
					"x-served-by": "cache-fty21328-FTY",
					"x-cache": "MISS",
					"x-cache-hits": "0",
					"x-timer": "S1645411952.075674,VS0,VE23",
					"vary": "Accept-Encoding",
					"x-fastly-request-id": "766254540fd30dfedc5d3c38dea46857735ce110"
				},
				"_links": {
					"self": {
						"href": "\/api\/entries\/3"
					}
				}
			},
			{
				"is_archived": 0,
				"is_starred": 0,
				"user_name": "justin",
				"user_email": "justinbrooks@fastmail.com",
				"user_id": 2,
				"tags": [],
				"is_public": false,
				"id": 2,
				"uid": null,
				"title": "Robin Hood Hashing should be your default Hash Table implementation",
				"url": "https:\/\/www.sebastiansylvan.com\/post\/robin-hood-hashing-should-be-your-default-hash-table-implementation\/",
				"hashed_url": "8f1c576e98dc5fc353c85175ae5e88fd119720ac",
				"origin_url": null,
				"given_url": "https:\/\/www.sebastiansylvan.com\/post\/robin-hood-hashing-should-be-your-default-hash-table-implementation\/",
				"hashed_given_url": "8f1c576e98dc5fc353c85175ae5e88fd119720ac",
				"archived_at": null,
				"content": "<div id=\"toc\" class=\"pure-u-1 pure-u-md-1-4\"><small class=\"toc-label\">Contents<\/small><\/div><section class=\"post\"><sup>8<\/sup>\/May 2013<p>There’s a neat variation on open-addressing based hash tables called <a href=\"https:\/\/www.google.com\/url?sa=t&amp;rct=j&amp;q=&amp;esrc=s&amp;frm=1&amp;source=web&amp;cd=1&amp;cad=rja&amp;sqi=2&amp;ved=0CDAQFjAA&amp;url=https%3A%2F%2Fcs.uwaterloo.ca%2Fresearch%2Ftr%2F1986%2FCS-86-14.pdf&amp;ei=RJqJUcHZH8HuigKGsoHQDw&amp;usg=AFQjCNEyXJn73zNas94y_yK55dv--oMmbg&amp;sig2=CRV_bivIwvFsw8c2wz5ZwQ&amp;bvm=bv.46226182,d.cGE\">Robin Hood hashing<\/a>. This technique isn’t very well-known, but it makes a huge practical difference because it both improves performance and space utilization compared to other “standard” hash tables (e.g. <a href=\"http:\/\/en.wikipedia.org\/wiki\/Hash_table\">chaining<\/a>). It also eliminates the major downside of other open addressing hash tables.<\/p><p>Here are the benefits, summarized:<\/p><ul><li>\n<p>High load factors can be used without seriously affecting performance. 0.9 is perfectly reasonable as a default (0.95 or higher works too, it mainly affects insertion cost a bit).<\/p>\n<\/li>\n<li>\n<p>No linked lists or other extra pointers. This reduces cache misses and storage overhead. Your underlying structure can be a simple flat array since it’s just open addressing under the hood.<\/p>\n<\/li>\n<li>\n<p>Lookup and insertion logic is fast. Again, no linked lists to traverse or other complications, just a linear probe sequence with a few checks per element.<\/p>\n<\/li>\n<li>\n<p>Unlike other open addressing schemes, looking for non-existent elements is still fast.<\/p>\n<\/li>\n<\/ul><p>For a simple benchmark where I inserted 100k english words into a map, then deleted 10% of them, and then looked them all up again, the timings for my simple Robin Hood hash table was <strong>23%<\/strong>, <strong>66%<\/strong> and **25% **lower for insertions, deletions and lookups respectively compared to the VS 2012 std::unordered_map, it did this using <strong>30%<\/strong> less memory overall.<\/p><p>So the basic idea is to take normal open addressing, but use one clever trick in order to drastically reduce the variance of the expected average and maximum probe lengths. We’ll se later why reducing variance is so important. To give you an idea how Robin Hood Hashing improves things, the probe length variance for a RH table at a load factor of 0.9 is 0.98, whereas for a normal open addressing scheme it’s 16.2. At a load factor of 0.99 it’s 1.87 and 194 respectively.<\/p><p><strong>The clever trick is just this<\/strong>: when you probe for a position to insert a new element, if the probe length for the existing element is less than the current probe length for the element being inserted, swap the two elements and keep going.<\/p><p>That way elements that were inserted early and thus “lucked out” on their probe lengths, will gradually be moved away from their preferred slot as new elements come in that could make better use of that place in the table (hence the name - the insertion “takes from the rich”, i.e. the elements with low probe counts). It leads to an “evening out” of the probe lengths.<\/p><p>Why is low variance better? Well, with modern cache architectures a probe count of 1 isn’t really much faster than a probe count of 3, because the main cost is fetching the cache line, so the ideal scenario is for all elements to have the same probe count, and having that probe count fitting within one cache line.<\/p><p>It turns out that Robin Hood hashing has the same expected probe count as normal open addressing (about 2.55) - it just has substantially less variance, and therefore ends up with far fewer cache misses. Yes, there are fewer elements that can early out after 1 probe, but there also far fewer elements that end up needing to fetch multiple cache lines because of long probe lengths.<\/p><p>Furthermore, the expected value of the <em>longest<\/em> probe sequence approaches about 6 for a load of 0.9 (it’s not actually constant, but grows very, very slowly - <a href=\"http:\/\/www.google.com\/url?sa=t&amp;rct=j&amp;q=&amp;esrc=s&amp;frm=1&amp;source=web&amp;cd=2&amp;cad=rja&amp;sqi=2&amp;ved=0CDcQFjAB&amp;url=http%3A%2F%2Fciteseerx.ist.psu.edu%2Fviewdoc%2Fsummary%3Fdoi%3D10.1.1.130.6339&amp;ei=RJqJUcHZH8HuigKGsoHQDw&amp;usg=AFQjCNFquQO-Wa7uCGLwFTdLKpEHDBGsig&amp;sig2=DfIIJzRj2YXIRyLiHGCHUA&amp;bvm=bv.46226182,d.cGE\">see this paper<\/a>), which is pretty reasonable.<\/p><p>So now you’re probably thinking that this sounds good, but in the back of your mind you know that normal open addressing tables do pretty well too, but have a major downside in that searching for non-existing elements is troublesome to handle. To allay your fears I’ll first tell you a very simple (but totally practical) solution that is enabled by the low variance, and then we’ll see the even better version later.<\/p><p>First a recap. The usual problem is this: since the search algorithm terminates when you find an “empty” slot in the underlying array, it can take a very long time to determine that an element doesn’t exist in the array when the table grows full.<\/p><p>How does Robin Hood hashing solve this? Well the simplest solution is to exploit the fact that the expected longest probe count is low (~6). Just modify the standard search algorithm to ignore empty slots (rather than terminate the search) and keep going until you’ve probed longer than the known maximum probe length for the whole table. This maximum probe length will be small, with a very high probability, even for very loaded tables.<\/p><p>This solution would obviously be inefficient for the standard open addressing scheme, since the expected longest probe count is much higher (e.g. at a load of 0.9 and ~64K elems it is about 70).<\/p><p>In order to know what the probe count of an existing element is (which is key to the algorithm) we could just re-hash the element to re-compute its “desired” slot index and then subtract this from its actual location. A faster way is to simply cache the hash value for each key.<\/p><p>Storing the hash value is generally a sensible strategy anyway, because it means you have a fast early-out for comparisons, so we take that approach here. In other words, the hash table elements consist of a 32 bit hash value, the key, and the value. For my implementation I stored the hash values in a separate array in order to get more hash probes per cache line (at the expense of a second mandatory cache miss to actually fetch the key). This gave a small speed-up for my test where the key size was large (sizeof(std::string)), but there’s a #define in the code to put the hash value alongside its key.<\/p><p>In order to indicate that a slot is unused, we modify the hash function to never return 0, and use a stored hash value of 0 to mean “uninitialized slot”.<\/p><p>First, let’s look at the insertion algorithm, since this is where the actual Robin Hood trick comes in.<\/p><div class=\"highlight chroma\"><table class=\"lntable\"><tr><td class=\"lntd\">\n<pre class=\"language-cpp\" data-lang=\"cpp\"> 1 2 3 4 5 6 7 8 9101112131415161718192021222324252627282930313233<\/pre><\/td>\n<td class=\"lntd\">\n<pre class=\"language-cpp\" data-lang=\"cpp\">void insert_helper(uint32_t hash, Key&amp;&amp; key, Value&amp;&amp; val)\n{\n        int pos = desired_pos(hash);\n        int dist = 0;\n        for(;;)\n        {                       \n                if(elem_hash(pos) == 0)\n                {                       \n                        construct(pos, hash, move(key), move(val));\n                        return;\n                }\n                \/\/ If the existing elem has probed less than us, \n                \/\/ then swap places with existing\n                \/\/ elem, and keep going to find another slot for that elem.\n                int existing_dist = probe_distance(elem_hash(pos), pos);\n                if (existing_dist &lt; dist)\n                {       \n                        if(is_deleted(elem_hash(pos)))\n                        {\n                                construct(pos, hash, move(key), move(val));\n                                return;\n                        }                       \n                        swap(hash, elem_hash(pos));\n                        swap(key, buffer[pos].key);\n                        swap(val, buffer[pos].value);\n                        dist = existing_dist;\n                }\n                pos = (pos+1) &amp; mask;\n                ++dist;                 \n        }\n}<\/pre><\/td>\n<\/tr><\/table><\/div><p>The algorithm is pretty simple. We simply loop until we’ve found an uninitialized slot (hash value == 0). If we found an existing slot whose probe distance is less than our current probe count (‘dist’), we swap places and continue. Note: using move semantics here matters (e.g. for efficient swapping).<\/p><p>In order to delete an element, we follow the same strategy as for normal open addressing and mark the slot as a tombstone. Tombstones are treated specially in the insert algorithm. We overwrite the tombstone only when we would’ve wanted to swap anyway (see the check for is_deleted above).<\/p><p>We must mark the tombstone using a whole bit rather than just reserving a single hash value (like we did for uninitialized slots), because we need to know the probe count of the tombstone.<\/p><div class=\"highlight chroma\"><table class=\"lntable\"><tr><td class=\"lntd\">\n<pre class=\"language-cpp\" data-lang=\"cpp\"> 1 2 3 4 5 6 7 8 9101112<\/pre><\/td>\n<td class=\"lntd\">\n<pre class=\"language-cpp\" data-lang=\"cpp\">bool erase(const Key&amp; key)\n{\n        const uint32_t hash = hash_key(key);\n        const int ix = lookup_index(key);\n        if (ix == -1) return false;\n        buffer[ix].~elem();\n        elem_hash(ix) |= 0x80000000; \/\/ mark as deleted\n        --num_elems;\n        return true;\n}<\/pre><\/td>\n<\/tr><\/table><\/div><p>This is all pretty straightforward. We first find the element, then we call its destructor, and finally set the “tombstone” bit.<\/p><p>And lastly, the lookup algorithm:<\/p><div class=\"highlight chroma\"><table class=\"lntable\"><tr><td class=\"lntd\">\n<pre class=\"language-cpp\" data-lang=\"cpp\"> 1 2 3 4 5 6 7 8 9101112131415161718<\/pre><\/td>\n<td class=\"lntd\">\n<pre class=\"language-cpp\" data-lang=\"cpp\">int lookup_index(const Key&amp; key) const\n{\n        const uint32_t hash = hash_key(key);\n        int pos = desired_pos(hash);\n        int dist = 0;\n        for(;;)\n        {                                                       \n                if (elem_hash(pos) == 0) \n                        return -1;\n                else if (dist &gt; probe_distance(elem_hash(pos), pos)) \n                        return -1;\n                else if (elem_hash(pos) == hash &amp;&amp; buffer[pos].key == key) \n                        return pos;                             \n                pos = (pos+1) &amp; mask;\n                ++dist;\n        }\n}<\/pre><\/td>\n<\/tr><\/table><\/div><p>This just finds the desired position of the element using the hash, then probes linearly from there on in. There are two conditions to signify that the element doesn’t exist, and finally one check to see if we’ve found the element.<\/p><p>The first exit condition checks for completely uninitialized elements. This is because if the element we are looking for had probed an uninitialized slot during insertion, it would have simply been place there. So the existence of an uninitialized slot along our probe sequence means the element must not be in the table.<\/p><p>The second condition is more interesting. This is our replacement for simple checking the probe distance against a table-wide maximum probe count. We <em>know<\/em> that when we probe an element during insertion, the one with the longer probe count of the two gets to keep the slot. So if we’re looking for an element that exists, we should expect to never see an existing element with a shorter probe count then our current count (if that <em>had<\/em> happened, there would’ve been a swap during insertion!).<\/p><p>In other words, we early out as soon as our current probe count exceeds the probe count of the stored element. Since the average probe count for stored elements is 2.55, we can exit pretty quickly for non-existent elements (much earlier than stopping after a table-wide maximum probe count).<\/p><p>This second condition is why we need to maintain the hash value even for tomb stones. Imagine what would happen if we simply marked the slot as uninitialized when it was deleted - the next insertion that comes across it would simply occupy it thereby getting an unfairly low probe count, and more importantly messing up the second condition above. Instead, we just flag deleted elements as tombstones, and only reuse the slot in the insertion algorithm if a swap would’ve happened anyway.<\/p><p>Finally, the last condition simply compares the hashes and the keys and returns the found element.<\/p><p>Here’s a the full code for this blog post: <a href=\"https:\/\/gist.github.com\/ssylvan\/5538011\">code<\/a>. I should note that I wrote this specific implementation for this blog post, so it hasn’t been extensively used or tested (or optimized). It’s quite likely that there are bugs.<\/p><div class=\"paging\">More Reading<p>Newer\/\/ <a class=\"paging-link\" href=\"https:\/\/www.sebastiansylvan.com\/post\/language-design-deal-breakers\/\">Language Design Deal Breakers<\/a><\/p><p>Older\/\/ <a class=\"paging-link\" href=\"https:\/\/www.sebastiansylvan.com\/post\/thoughts-on-game-data-formats\/\">Thoughts on Game Data Formats<\/a><\/p><\/div><\/section><p><a href=\"http:\/\/www.htmlcommentbox.com\">Comment Form<\/a> is loading comments...<\/p>",
				"created_at": "2022-02-20T19:40:33+0000",
				"updated_at": "2022-02-20T19:40:33+0000",
				"published_at": null,
				"published_by": [
					""
				],
				"starred_at": null,
				"annotations": [],
				"mimetype": "text\/html; charset=UTF-8",
				"language": null,
				"reading_time": 9,
				"domain_name": "www.sebastiansylvan.com",
				"preview_picture": null,
				"http_status": "200",
				"headers": {
					"date": "Sun, 20 Feb 2022 19:40:33 GMT",
					"server": "Apache",
					"last-modified": "Sat, 26 Dec 2020 04:58:06 GMT",
					"etag": "\"73d4-5b756e2f950ea\"",
					"accept-ranges": "bytes",
					"content-length": "29652",
					"cache-control": "max-age=86400",
					"expires": "Mon, 21 Feb 2022 19:40:33 GMT",
					"vary": "Accept-Encoding",
					"content-type": "text\/html; charset=UTF-8",
					"via": "e1s"
				},
				"_links": {
					"self": {
						"href": "\/api\/entries\/2"
					}
				}
			}
		]
	}
}